begin_compilation
  name " HotSpotCompilation-5173[Towers.buildTowerAt(int, int)]"
  method "HotSpotCompilation-5173[Towers.buildTowerAt(int, int)]"
  date 1714038240728
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?85 v54 v188 v74 ?95 i63 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 v54 v264 v414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i10 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.06666666666666667
stamp: void
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v55 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v56 #falseSuccessor: v55  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v56 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a530 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a530  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 ?45 ?52 v541 ?79 ?85 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a530 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers.piles
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 1]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n# Towers$TowersDisk[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
lastLocationAccess: - 
=== Succesors ===
next: i531 
=== Usages ===
a107 v542 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v541 lastLocationAccess: - #next: i531  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 ?52 v543 v149 ?79 ?45 ?85 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v217 i531 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a530 
=== Succesors ===
=== Usages ===
i531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i531 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-27915|0xffffffffffff92f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v542 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
v149 
=== Predecessor ===
a530 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v542 lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i531 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i531  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 j216 v476 v265 v441 v291 v331 v351 v415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v182 
falseSuccessor: v184 
=== Usages ===
=== Predecessor ===
i531 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v182 #falseSuccessor: v184  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a532 
=== Usages ===
v157 v136 
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a532  <|@  <|@
f <@~|@floating>@ <|@
tid a107 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 1]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a# Towers$TowersDisk[]
=== Inputs ===
value: a530 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a530  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a107 
index: i2 
=== Succesors ===
=== Usages ===
v136 a532 v157 a534 j278 j325 j428 j470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a532 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n# Towers$TowersDisk
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
lastLocationAccess: - 
=== Succesors ===
next: v70 
=== Usages ===
a123 v164 v191 v545 
=== Predecessor ===
v182 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v543 lastLocationAccess: - #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a532 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a532  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.015600238878901168
stamp: void
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v68 
=== Usages ===
=== Predecessor ===
a532 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v69 #falseSuccessor: v68  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 11]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i533 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i533  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a532 
=== Succesors ===
=== Usages ===
i533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i533 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers$TowersDisk.size
memoryOrder: PLAIN
nodeSourcePosition: at Towers$TowersDisk.getSize() [bci: 1]
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
lastLocationAccess: - 
=== Succesors ===
next: v210 
=== Usages ===
v74 
=== Predecessor ===
v68 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v545 lastLocationAccess: - #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i533 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i533  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v208 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
i533 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v208 #falseSuccessor: v209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v76 v78 
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v76 v78 #next: v275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j229 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j229 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j256 
=== Usages ===
v550 v551 
=== Predecessor ===
v275 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j256  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j229 
index: - 
=== Succesors ===
=== Usages ===
j256 v258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j229 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j256 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
lastLocationAccess: - 
=== Succesors ===
next: j257 
=== Usages ===
j232 v552 v553 a240 v554 v555 v556 
=== Predecessor ===
j229 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v550 lastLocationAccess: - #next: j257  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j229 
index: - 
=== Succesors ===
=== Usages ===
j257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j229 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j257 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
lastLocationAccess: - 
=== Succesors ===
next: v236 
=== Usages ===
v233 
=== Predecessor ===
j256 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v551 lastLocationAccess: - #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j232 j387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
=== Inputs ===
x: j256 
y: j228 
=== Succesors ===
=== Usages ===
v233 v258 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j256 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j257 
y: j232 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j257 y: j232  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v263 v413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:431) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 v410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: meta{HotSpotType<LTowers$TowersDisk;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<LTowers$TowersDisk;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a241 a395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v234 
=== Usages ===
=== Predecessor ===
j257 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v235 #falseSuccessor: v234  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a241 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a241  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i3 
=== Succesors ===
=== Usages ===
?79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i3  <|@  <|@
tid a94 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.size int:12>, HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.next Towers$TowersDisk:16>]
hasIdentity: true
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
objectId: 0
stamp: a!# Towers$TowersDisk
type: HotSpotType<LTowers$TowersDisk;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?79 ?95 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a123 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a# Towers$TowersDisk
=== Inputs ===
value: a532 
=== Succesors ===
=== Usages ===
?79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a532  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a94 
values: i3 - 
=== Succesors ===
=== Usages ===
?79 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a94 values: i3 -  <|@  <|@
tid ?79 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?85 
values: a1 a94 i2 a123 
virtualObjectMappings: ?95 
=== Succesors ===
=== Usages ===
v538 a241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?85 values: a1 a94 i2 a123 virtualObjectMappings: ?95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a241 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?79 
arguments: v227 
=== Succesors ===
next: v538 
=== Usages ===
v538 a254 
=== Predecessor ===
v235 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?79 arguments: v227 #next: v538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-69489|0xfffffffffffef08f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?79 
object: a241 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
a241 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?79 object: a241 #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
lastLocationAccess: - 
value: j232 
stateAfter: - 
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v550 lastLocationAccess: - value: j232 stateAfter: - #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j256 
index: - 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j256 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
address: v554 
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v554 #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j256 
index: - 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j256 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
lastLocationAccess: - 
value: j237 
stateAfter: - 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v552 lastLocationAccess: - value: j237 stateAfter: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j256 
index: - 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j256 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v556 
lastLocationAccess: - 
value: v524 
stateAfter: - 
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v556 lastLocationAccess: - value: v524 stateAfter: - #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j256 
index: - 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j256 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v553 lastLocationAccess: - value: i10 stateAfter: - #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j256 
index: - 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j256 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v555 
lastLocationAccess: - 
value: j214 
stateAfter: - 
=== Succesors ===
next: a240 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v555 lastLocationAccess: - value: j214 stateAfter: - #next: a240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j256 
=== Succesors ===
next: v243 
=== Usages ===
a254 
=== Predecessor ===
v265 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j256 #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
a240 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v244 
values: a240 a241 
=== Succesors ===
=== Usages ===
v547 a192 v546 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v244 values: a240 a241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v243 v245 
=== Succesors ===
next: v191 
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v243 v245 #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a254 
index: - 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
lastLocationAccess: - 
value: a532 
stateAfter: - 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v547 lastLocationAccess: - value: a532 stateAfter: - #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a254 
index: - 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v546 lastLocationAccess: - value: i3 stateAfter: - #next: v193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a192 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a254 
=== Succesors ===
next: v321 
=== Usages ===
a135 a324 
=== Predecessor ===
v193 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a254 #next: v321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j277 
=== Usages ===
=== Predecessor ===
a192 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j277 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j278 
=== Usages ===
v557 v559 v560 
=== Predecessor ===
v321 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v543 
=== Succesors ===
next: i307 
=== Usages ===
v558 
=== Predecessor ===
j277 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v543 #next: i307  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
i307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i307 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
lastLocationAccess: - 
=== Succesors ===
next: v282 
=== Usages ===
v315 
=== Predecessor ===
j278 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v557 lastLocationAccess: - #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 v370 v377 v460 v510 v516 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i307 
y: i314 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i307 y: i314  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j306 j367 j452 j507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v280 
=== Usages ===
=== Predecessor ===
i307 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v281 #falseSuccessor: v280  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a308 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a308  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
a308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a308 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
=== Succesors ===
next: v289 
=== Usages ===
a309 v316 
=== Predecessor ===
v280 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a308 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a308  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v316 
=== Succesors ===
trueSuccessor: v288 
falseSuccessor: v284 
=== Usages ===
=== Predecessor ===
a308 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v316 #trueSuccessor: v288 #falseSuccessor: v284  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v288 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j310 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j310  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
j310 v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j310 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
=== Succesors ===
next: v294 
=== Usages ===
v291 j306 v561 
=== Predecessor ===
v284 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j310 
y: j214 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j310 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid a309 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a308 
=== Succesors ===
=== Usages ===
j296 v299 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a308  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v291 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v292 
=== Usages ===
=== Predecessor ===
j310 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v291 #trueSuccessor: v293 #falseSuccessor: v292  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a309 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a309 #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j311 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j311  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
j311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j311 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
=== Succesors ===
next: j296 
=== Usages ===
v561 
=== Predecessor ===
v292 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - #next: j296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a309 
=== Succesors ===
next: v312 
=== Usages ===
v312 
=== Predecessor ===
j311 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a309 #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j311 
index: j310 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j311 index: j310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
lastLocationAccess: - 
value: j296 
stateAfter: - 
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
j296 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v561 lastLocationAccess: - value: j296 stateAfter: - #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j310 
y: j305 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j310 y: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: j306 
stateAfter: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: j306 stateAfter: - #next: v298  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v313 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v285 v287 v298 v300 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v285 v287 v298 v300 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Compress
stamp: n!# Towers$TowersDisk
=== Inputs ===
value: a192 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v182 
address: v543 
lastLocationAccess: - 
value: a135 
stateAfter: - 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v182 address: v543 lastLocationAccess: - value: a135 stateAfter: - #next: v383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j323 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j323 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a324 
=== Usages ===
v562 v563 
=== Predecessor ===
v383 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a192 
=== Succesors ===
next: j325 
=== Usages ===
j326 
=== Predecessor ===
j323 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a192 #next: j325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:192) [bci: 36] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v543 
=== Succesors ===
next: j326 
=== Usages ===
j327 j340 
=== Predecessor ===
a324 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v543 #next: j326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a324 
=== Succesors ===
next: v330 
=== Usages ===
j327 v331 
=== Predecessor ===
j325 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a324 #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid j327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j325 
y: j326 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j325 y: j326  <|@  <|@
f <@~|@floating>@ <|@
tid j361 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 v504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
x: j327 
y: j361 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j327 y: j361  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 v515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j340 j483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j338 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 140438306553856
stableDimension: 0
stamp: i64 [140438306553856]
stampKind: i64
value: long[140438306553856|0x7fba57600000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j363 v565 j505 v581 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v362 
=== Succesors ===
trueSuccessor: v329 
falseSuccessor: v328 
=== Usages ===
=== Predecessor ===
j326 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v362 #trueSuccessor: v329 #falseSuccessor: v328  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v329 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j326 
y: j214 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j326 y: j214  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v331 
=== Succesors ===
trueSuccessor: v336 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v331 #trueSuccessor: v336 #falseSuccessor: v332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v336 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i368 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i368  <|@  <|@
f <@~|@floating>@ <|@
tid j340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j325 
y: i339 
=== Succesors ===
=== Usages ===
j363 v565 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j325 y: i339  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j340 
index: j338 
=== Succesors ===
=== Usages ===
i368 i369 v370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j340 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: v344 
=== Usages ===
v376 
=== Predecessor ===
v332 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i368 
y: i375 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i368 y: i375  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v376 
=== Succesors ===
trueSuccessor: v343 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
i368 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v376 #trueSuccessor: v343 #falseSuccessor: v341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i369 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: v349 
=== Usages ===
v377 
=== Predecessor ===
v345 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i369 
y: i314 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i369 y: i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v377 
=== Succesors ===
trueSuccessor: v348 
falseSuccessor: v346 
=== Usages ===
=== Predecessor ===
i369 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v377 #trueSuccessor: v348 #falseSuccessor: v346  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
value: i314 
stateAfter: - 
=== Succesors ===
next: j371 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - value: i314 stateAfter: - #next: j371  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j323 
index: - 
=== Succesors ===
=== Usages ===
j371 v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j371 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v562 
lastLocationAccess: - 
=== Succesors ===
next: v354 
=== Usages ===
v351 j367 v564 
=== Predecessor ===
v370 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v562 lastLocationAccess: - #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j371 
y: j214 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j371 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid j363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j340 
y: j338 
=== Succesors ===
=== Usages ===
v358 v373 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j340 y: j338  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v353 
falseSuccessor: v352 
=== Usages ===
=== Predecessor ===
j371 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v353 #falseSuccessor: v352  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j363 
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j363 #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v358 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j372 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j372  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j323 
index: - 
=== Succesors ===
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j372 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
lastLocationAccess: - 
=== Succesors ===
next: v373 
=== Usages ===
v564 
=== Predecessor ===
v352 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v563 lastLocationAccess: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j372 
index: j371 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j372 index: j371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
value: j363 
stateAfter: - 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
j372 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - value: j363 stateAfter: - #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid j367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j371 
y: j305 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j371 y: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v562 
lastLocationAccess: - 
value: j367 
stateAfter: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v562 lastLocationAccess: - value: j367 stateAfter: - #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v333 v335 v342 v347 v357 v359 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v333 v335 v342 v347 v357 v359 #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 i63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
stamp: i32
=== Inputs ===
x: i3 
y: i26 
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v334 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i63 i27 i27 i27 i27 i27 i27 
=== Succesors ===
=== Usages ===
?9 v11 ?52 i27 v196 v40 ?100 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i63 i27 i27 i27 i27 i27 i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 6
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: v16 
=== Usages ===
i92 v14 v28 v529 v525 v526 v527 v528 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i92 
y: i10 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i92 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0714285714285714
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v14 #falseSuccessor: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a534 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a534 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n# Towers$TowersDisk
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
lastLocationAccess: - 
=== Succesors ===
next: v35 
=== Usages ===
a147 v167 v199 v544 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v543 lastLocationAccess: - #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a534 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a534  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.015600238878901168
stamp: void
=== Inputs ===
condition: v167 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v33 
=== Usages ===
=== Predecessor ===
a534 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v167 #trueSuccessor: v34 #falseSuccessor: v33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 11]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i535 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i535  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a534 
=== Succesors ===
=== Usages ===
i535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i535 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers$TowersDisk.size
memoryOrder: PLAIN
nodeSourcePosition: at Towers$TowersDisk.getSize() [bci: 1]
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v544 
lastLocationAccess: - 
=== Succesors ===
next: v205 
=== Usages ===
v40 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v544 lastLocationAccess: - #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i92 
y: i535 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i92 y: i535  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v203 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
i535 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v203 #falseSuccessor: v204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v203 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v42 v44 
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v42 v44 #next: v425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j384 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j384 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j407 
=== Usages ===
v566 v567 
=== Predecessor ===
v425 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j407  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j384 
index: - 
=== Succesors ===
=== Usages ===
j407 v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j407 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: j408 
=== Usages ===
j387 v568 v569 a394 v570 v571 v572 
=== Predecessor ===
j384 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - #next: j408  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j384 
index: - 
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
lastLocationAccess: - 
=== Succesors ===
next: v391 
=== Usages ===
v388 
=== Predecessor ===
j407 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v567 lastLocationAccess: - #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid j387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
=== Inputs ===
x: j407 
y: j228 
=== Succesors ===
=== Usages ===
v388 v409 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j407 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j408 
y: j387 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j408 y: j387  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v388 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v389 
=== Usages ===
=== Predecessor ===
j408 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v388 #trueSuccessor: v390 #falseSuccessor: v389  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a395 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a395  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i92 
=== Succesors ===
=== Usages ===
?45 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i92  <|@  <|@
tid a99 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.size int:12>, HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.next Towers$TowersDisk:16>]
hasIdentity: true
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
objectId: 1
stamp: a!# Towers$TowersDisk
type: HotSpotType<LTowers$TowersDisk;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?45 ?100 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a147 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a# Towers$TowersDisk
=== Inputs ===
value: a534 
=== Succesors ===
=== Usages ===
?45 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a534  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a99 
values: i92 - 
=== Succesors ===
=== Usages ===
?45 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a99 values: i92 -  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?52 
values: a1 a99 i2 a147 
virtualObjectMappings: ?100 
=== Succesors ===
=== Usages ===
v540 a395 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?52 values: a1 a99 i2 a147 virtualObjectMappings: ?100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a395 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?45 
arguments: v227 
=== Succesors ===
next: v540 
=== Usages ===
v540 a405 
=== Predecessor ===
v390 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?45 arguments: v227 #next: v540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-107889|0xfffffffffffe5a8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?45 
object: a395 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
a395 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?45 object: a395 #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
value: j387 
stateAfter: - 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - value: j387 stateAfter: - #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
address: v570 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v570 #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
lastLocationAccess: - 
value: j237 
stateAfter: - 
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v568 lastLocationAccess: - value: j237 stateAfter: - #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
value: v524 
stateAfter: - 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - value: v524 stateAfter: - #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v569 lastLocationAccess: - value: i10 stateAfter: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
lastLocationAccess: - 
value: j214 
stateAfter: - 
=== Succesors ===
next: a394 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v571 lastLocationAccess: - value: j214 stateAfter: - #next: a394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j407 
=== Succesors ===
next: v397 
=== Usages ===
a405 
=== Predecessor ===
v415 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j407 #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
a394 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v398 
values: a394 a395 
=== Succesors ===
=== Usages ===
v549 a200 v548 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v398 values: a394 a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v397 v399 
=== Succesors ===
next: v199 
=== Usages ===
a405 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v397 v399 #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a405 
index: - 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
lastLocationAccess: - 
value: a534 
stateAfter: - 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v549 lastLocationAccess: - value: a534 stateAfter: - #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a405 
index: - 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
lastLocationAccess: - 
value: i92 
stateAfter: - 
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v548 lastLocationAccess: - value: i92 stateAfter: - #next: v201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a200 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a405 
=== Succesors ===
next: v466 
=== Usages ===
a156 a469 
=== Predecessor ===
v201 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a405 #next: v466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j427 
=== Usages ===
=== Predecessor ===
a200 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j427 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j428 
=== Usages ===
v573 v575 v576 
=== Predecessor ===
v466 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v543 
=== Succesors ===
next: i453 
=== Usages ===
v574 
=== Predecessor ===
j427 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v543 #next: i453  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
lastLocationAccess: - 
=== Succesors ===
next: v432 
=== Usages ===
v460 
=== Predecessor ===
j428 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v573 lastLocationAccess: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i453 
y: i314 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i453 y: i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v460 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
i453 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v460 #trueSuccessor: v431 #falseSuccessor: v430  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v431 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a454 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a454  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j428 
index: - 
=== Succesors ===
=== Usages ===
a454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j428 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a454 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
=== Succesors ===
next: v439 
=== Usages ===
a455 v461 
=== Predecessor ===
v430 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a454 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a454  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v461 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
a454 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v461 #trueSuccessor: v438 #falseSuccessor: v434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j456 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
j456 v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
lastLocationAccess: - 
=== Succesors ===
next: v444 
=== Usages ===
v441 j452 v577 
=== Predecessor ===
v434 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v575 lastLocationAccess: - #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j456 
y: j214 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j456 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid a455 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a454 
=== Succesors ===
=== Usages ===
j446 v449 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a454  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
j456 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v443 #falseSuccessor: v442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a455 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a455 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j457 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
j457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j457 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
=== Succesors ===
next: j446 
=== Usages ===
v577 
=== Predecessor ===
v442 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - #next: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a455 
=== Succesors ===
next: v458 
=== Usages ===
v458 
=== Predecessor ===
j457 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a455 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j457 
index: j456 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j457 index: j456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
lastLocationAccess: - 
value: j446 
stateAfter: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
j446 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v577 lastLocationAccess: - value: j446 stateAfter: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j456 
y: j305 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j456 y: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
lastLocationAccess: - 
value: j452 
stateAfter: - 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v575 lastLocationAccess: - value: j452 stateAfter: - #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v459 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v435 v437 v448 v450 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v435 v437 v448 v450 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid a156 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Compress
stamp: n!# Towers$TowersDisk
=== Inputs ===
value: a200 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v182 
address: v543 
lastLocationAccess: - 
value: a156 
stateAfter: - 
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v182 address: v543 lastLocationAccess: - value: a156 stateAfter: - #next: v522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j468 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a469 
=== Usages ===
v578 v579 
=== Predecessor ===
v522 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a200 
=== Succesors ===
next: j470 
=== Usages ===
j471 
=== Predecessor ===
j468 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a200 #next: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:192) [bci: 36] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v543 
=== Succesors ===
next: j471 
=== Usages ===
j472 j483 
=== Predecessor ===
a469 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v543 #next: j471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a469 
=== Succesors ===
next: v475 
=== Usages ===
j472 v476 
=== Predecessor ===
j470 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a469 #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid j472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j470 
y: j471 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j470 y: j471  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
x: j472 
y: j361 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j472 y: j361  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
stamp: i32
=== Inputs ===
x: i92 
y: i26 
=== Succesors ===
=== Usages ===
i92 i92 i92 i92 i92 i92 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i92 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v473 
=== Usages ===
=== Predecessor ===
j471 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v474 #falseSuccessor: v473  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j471 
y: j214 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j471 y: j214  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v477 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v481 #falseSuccessor: v477  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 5
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i508 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i508  <|@  <|@
f <@~|@floating>@ <|@
tid j483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j470 
y: i339 
=== Succesors ===
=== Usages ===
j505 v581 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j470 y: i339  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j483 
index: j338 
=== Succesors ===
=== Usages ===
i508 i509 v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j483 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i508 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
=== Succesors ===
next: v487 
=== Usages ===
v515 
=== Predecessor ===
v477 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i508 
y: i375 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i508 y: i375  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v515 
=== Succesors ===
trueSuccessor: v486 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
i508 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v515 #trueSuccessor: v486 #falseSuccessor: v484  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 4
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i509 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
=== Succesors ===
next: v492 
=== Usages ===
v516 
=== Predecessor ===
v488 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i509 
y: i314 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i509 y: i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v516 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v489 
=== Usages ===
=== Predecessor ===
i509 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v516 #trueSuccessor: v491 #falseSuccessor: v489  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
value: i314 
stateAfter: - 
=== Succesors ===
next: j511 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - value: i314 stateAfter: - #next: j511  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
j511 v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j511 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
=== Succesors ===
next: v497 
=== Usages ===
v494 j507 v580 
=== Predecessor ===
v510 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j511 
y: j214 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j511 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid j505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j483 
y: j338 
=== Succesors ===
=== Usages ===
v501 v513 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j483 y: j338  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v494 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v495 
=== Usages ===
=== Predecessor ===
j511 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v494 #trueSuccessor: v496 #falseSuccessor: v495  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j505 
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j505 #next: v525  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j512 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j512  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
j512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
lastLocationAccess: - 
=== Succesors ===
next: v513 
=== Usages ===
v580 
=== Predecessor ===
v495 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 lastLocationAccess: - #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j512 
index: j511 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
lastLocationAccess: - 
value: j505 
stateAfter: - 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
j512 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v580 lastLocationAccess: - value: j505 stateAfter: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j511 
y: j305 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j511 y: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
value: j507 
stateAfter: - 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - value: j507 stateAfter: - #next: v526  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 2
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v88 v89 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v88 v89 #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i92 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i92  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x984847c7]: UnreachedCode@5[HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>, 22]}
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -53011
stableDimension: 0
stamp: i32 [-53011]
stampKind: i32
value: int[-53011|0xffffffffffff30ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
v209 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -32283
stableDimension: 0
stamp: i32 [-32283]
stampKind: i32
value: int[-32283|0xffffffffffff81e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32 [-53011 - -32283] bits:1...1x0xx000x1110x101
valueDescription: i32
=== Inputs ===
merge: v211 
values: i219 i221 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v211 values: i219 i221  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v211 
values: j214 j222 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v211 values: j214 j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v218 v220 
=== Succesors ===
next: v217 
=== Usages ===
i215 j216 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v218 v220 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i215 
speculation: j216 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i215 speculation: j216  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[.] + 16], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = XOR (x: v21|QWORD[.+], y: v13|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v24|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v32|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v33|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 16], y: v32|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV [v40|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v36|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v39|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = XOR (x: v47|QWORD[.+], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v48|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD[.], y: v39|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v51|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v50|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = ADD (x: v50|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|QWORD, y: v52|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD + v52|QWORD * 1 - 8], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-32283|0xffffffffffff81e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53011|0xffffffffffff30ed], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD, v57|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v57  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?85 v54 v188 v74 ?95 i63 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i10 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 v54 v264 v414 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i10 
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
profileData: PROFILED designatedSuccessorProbability: 0.06666666666666667
stamp: void
=== Inputs ===
condition: v54 
=== Succesors ===
trueSuccessor: v56 
falseSuccessor: v55 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v54 #trueSuccessor: v56 #falseSuccessor: v55  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v89 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v56 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a530 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a530  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Towers
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 ?45 ?52 v541 ?79 ?85 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a530 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers.piles
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 1]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n# Towers$TowersDisk[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
lastLocationAccess: - 
=== Succesors ===
next: i531 
=== Usages ===
a107 v542 
=== Predecessor ===
v55 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v541 lastLocationAccess: - #next: i531  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?9 ?52 v543 v149 ?79 ?45 ?85 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: iload_2
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 i3 
=== Succesors ===
=== Usages ===
v217 i531 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 i3  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a530 
=== Succesors ===
=== Usages ===
i531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i531 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-27915|0xffffffffffff92f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v542 
lastLocationAccess: - 
=== Succesors ===
next: v185 
=== Usages ===
v149 
=== Predecessor ===
a530 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v542 lastLocationAccess: - #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i531 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i2 y: i531  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 j216 v476 v265 v441 v291 v331 v351 v415 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v149 
=== Succesors ===
trueSuccessor: v182 
falseSuccessor: v184 
=== Usages ===
=== Predecessor ===
i531 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v149 #trueSuccessor: v182 #falseSuccessor: v184  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a532 
=== Usages ===
v157 v136 
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a532  <|@  <|@
f <@~|@floating>@ <|@
tid a107 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 1]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a# Towers$TowersDisk[]
=== Inputs ===
value: a530 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a530  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
result [v4|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a107 
index: i2 
=== Succesors ===
=== Usages ===
v136 a532 v157 a534 j278 j325 j428 j470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a107 index: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a532 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n# Towers$TowersDisk
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
lastLocationAccess: - 
=== Succesors ===
next: v70 
=== Usages ===
a123 v164 v191 v545 
=== Predecessor ===
v182 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v543 lastLocationAccess: - #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a532 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a532  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.015600238878901168
stamp: void
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v69 
falseSuccessor: v68 
=== Usages ===
=== Predecessor ===
a532 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v69 #falseSuccessor: v68  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v69 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 11]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i533 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i533  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a532 
=== Succesors ===
=== Usages ===
i533 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a532  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i533 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers$TowersDisk.size
memoryOrder: PLAIN
nodeSourcePosition: at Towers$TowersDisk.getSize() [bci: 1]
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v545 
lastLocationAccess: - 
=== Succesors ===
next: v210 
=== Usages ===
v74 
=== Predecessor ===
v68 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v545 lastLocationAccess: - #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i533 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i533  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v74 
=== Succesors ===
trueSuccessor: v208 
falseSuccessor: v209 
=== Usages ===
=== Predecessor ===
i533 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v74 #trueSuccessor: v208 #falseSuccessor: v209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v78 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v78  <|@  <|@
f <@*|@fixed>@ <|@
tid v78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v76 v78 
=== Succesors ===
next: v275 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v76 v78 #next: v275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j229 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j229  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j229 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j256 
=== Usages ===
v550 v551 
=== Predecessor ===
v275 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j256  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j229 
index: - 
=== Succesors ===
=== Usages ===
j256 v258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j229 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j256 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
lastLocationAccess: - 
=== Succesors ===
next: j257 
=== Usages ===
j232 v552 v553 a240 v554 v555 v556 
=== Predecessor ===
j229 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v550 lastLocationAccess: - #next: j257  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j229 
index: - 
=== Succesors ===
=== Usages ===
j257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j229 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j257 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
lastLocationAccess: - 
=== Succesors ===
next: v236 
=== Usages ===
v233 
=== Predecessor ===
j256 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v551 lastLocationAccess: - #next: v236  <|@  <|@
f <@~|@floating>@ <|@
tid j228 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j232 j387 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j232 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
=== Inputs ===
x: j256 
y: j228 
=== Succesors ===
=== Usages ===
v233 v258 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j256 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j257 
y: j232 
=== Succesors ===
=== Usages ===
v236 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j257 y: j232  <|@  <|@
f <@~|@floating>@ <|@
tid v524 <|@
result meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v263 v413 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j237 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:431) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 v410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
rawvalue: meta{HotSpotType<LTowers$TowersDisk;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<LTowers$TowersDisk;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a241 a395 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v233 
=== Succesors ===
trueSuccessor: v235 
falseSuccessor: v234 
=== Usages ===
=== Predecessor ===
j257 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v233 #trueSuccessor: v235 #falseSuccessor: v234  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a241 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a241  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i3 
=== Succesors ===
=== Usages ===
?79 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i3  <|@  <|@
tid a94 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.size int:12>, HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.next Towers$TowersDisk:16>]
hasIdentity: true
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
objectId: 0
stamp: a!# Towers$TowersDisk
type: HotSpotType<LTowers$TowersDisk;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?79 ?95 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a123 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a# Towers$TowersDisk
=== Inputs ===
value: a532 
=== Succesors ===
=== Usages ===
?79 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a532  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a94 
values: i3 - 
=== Succesors ===
=== Usages ===
?79 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a94 values: i3 -  <|@  <|@
tid ?79 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?85 
values: a1 a94 i2 a123 
virtualObjectMappings: ?95 
=== Succesors ===
=== Usages ===
v538 a241 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?85 values: a1 a94 i2 a123 virtualObjectMappings: ?95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a241 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?79 
arguments: v227 
=== Succesors ===
next: v538 
=== Usages ===
v538 a254 
=== Predecessor ===
v235 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?79 arguments: v227 #next: v538  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-69489|0xfffffffffffef08f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?79 
object: a241 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
a241 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?79 object: a241 #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
lastLocationAccess: - 
value: j232 
stateAfter: - 
=== Succesors ===
next: v250 
=== Usages ===
=== Predecessor ===
v234 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v550 lastLocationAccess: - value: j232 stateAfter: - #next: v250  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
result [v6|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j256 
index: - 
=== Succesors ===
=== Usages ===
v250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j256 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
address: v554 
=== Succesors ===
next: v259 
=== Usages ===
=== Predecessor ===
v258 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v554 #next: v259  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
result [v6|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j256 
index: - 
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j256 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
lastLocationAccess: - 
value: j237 
stateAfter: - 
=== Succesors ===
next: v263 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v552 lastLocationAccess: - value: j237 stateAfter: - #next: v263  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
result [v6|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j256 
index: - 
=== Succesors ===
=== Usages ===
v263 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j256 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v556 
lastLocationAccess: - 
value: v524 
stateAfter: - 
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v556 lastLocationAccess: - value: v524 stateAfter: - #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
result [v6|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j256 
index: - 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j256 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v265 
=== Usages ===
=== Predecessor ===
v263 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v553 lastLocationAccess: - value: i10 stateAfter: - #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
result [v6|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j256 
index: - 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j256 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v555 
lastLocationAccess: - 
value: j214 
stateAfter: - 
=== Succesors ===
next: a240 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v555 lastLocationAccess: - value: j214 stateAfter: - #next: a240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a240 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j256 
=== Succesors ===
next: v243 
=== Usages ===
a254 
=== Predecessor ===
v265 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j256 #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
a240 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a254 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v244 
values: a240 a241 
=== Succesors ===
=== Usages ===
v547 a192 v546 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v244 values: a240 a241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v243 v245 
=== Succesors ===
next: v191 
=== Usages ===
a254 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v243 v245 #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result [v13|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a254 
index: - 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
lastLocationAccess: - 
value: a532 
stateAfter: - 
=== Succesors ===
next: v188 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v547 lastLocationAccess: - value: a532 stateAfter: - #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
result [v13|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a254 
index: - 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a254 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
v191 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v546 lastLocationAccess: - value: i3 stateAfter: - #next: v193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a192 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a192 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a254 
=== Succesors ===
next: v321 
=== Usages ===
a135 a324 
=== Predecessor ===
v193 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a254 #next: v321  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j277 
=== Usages ===
=== Predecessor ===
a192 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j277 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j278 
=== Usages ===
v557 v559 v560 
=== Predecessor ===
v321 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j278 <|@
result [v4|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v543 
=== Succesors ===
next: i307 
=== Usages ===
v558 
=== Predecessor ===
j277 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v543 #next: i307  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
i307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i307 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
lastLocationAccess: - 
=== Succesors ===
next: v282 
=== Usages ===
v315 
=== Predecessor ===
j278 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v557 lastLocationAccess: - #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 v370 v377 v460 v510 v516 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i307 
y: i314 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i307 y: i314  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j306 j367 j452 j507 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v281 
falseSuccessor: v280 
=== Usages ===
=== Predecessor ===
i307 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v281 #falseSuccessor: v280  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[.] + 16], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v285  <|@  <|@
f <@*|@fixed>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v281 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a308 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a308  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
result [v14|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
a308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a308 <|@
result v15|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
=== Succesors ===
next: v289 
=== Usages ===
a309 v316 
=== Predecessor ===
v280 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a308 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a308  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v316 
=== Succesors ===
trueSuccessor: v288 
falseSuccessor: v284 
=== Usages ===
=== Predecessor ===
a308 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v316 #trueSuccessor: v288 #falseSuccessor: v284  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v288 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j310 
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j310  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
j310 v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j310 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
=== Succesors ===
next: v294 
=== Usages ===
v291 j306 v561 
=== Predecessor ===
v284 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - #next: v294  <|@  <|@
f <@~|@floating>@ <|@
tid v291 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j310 
y: j214 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j310 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid a309 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a308 
=== Succesors ===
=== Usages ===
j296 v299 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a308  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v291 
=== Succesors ===
trueSuccessor: v293 
falseSuccessor: v292 
=== Usages ===
=== Predecessor ===
j310 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v291 #trueSuccessor: v293 #falseSuccessor: v292  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a309 
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v293 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a309 #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j311 
=== Usages ===
=== Predecessor ===
v294 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j311  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
j311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j311 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
=== Succesors ===
next: j296 
=== Usages ===
v561 
=== Predecessor ===
v292 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - #next: j296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j296 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a309 
=== Succesors ===
next: v312 
=== Usages ===
v312 
=== Predecessor ===
j311 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a309 #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
result [v18|QWORD + v16|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j311 
index: j310 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j311 index: j310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
lastLocationAccess: - 
value: j296 
stateAfter: - 
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
j296 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v561 lastLocationAccess: - value: j296 stateAfter: - #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j310 
y: j305 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j310 y: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: j306 
stateAfter: - 
=== Succesors ===
next: v298 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: j306 stateAfter: - #next: v298  <|@  <|@
f <@*|@fixed>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v313 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v285 v287 v298 v300 
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v285 v287 v298 v300 #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid a135 <|@
result v20|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Compress
stamp: n!# Towers$TowersDisk
=== Inputs ===
value: a192 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v182 
address: v543 
lastLocationAccess: - 
value: a135 
stateAfter: - 
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v182 address: v543 lastLocationAccess: - value: a135 stateAfter: - #next: v383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j323 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j323  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j323 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a324 
=== Usages ===
v562 v563 
=== Predecessor ===
v383 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a324 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a192 
=== Succesors ===
next: j325 
=== Usages ===
j326 
=== Predecessor ===
j323 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a192 #next: j325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j325 <|@
result [v4|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:192) [bci: 36] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v543 
=== Succesors ===
next: j326 
=== Usages ===
j327 j340 
=== Predecessor ===
a324 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v543 #next: j326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j326 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a324 
=== Succesors ===
next: v330 
=== Usages ===
j327 v331 
=== Predecessor ===
j325 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a324 #next: v330  <|@  <|@
f <@~|@floating>@ <|@
tid j327 <|@
result v22|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j325 
y: j326 
=== Succesors ===
=== Usages ===
v362 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j325 y: j326  <|@  <|@
f <@~|@floating>@ <|@
tid j361 <|@
result long[-4194304|0xffffffffffc00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v362 v504 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
x: j327 
y: j361 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j327 y: j361  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
result byte[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v376 v515 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i339 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j340 j483 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j338 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 140438306553856
stableDimension: 0
stamp: i64 [140438306553856]
stampKind: i64
value: long[140438306553856|0x7fba57600000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j363 v565 j505 v581 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v362 
=== Succesors ===
trueSuccessor: v329 
falseSuccessor: v328 
=== Usages ===
=== Predecessor ===
j326 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v362 #trueSuccessor: v329 #falseSuccessor: v328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = XOR (x: v21|QWORD[.+], y: v13|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v333 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v333  <|@  <|@
f <@*|@fixed>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v329 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j326 
y: j214 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j326 y: j214  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v331 
=== Succesors ===
trueSuccessor: v336 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v331 #trueSuccessor: v336 #falseSuccessor: v332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v336 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i368 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i368  <|@  <|@
f <@~|@floating>@ <|@
tid j340 <|@
result v24|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j325 
y: i339 
=== Succesors ===
=== Usages ===
j363 v565 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j325 y: i339  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
result [v24|QWORD[*] + v23|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j340 
index: j338 
=== Succesors ===
=== Usages ===
i368 i369 v370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j340 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i368 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: v344 
=== Usages ===
v376 
=== Predecessor ===
v332 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i368 
y: i375 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i368 y: i375  <|@  <|@
f <@*|@fixed>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v376 
=== Succesors ===
trueSuccessor: v343 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
i368 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v376 #trueSuccessor: v343 #falseSuccessor: v341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@*|@fixed>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v343 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i369 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i369 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: v349 
=== Usages ===
v377 
=== Predecessor ===
v345 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i369 
y: i314 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i369 y: i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v377 
=== Succesors ===
trueSuccessor: v348 
falseSuccessor: v346 
=== Usages ===
=== Predecessor ===
i369 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v377 #trueSuccessor: v348 #falseSuccessor: v346  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
value: i314 
stateAfter: - 
=== Succesors ===
next: j371 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - value: i314 stateAfter: - #next: j371  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j323 
index: - 
=== Succesors ===
=== Usages ===
j371 v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j371 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v562 
lastLocationAccess: - 
=== Succesors ===
next: v354 
=== Usages ===
v351 j367 v564 
=== Predecessor ===
v370 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v562 lastLocationAccess: - #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j371 
y: j214 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j371 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid j363 <|@
result v27|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j340 
y: j338 
=== Succesors ===
=== Usages ===
v358 v373 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j340 y: j338  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v351 
=== Succesors ===
trueSuccessor: v353 
falseSuccessor: v352 
=== Usages ===
=== Predecessor ===
j371 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v351 #trueSuccessor: v353 #falseSuccessor: v352  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v24|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j363 
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j363 #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v358 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j372 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j372  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j323 
index: - 
=== Succesors ===
=== Usages ===
j372 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j372 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
lastLocationAccess: - 
=== Succesors ===
next: v373 
=== Usages ===
v564 
=== Predecessor ===
v352 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v563 lastLocationAccess: - #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
result [v28|QWORD + v26|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j372 
index: j371 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j372 index: j371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
value: j363 
stateAfter: - 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
j372 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - value: j363 stateAfter: - #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid j367 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j371 
y: j305 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j371 y: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v562 
lastLocationAccess: - 
value: j367 
stateAfter: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v562 lastLocationAccess: - value: j367 stateAfter: - #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v333 v335 v342 v347 v357 v359 
=== Succesors ===
next: v6 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v333 v335 v342 v347 v357 v359 #next: v6  <|@  <|@
f <@~|@floating>@ <|@
tid i26 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i27 i63 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i63 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
stamp: i32
=== Inputs ===
x: i3 
y: i26 
=== Succesors ===
=== Usages ===
i92 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
v334 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i92 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v7 
values: i63 i27 i27 i27 i27 i27 i27 
=== Succesors ===
=== Usages ===
?9 v11 ?52 i27 v196 v40 ?100 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v7 values: i63 i27 i27 i27 i27 i27 i27  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 6
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v6 
=== Succesors ===
next: v16 
=== Usages ===
i92 v14 v28 v529 v525 v526 v527 v528 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v6 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i92 
y: i10 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i92 y: i10  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 3]
profileData: INJECTED designatedSuccessorProbability: 0.0714285714285714
stamp: void
=== Inputs ===
condition: v11 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v12 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v11 #trueSuccessor: v14 #falseSuccessor: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 6]
stamp: void
=== Inputs ===
=== Succesors ===
next: a534 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a534 <|@
result v32|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# Towers$TowersDisk
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n# Towers$TowersDisk
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
lastLocationAccess: - 
=== Succesors ===
next: v35 
=== Usages ===
a147 v167 v199 v544 
=== Predecessor ===
v12 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v543 lastLocationAccess: - #next: v35  <|@  <|@
f <@~|@floating>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a534 
=== Succesors ===
=== Usages ===
v35 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a534  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 8]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: PROFILED designatedSuccessorProbability: 0.015600238878901168
stamp: void
=== Inputs ===
condition: v167 
=== Succesors ===
trueSuccessor: v34 
falseSuccessor: v33 
=== Usages ===
=== Predecessor ===
a534 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v167 #trueSuccessor: v34 #falseSuccessor: v33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 11]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i535 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i535  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
result [v32|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a534 
=== Succesors ===
=== Usages ===
i535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i535 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Towers$TowersDisk.size
memoryOrder: PLAIN
nodeSourcePosition: at Towers$TowersDisk.getSize() [bci: 1]
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 16]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v544 
lastLocationAccess: - 
=== Succesors ===
next: v205 
=== Usages ===
v40 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v544 lastLocationAccess: - #next: v205  <|@  <|@
f <@~|@floating>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i92 
y: i535 
=== Succesors ===
=== Usages ===
v205 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i92 y: i535  <|@  <|@
f <@*|@fixed>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v40 
=== Succesors ===
trueSuccessor: v203 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
i535 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v40 #trueSuccessor: v203 #falseSuccessor: v204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v32|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v44 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v44  <|@  <|@
f <@*|@fixed>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
v203 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v42 v44 
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v42 v44 #next: v425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: j384 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j384 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:472) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:468) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j407 
=== Usages ===
v566 v567 
=== Predecessor ===
v425 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j407  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j384 
index: - 
=== Succesors ===
=== Usages ===
j407 v409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j407 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:482) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: j408 
=== Usages ===
j387 v568 v569 a394 v570 v571 v572 
=== Predecessor ===
j384 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - #next: j408  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j384 
index: - 
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j384 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:477) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
lastLocationAccess: - 
=== Succesors ===
next: v391 
=== Usages ===
v388 
=== Predecessor ===
j407 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v567 lastLocationAccess: - #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid j387 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: i64
=== Inputs ===
x: j407 
y: j228 
=== Succesors ===
=== Usages ===
v388 v409 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j407 y: j228  <|@  <|@
f <@~|@floating>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j408 
y: j387 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j408 y: j387  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v388 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v389 
=== Usages ===
=== Predecessor ===
j408 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v388 #trueSuccessor: v390 #falseSuccessor: v389  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a395 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a395  <|@  <|@
tid ?52 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i92 
=== Succesors ===
=== Usages ===
?45 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i92  <|@  <|@
tid a99 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.size int:12>, HotSpotResolvedJavaFieldImpl<Towers$TowersDisk.next Towers$TowersDisk:16>]
hasIdentity: true
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
objectId: 1
stamp: a!# Towers$TowersDisk
type: HotSpotType<LTowers$TowersDisk;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?45 ?100 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a147 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a# Towers$TowersDisk
=== Inputs ===
value: a534 
=== Succesors ===
=== Usages ===
?45 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a534  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a99 
values: i92 - 
=== Succesors ===
=== Usages ===
?45 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@jdk.graal.compiler.nodes.virtual.VirtualObjectState>@ object: a99 values: i92 -  <|@  <|@
tid ?45 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Towers.pushDisk(Towers$TowersDisk, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?52 
values: a1 a99 i2 a147 
virtualObjectMappings: ?100 
=== Succesors ===
=== Usages ===
v540 a395 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?52 values: a1 a99 i2 a147 virtualObjectMappings: ?100  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a395 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:341) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 124]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?45 
arguments: v227 
=== Succesors ===
next: v540 
=== Usages ===
v540 a405 
=== Predecessor ===
v390 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?45 arguments: v227 #next: v540  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-107889|0xfffffffffffe5a8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?45 
object: a395 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
a395 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?45 object: a395 #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v540 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v36|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v409 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:487) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
value: j387 
stateAfter: - 
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - value: j387 stateAfter: - #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result [v33|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:330) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
address: v570 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v570 #next: v410  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
result [v33|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
lastLocationAccess: - 
value: j237 
stateAfter: - 
=== Succesors ===
next: v413 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v568 lastLocationAccess: - value: j237 stateAfter: - #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
result [v33|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:432) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:271) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
value: v524 
stateAfter: - 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v410 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - value: v524 stateAfter: - #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
result [v33|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:174) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
lastLocationAccess: - 
value: i10 
stateAfter: - 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v569 lastLocationAccess: - value: i10 stateAfter: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result [v33|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:233) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:183) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:159) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:309) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:273) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
lastLocationAccess: - 
value: j214 
stateAfter: - 
=== Succesors ===
next: a394 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v571 lastLocationAccess: - value: j214 stateAfter: - #next: a394  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a394 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:275) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j407 
=== Succesors ===
next: v397 
=== Usages ===
a405 
=== Predecessor ===
v415 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j407 #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
a394 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v33|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a405 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v398 
values: a394 a395 
=== Succesors ===
=== Usages ===
v549 a200 v548 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v398 values: a394 a395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 129]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:154) [bci: 18] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v397 v399 
=== Succesors ===
next: v199 
=== Usages ===
a405 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v397 v399 #next: v199  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
result [v39|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a405 
index: - 
=== Succesors ===
=== Usages ===
v199 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
lastLocationAccess: - 
value: a534 
stateAfter: - 
=== Succesors ===
next: v196 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v549 lastLocationAccess: - value: a534 stateAfter: - #next: v196  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
result [v39|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a405 
index: - 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a405 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 7]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
lastLocationAccess: - 
value: i92 
stateAfter: - 
=== Succesors ===
next: v201 
=== Usages ===
=== Predecessor ===
v199 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v548 lastLocationAccess: - value: i92 stateAfter: - #next: v201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a200 
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a200 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: -6] Placeholder
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a405 
=== Succesors ===
next: v466 
=== Usages ===
a156 a469 
=== Predecessor ===
v201 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a405 #next: v466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j427 
=== Usages ===
=== Predecessor ===
a200 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j427  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j427 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j428 
=== Usages ===
v573 v575 v576 
=== Predecessor ===
v466 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j428 <|@
result [v4|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v543 
=== Succesors ===
next: i453 
=== Usages ===
v574 
=== Predecessor ===
j427 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v543 #next: i453  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
i453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
lastLocationAccess: - 
=== Succesors ===
next: v432 
=== Usages ===
v460 
=== Predecessor ===
j428 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v573 lastLocationAccess: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i453 
y: i314 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i453 y: i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v460 
=== Succesors ===
trueSuccessor: v431 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
i453 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v460 #trueSuccessor: v431 #falseSuccessor: v430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 16], y: v32|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v431 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: a454 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a454  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
result [v40|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j428 
index: - 
=== Succesors ===
=== Usages ===
a454 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j428 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a454 <|@
result v41|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
=== Succesors ===
next: v439 
=== Usages ===
a455 v461 
=== Predecessor ===
v430 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a454 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a454  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v461 
=== Succesors ===
trueSuccessor: v438 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
a454 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v461 #trueSuccessor: v438 #falseSuccessor: v434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV [v40|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v437  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v438 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j456 
=== Usages ===
=== Predecessor ===
v439 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j456  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
j456 v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j456 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
lastLocationAccess: - 
=== Succesors ===
next: v444 
=== Usages ===
v441 j452 v577 
=== Predecessor ===
v434 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v575 lastLocationAccess: - #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j456 
y: j214 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j456 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid a455 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a454 
=== Succesors ===
=== Usages ===
j446 v449 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a454  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v441 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
j456 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v441 #trueSuccessor: v443 #falseSuccessor: v442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v449  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a455 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a455 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v449 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j457 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j457  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j427 
index: - 
=== Succesors ===
=== Usages ===
j457 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j427 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j457 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
=== Succesors ===
next: j446 
=== Usages ===
v577 
=== Predecessor ===
v442 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - #next: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j446 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a455 
=== Succesors ===
next: v458 
=== Usages ===
v458 
=== Predecessor ===
j457 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a455 #next: v458  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
result [v44|QWORD + v42|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j457 
index: j456 
=== Succesors ===
=== Usages ===
v458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j457 index: j456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
lastLocationAccess: - 
value: j446 
stateAfter: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
j446 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v577 lastLocationAccess: - value: j446 stateAfter: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid j452 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j456 
y: j305 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j456 y: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
lastLocationAccess: - 
value: j452 
stateAfter: - 
=== Succesors ===
next: v448 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v575 lastLocationAccess: - value: j452 stateAfter: - #next: v448  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
v459 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v435 v437 v448 v450 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v435 v437 v448 v450 #next: v157  <|@  <|@
f <@~|@floating>@ <|@
tid a156 <|@
result v46|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
op: Compress
stamp: n!# Towers$TowersDisk
=== Inputs ===
value: a200 
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a200  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v182 
address: v543 
lastLocationAccess: - 
value: a156 
stateAfter: - 
=== Succesors ===
next: v522 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v182 address: v543 lastLocationAccess: - value: a156 stateAfter: - #next: v522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j468 
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j468 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a469 
=== Usages ===
v578 v579 
=== Predecessor ===
v522 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a469 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: a!# Towers$TowersDisk
=== Inputs ===
object: a200 
=== Succesors ===
next: j470 
=== Usages ===
j471 
=== Predecessor ===
j468 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a200 #next: j470  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j470 <|@
result [v4|QWORD[.] + v1|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:192) [bci: 36] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v543 
=== Succesors ===
next: j471 
=== Usages ===
j472 j483 
=== Predecessor ===
a469 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v543 #next: j471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j471 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a469 
=== Succesors ===
next: v475 
=== Usages ===
j472 v476 
=== Predecessor ===
j470 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a469 #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid j472 <|@
result v48|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j470 
y: j471 
=== Succesors ===
=== Usages ===
v504 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j470 y: j471  <|@  <|@
f <@~|@floating>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
x: j472 
y: j361 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j472 y: j361  <|@  <|@
f <@~|@floating>@ <|@
tid i27 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 19]
stamp: i32
=== Inputs ===
x: i92 
y: i26 
=== Succesors ===
=== Usages ===
i92 i92 i92 i92 i92 i92 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i92 y: i26  <|@  <|@
f <@*|@fixed>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v504 
=== Succesors ===
trueSuccessor: v474 
falseSuccessor: v473 
=== Usages ===
=== Predecessor ===
j471 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v504 #trueSuccessor: v474 #falseSuccessor: v473  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v39|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = XOR (x: v47|QWORD[.+], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v48|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v474 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v482 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v482  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j471 
y: j214 
=== Succesors ===
=== Usages ===
v482 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j471 y: j214  <|@  <|@
f <@*|@fixed>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v476 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v477 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v476 #trueSuccessor: v481 #falseSuccessor: v477  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD[.], y: v39|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 5
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v481 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i508 
=== Usages ===
=== Predecessor ===
v482 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i508  <|@  <|@
f <@~|@floating>@ <|@
tid j483 <|@
result v50|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j470 
y: i339 
=== Succesors ===
=== Usages ===
j505 v581 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j470 y: i339  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result [v50|QWORD[*] + v23|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j483 
index: j338 
=== Succesors ===
=== Usages ===
i508 i509 v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j483 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i508 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
=== Succesors ===
next: v487 
=== Usages ===
v515 
=== Predecessor ===
v477 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - #next: v487  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i508 
y: i375 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i508 y: i375  <|@  <|@
f <@*|@fixed>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v515 
=== Succesors ===
trueSuccessor: v486 
falseSuccessor: v484 
=== Usages ===
=== Predecessor ===
i508 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v515 #trueSuccessor: v486 #falseSuccessor: v484  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v51|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 4
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: i509 
=== Usages ===
=== Predecessor ===
v484 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
=== Succesors ===
next: v492 
=== Usages ===
v516 
=== Predecessor ===
v488 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - #next: v492  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i509 
y: i314 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i509 y: i314  <|@  <|@
f <@*|@fixed>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v516 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v489 
=== Usages ===
=== Predecessor ===
i509 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v516 #trueSuccessor: v491 #falseSuccessor: v489  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v527 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v527  <|@  <|@
f <@*|@fixed>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v510 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v510  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
value: i314 
stateAfter: - 
=== Succesors ===
next: j511 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - value: i314 stateAfter: - #next: j511  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
j511 v514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j511 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
=== Succesors ===
next: v497 
=== Usages ===
v494 j507 v580 
=== Predecessor ===
v510 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j511 
y: j214 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j511 y: j214  <|@  <|@
f <@~|@floating>@ <|@
tid j505 <|@
result v53|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j483 
y: j338 
=== Succesors ===
=== Usages ===
v501 v513 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j483 y: j338  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v494 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v495 
=== Usages ===
=== Predecessor ===
j511 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v494 #trueSuccessor: v496 #falseSuccessor: v495  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v50|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = ADD (x: v50|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|QWORD, y: v52|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v501  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j505 
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v496 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j505 #next: v525  <|@  <|@
f <@*|@fixed>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: j512 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j512  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
j512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
lastLocationAccess: - 
=== Succesors ===
next: v513 
=== Usages ===
v580 
=== Predecessor ===
v495 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 lastLocationAccess: - #next: v513  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result [v54|QWORD + v52|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j512 
index: j511 
=== Succesors ===
=== Usages ===
v513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: j511  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
lastLocationAccess: - 
value: j505 
stateAfter: - 
=== Succesors ===
next: v514 
=== Usages ===
=== Predecessor ===
j512 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v580 lastLocationAccess: - value: j505 stateAfter: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64
=== Inputs ===
x: j511 
y: j305 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j511 y: j305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
value: j507 
stateAfter: - 
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - value: j507 stateAfter: - #next: v526  <|@  <|@
f <@*|@fixed>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 2
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v7 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v7  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD + v52|QWORD * 1 - 8], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v7 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v7 #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v88 v89 
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v88 v89 #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.buildTowerAt(int, int) [bci: 25]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
tid ?9 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: iload_3
code: ResolvedJavaMethodBytecode<Towers.buildTowerAt(int, int)>
localsSize: 4
locksSize: 0
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 - i92 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2 - i92  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x984847c7]: UnreachedCode@5[HotSpotMethod<Towers.pushDisk(Towers$TowersDisk, int)>, 22]}
stamp: void
=== Inputs ===
stateBefore: ?9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v204 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 19]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid j222 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
result int[-53011|0xffffffffffff30ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -53011
stableDimension: 0
stamp: i32 [-53011]
stampKind: i32
value: int[-53011|0xffffffffffff30ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
v209 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53011|0xffffffffffff30ed], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 43]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result int[-32283|0xffffffffffff81e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
rawvalue: -32283
stableDimension: 0
stamp: i32 [-32283]
stampKind: i32
value: int[-32283|0xffffffffffff81e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i215 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
v184 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-32283|0xffffffffffff81e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i215 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i32 [-53011 - -32283] bits:1...1x0xx000x1110x101
valueDescription: i32
=== Inputs ===
merge: v211 
values: i219 i221 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v211 values: i219 i221  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: i64 [0 - 20] bits:0...0x0x00
valueDescription: i64
=== Inputs ===
merge: v211 
values: j214 j222 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v211 values: j214 j222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v218 v220 
=== Succesors ===
next: v217 
=== Usages ===
i215 j216 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v218 v220 #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at Towers.pushDisk(Towers$TowersDisk, int) [bci: 5]
at Towers.buildTowerAt(int, int) [bci: 16]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i215 
speculation: j216 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i215 speculation: j216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD, v57|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[.] + 16], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = XOR (x: v21|QWORD[.+], y: v13|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v24|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v32|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v33|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 16], y: v32|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV [v40|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v36|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v39|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = XOR (x: v47|QWORD[.+], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v48|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD[.], y: v39|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v51|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v50|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = ADD (x: v50|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|QWORD, y: v52|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD + v52|QWORD * 1 - 8], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-32283|0xffffffffffff81e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53011|0xffffffffffff30ed], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD, v57|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[.] + 16], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = XOR (x: v21|QWORD[.+], y: v13|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v24|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v32|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v33|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 16], y: v32|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV [v40|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v36|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v39|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = XOR (x: v47|QWORD[.+], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v48|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD[.], y: v39|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v51|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v50|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = ADD (x: v50|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|QWORD, y: v52|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD + v52|QWORD * 1 - 8], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-32283|0xffffffffffff81e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53011|0xffffffffffff30ed], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD, v57|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[.] + 16], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = XOR (x: v21|QWORD[.+], y: v13|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v24|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v32|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v33|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 16], y: v32|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV [v40|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v36|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v39|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = XOR (x: v47|QWORD[.+], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v48|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD[.], y: v39|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v51|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v50|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = ADD (x: v50|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|QWORD, y: v52|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD + v52|QWORD * 1 - 8], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-32283|0xffffffffffff81e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53011|0xffffffffffff30ed], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD, v57|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[.] + 16], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = XOR (x: v21|QWORD[.+], y: v13|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v13|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v24|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v30|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr   -1  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v32|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v33|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v33|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 16], y: v32|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|DWORD[_] = MOV [v40|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v58|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v36|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v39|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = XOR (x: v47|QWORD[.+], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v48|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|QWORD[.], y: v39|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = SHR v51|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v50|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[*] = ADD (x: v50|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v52|QWORD, y: v52|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD + v52|QWORD * 1 - 8], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v55|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-32283|0xffffffffffff81e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53011|0xffffffffffff30ed], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD, v57|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v57|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction v5|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v6|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [v6|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction v12|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [v13|QWORD[.] + 16], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [v13|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction v14|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  120  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  124  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction v21|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction v22|QWORD[*] = XOR (x: v21|QWORD[.+], y: v13|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction v23|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH v22|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: v13|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction v25|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [v24|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction v26|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction v27|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction v28|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: v29|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction v30|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~[v30|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction v32|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v32|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction v33|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction v34|QWORD = LEA [v33|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[v33|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [v33|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [v33|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction v38|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [v39|QWORD[.] + 16], y: v32|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v40|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction v41|DWORD[_] = MOV [v40|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction v42|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction v44|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: v45|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction v58|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE v58|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  320  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v36|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  324  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v39|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction v47|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction v48|QWORD[*] = XOR (x: v47|QWORD[.+], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction v49|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH v48|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v39|QWORD[.], y: v39|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction v51|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction v50|QWORD[*] = SHR v51|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[v49|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[v49|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[v49|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[v49|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [v50|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction v52|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction v53|QWORD[*] = ADD (x: v50|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v52|QWORD, y: v52|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v54|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [v54|QWORD + v52|QWORD * 1 - 8], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction v55|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: v55|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[v49|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[v49|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[int[-32283|0xffffffffffff81e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[int[-53011|0xffffffffffff30ed], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [v56|DWORD, v57|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v56|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v57|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction v5|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v6|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [v6|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction v12|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [v13|QWORD[.] + 16], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [v13|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction v14|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  120  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  124  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction v21|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction v22|QWORD[*] = XOR (x: v21|QWORD[.+], y: v13|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction v23|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH v22|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: v13|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction v25|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [v24|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction v26|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction v27|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction v28|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: v29|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction v30|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~[v30|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction v32|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v32|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction v33|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction v34|QWORD = LEA [v33|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[v33|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [v33|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [v33|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction v38|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [v39|QWORD[.] + 16], y: v32|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v40|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction v41|DWORD[_] = MOV [v40|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction v42|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction v44|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: v45|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction v58|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE v58|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  320  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v36|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  324  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v39|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction v47|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction v48|QWORD[*] = XOR (x: v47|QWORD[.+], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction v49|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH v48|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v39|QWORD[.], y: v39|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction v51|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction v50|QWORD[*] = SHR v51|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[v49|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[v49|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[v49|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[v49|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [v50|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction v52|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction v53|QWORD[*] = ADD (x: v50|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v52|QWORD, y: v52|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v54|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [v54|QWORD + v52|QWORD * 1 - 8], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction v55|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: v55|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[v49|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[v49|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[int[-32283|0xffffffffffff81e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[int[-53011|0xffffffffffff30ed], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [v56|DWORD, v57|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v56|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v57|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[118, 120[[318, 320[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v59|q [0, 6[[116, 118[[132, 134[[210, 212[[316, 318[[332, 334[[410, 412[ "NoOptimization"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 102[[106, 416[[424, 435[[436, 447[6 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [8, 102[[106, 416[[424, 435[[436, 447[8 MustHaveRegister 18 MustHaveRegister 24 MustHaveRegister 76 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 158 MustHaveRegister 228 MustHaveRegister 280 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 358 MustHaveRegister 367 LiveAtLoopEnd 371 LiveAtLoopEnd 375 LiveAtLoopEnd 385 LiveAtLoopEnd 407 LiveAtLoopEnd 415 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|d [10, 102[[106, 218[[424, 428[[436, 447[10 MustHaveRegister 12 MustHaveRegister 30 MustHaveRegister 66 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [16, 22[16 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|d [22, 102[[106, 416[22 MustHaveRegister 24 MustHaveRegister 76 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 158 MustHaveRegister 228 MustHaveRegister 280 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 358 MustHaveRegister 367 LiveAtLoopEnd 371 LiveAtLoopEnd 375 LiveAtLoopEnd 385 LiveAtLoopEnd 407 LiveAtLoopEnd 415 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [24, 64[[106, 126[24 MustHaveRegister 26 MustHaveRegister 30 MustHaveRegister 64 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [38, 58[38 MustHaveRegister 40 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [40, 46[40 MustHaveRegister 42 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v5|d [114, 123[114 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q rax|q [120, 125[120 MustHaveRegister 122 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v6|q [58, 61[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v12|q [62, 102[[126, 154[64 MustHaveRegister 66 MustHaveRegister 140 MustHaveRegister 146 ShouldHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [78, 86[78 MustHaveRegister 80 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [84, 96[84 MustHaveRegister 88 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v15|d [86, 94[[130, 132[86 MustHaveRegister 94 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v13|q [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [144, 146[144 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v21|q [146, 150[146 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [148, 416[148 MustHaveRegister 162 MustHaveRegister 180 MustHaveRegister 188 MustHaveRegister 192 ShouldHaveRegister 362 MustHaveRegister 367 LiveAtLoopEnd 371 LiveAtLoopEnd 375 LiveAtLoopEnd 380 MustHaveRegister 385 LiveAtLoopEnd 388 MustHaveRegister 392 ShouldHaveRegister 407 LiveAtLoopEnd 415 LiveAtLoopEnd  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v25|q [160, 164[[176, 182[[186, 192[160 MustHaveRegister 162 MustHaveRegister 180 MustHaveRegister 188 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [158, 160[158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [190, 202[190 MustHaveRegister 194 MustHaveRegister 200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v24|q [192, 200[[208, 210[192 MustHaveRegister 200 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [202, 204[202 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v2|d [218, 221[218 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v49|d [222, 348[[428, 435[224 MustHaveRegister 234 MustHaveRegister 270 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [228, 268[[306, 326[228 MustHaveRegister 230 MustHaveRegister 234 MustHaveRegister 268 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [242, 262[242 MustHaveRegister 244 MustHaveRegister 252 MustHaveRegister 254 MustHaveRegister 256 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [244, 250[244 MustHaveRegister 246 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v32|d [314, 323[314 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q rax|q [320, 325[320 MustHaveRegister 322 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v33|q [262, 265[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v38|q [266, 306[[326, 354[268 MustHaveRegister 270 MustHaveRegister 340 MustHaveRegister 346 ShouldHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d -1 [282, 290[282 MustHaveRegister 284 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [288, 300[288 MustHaveRegister 292 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v41|d [290, 298[[330, 332[290 MustHaveRegister 298 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d v39|q [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q -1 [344, 346[344 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v47|q [346, 350[346 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d v31|d [348, 367[[368, 371[[372, 375[[376, 385[[386, 407[[408, 415[348 MustHaveRegister 366 ShouldHaveRegister 370 ShouldHaveRegister 374 ShouldHaveRegister 384 ShouldHaveRegister 406 ShouldHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v51|q [360, 364[[376, 382[[386, 392[360 MustHaveRegister 362 MustHaveRegister 380 MustHaveRegister 388 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q -1 [358, 360[358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q -1 [390, 402[390 MustHaveRegister 394 MustHaveRegister 400 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v50|q [392, 400[[408, 410[392 MustHaveRegister 400 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q -1 [398, 400[398 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q -1 [402, 404[402 MustHaveRegister 404 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d -1 [440, 442[442 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [440, 444[444 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [312, 316[312 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [112, 116[112 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[118, 120[[318, 320[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v59|q [0, 6[[116, 118[[132, 134[[210, 212[[316, 318[[332, 334[[410, 412[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 102[[106, 416[[424, 435[[436, 447[6 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 102[[106, 416[[424, 435[[436, 447[8 MustHaveRegister 18 MustHaveRegister 24 MustHaveRegister 76 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 158 MustHaveRegister 228 MustHaveRegister 280 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 358 MustHaveRegister 367 LiveAtLoopEnd 371 LiveAtLoopEnd 375 LiveAtLoopEnd 385 LiveAtLoopEnd 407 LiveAtLoopEnd 415 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [10, 102[[106, 218[[424, 428[[436, 447[10 MustHaveRegister 12 MustHaveRegister 30 MustHaveRegister 66 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[rsi|d]" v3|d -1 [16, 22[16 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q v3|d [22, 102[[106, 416[22 MustHaveRegister 24 MustHaveRegister 76 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 158 MustHaveRegister 228 MustHaveRegister 280 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 358 MustHaveRegister 367 LiveAtLoopEnd 371 LiveAtLoopEnd 375 LiveAtLoopEnd 385 LiveAtLoopEnd 407 LiveAtLoopEnd 415 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [24, 64[[106, 126[24 MustHaveRegister 26 MustHaveRegister 30 MustHaveRegister 64 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [38, 58[38 MustHaveRegister 40 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q -1 [40, 46[40 MustHaveRegister 42 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r9|q]" v9|q v5|d [114, 123[114 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q rax|q [120, 125[120 MustHaveRegister 122 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q v6|q [58, 61[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[r9|q]" v13|q v12|q [62, 102[[126, 154[64 MustHaveRegister 66 MustHaveRegister 140 MustHaveRegister 146 ShouldHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rsi|d]" v15|d -1 [78, 86[78 MustHaveRegister 80 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q -1 [84, 96[84 MustHaveRegister 88 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v15|d [86, 94[[130, 132[86 MustHaveRegister 94 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r8|q]" v18|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d v13|q [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q -1 [144, 146[144 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q v21|q [146, 150[146 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r8|q]" v23|q -1 [148, 416[148 MustHaveRegister 162 MustHaveRegister 180 MustHaveRegister 188 MustHaveRegister 192 ShouldHaveRegister 362 MustHaveRegister 367 LiveAtLoopEnd 371 LiveAtLoopEnd 375 LiveAtLoopEnd 380 MustHaveRegister 385 LiveAtLoopEnd 388 MustHaveRegister 392 ShouldHaveRegister 407 LiveAtLoopEnd 415 LiveAtLoopEnd  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v25|q [160, 164[[176, 182[[186, 192[160 MustHaveRegister 162 MustHaveRegister 180 MustHaveRegister 188 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [158, 160[158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q -1 [190, 202[190 MustHaveRegister 194 MustHaveRegister 200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q v24|q [192, 200[[208, 210[192 MustHaveRegister 200 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[r9|q]" v28|q -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q -1 [202, 204[202 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d v2|d [218, 221[218 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r9|d]" v31|d v49|d [222, 348[[428, 435[224 MustHaveRegister 234 MustHaveRegister 270 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rcx|d]" v32|d -1 [228, 268[[306, 326[228 MustHaveRegister 230 MustHaveRegister 234 MustHaveRegister 268 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [242, 262[242 MustHaveRegister 244 MustHaveRegister 252 MustHaveRegister 254 MustHaveRegister 256 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q -1 [244, 250[244 MustHaveRegister 246 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rbx|q]" v35|q v32|d [314, 323[314 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q rax|q [320, 325[320 MustHaveRegister 322 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q v33|q [262, 265[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rbx|q]" v39|q v38|q [266, 306[[326, 354[268 MustHaveRegister 270 MustHaveRegister 340 MustHaveRegister 346 ShouldHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rsi|d]" v41|d -1 [282, 290[282 MustHaveRegister 284 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q -1 [288, 300[288 MustHaveRegister 292 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rsi|q]" v43|q v41|d [290, 298[[330, 332[290 MustHaveRegister 298 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rcx|q]" v44|q -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q -1 [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rsi|d]" v46|d v39|q [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rsi|q]" v47|q -1 [344, 346[344 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v47|q [346, 350[346 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[r9|d]" v49|d v31|d [348, 367[[368, 371[[372, 375[[376, 385[[386, 407[[408, 415[348 MustHaveRegister 366 ShouldHaveRegister 370 ShouldHaveRegister 374 ShouldHaveRegister 384 ShouldHaveRegister 406 ShouldHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q v51|q [360, 364[[376, 382[[386, 392[360 MustHaveRegister 362 MustHaveRegister 380 MustHaveRegister 388 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q -1 [358, 360[358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rcx|q]" v52|q -1 [390, 402[390 MustHaveRegister 394 MustHaveRegister 400 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v50|q [392, 400[[408, 410[392 MustHaveRegister 400 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rbx|q]" v54|q -1 [398, 400[398 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [402, 404[402 MustHaveRegister 404 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[r11|d]" v56|d -1 [440, 442[442 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r8|q]" v57|q -1 [440, 444[444 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [312, 316[312 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q -1 [112, 116[112 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction v5|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v6|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [v6|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction v12|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [v13|QWORD[.] + 16], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [v13|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction v14|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  120  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  124  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction v21|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction v22|QWORD[*] = XOR (x: v21|QWORD[.+], y: v13|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction v23|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH v22|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: v13|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction v25|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [v24|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction v26|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction v27|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction v28|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: v29|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction v30|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~[v30|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction v32|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v32|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction v33|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction v34|QWORD = LEA [v33|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[v33|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [v33|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [v33|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction v38|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [v39|QWORD[.] + 16], y: v32|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v40|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction v41|DWORD[_] = MOV [v40|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction v42|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction v44|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: v45|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction v58|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE v58|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  320  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v36|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  324  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v39|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction v47|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction v48|QWORD[*] = XOR (x: v47|QWORD[.+], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction v49|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH v48|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v39|QWORD[.], y: v39|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction v51|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction v50|QWORD[*] = SHR v51|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[v49|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[v49|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[v49|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[v49|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [v50|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction v52|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction v53|QWORD[*] = ADD (x: v50|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v52|QWORD, y: v52|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v54|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [v54|QWORD + v52|QWORD * 1 - 8], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction v55|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: v55|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[v49|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[v49|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[int[-32283|0xffffffffffff81e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[int[-53011|0xffffffffffff30ed], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [v56|DWORD, v57|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v56|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v57|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[118, 120[[318, 320[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v59|q [0, 6[[116, 118[[132, 134[[210, 212[[316, 318[[332, 334[[410, 412[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 102[[106, 416[[424, 435[[436, 447[6 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 102[[106, 416[[424, 435[[436, 447[8 MustHaveRegister 18 MustHaveRegister 24 MustHaveRegister 76 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 158 MustHaveRegister 228 MustHaveRegister 280 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 358 MustHaveRegister 367 LiveAtLoopEnd 371 LiveAtLoopEnd 375 LiveAtLoopEnd 385 LiveAtLoopEnd 407 LiveAtLoopEnd 415 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [10, 102[[106, 218[[424, 428[[436, 447[10 MustHaveRegister 12 MustHaveRegister 30 MustHaveRegister 66 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[rsi|d]" v3|d -1 [16, 22[16 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q v3|d [22, 102[[106, 416[22 MustHaveRegister 24 MustHaveRegister 76 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 158 MustHaveRegister 228 MustHaveRegister 280 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 358 MustHaveRegister 367 LiveAtLoopEnd 371 LiveAtLoopEnd 375 LiveAtLoopEnd 385 LiveAtLoopEnd 407 LiveAtLoopEnd 415 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [24, 64[[106, 126[24 MustHaveRegister 26 MustHaveRegister 30 MustHaveRegister 64 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [38, 58[38 MustHaveRegister 40 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q -1 [40, 46[40 MustHaveRegister 42 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r9|q]" v9|q v5|d [114, 123[114 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q rax|q [120, 125[120 MustHaveRegister 122 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q v6|q [58, 61[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[r9|q]" v13|q v12|q [62, 102[[126, 154[64 MustHaveRegister 66 MustHaveRegister 140 MustHaveRegister 146 ShouldHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rsi|d]" v15|d -1 [78, 86[78 MustHaveRegister 80 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q -1 [84, 96[84 MustHaveRegister 88 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v15|d [86, 94[[130, 132[86 MustHaveRegister 94 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r8|q]" v18|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d v13|q [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q -1 [144, 146[144 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q v21|q [146, 150[146 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r8|q]" v23|q -1 [148, 416[148 MustHaveRegister 162 MustHaveRegister 180 MustHaveRegister 188 MustHaveRegister 192 ShouldHaveRegister 362 MustHaveRegister 367 LiveAtLoopEnd 371 LiveAtLoopEnd 375 LiveAtLoopEnd 380 MustHaveRegister 385 LiveAtLoopEnd 388 MustHaveRegister 392 ShouldHaveRegister 407 LiveAtLoopEnd 415 LiveAtLoopEnd  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v25|q [160, 164[[176, 182[[186, 192[160 MustHaveRegister 162 MustHaveRegister 180 MustHaveRegister 188 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [158, 160[158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q -1 [190, 202[190 MustHaveRegister 194 MustHaveRegister 200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q v24|q [192, 200[[208, 210[192 MustHaveRegister 200 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[r9|q]" v28|q -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q -1 [202, 204[202 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d v2|d [218, 221[218 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r9|d]" v31|d v49|d [222, 348[[428, 435[224 MustHaveRegister 234 MustHaveRegister 270 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rcx|d]" v32|d -1 [228, 268[[306, 326[228 MustHaveRegister 230 MustHaveRegister 234 MustHaveRegister 268 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [242, 262[242 MustHaveRegister 244 MustHaveRegister 252 MustHaveRegister 254 MustHaveRegister 256 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q -1 [244, 250[244 MustHaveRegister 246 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rbx|q]" v35|q v32|d [314, 323[314 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q rax|q [320, 325[320 MustHaveRegister 322 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q v33|q [262, 265[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rbx|q]" v39|q v38|q [266, 306[[326, 354[268 MustHaveRegister 270 MustHaveRegister 340 MustHaveRegister 346 ShouldHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rsi|d]" v41|d -1 [282, 290[282 MustHaveRegister 284 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q -1 [288, 300[288 MustHaveRegister 292 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rsi|q]" v43|q v41|d [290, 298[[330, 332[290 MustHaveRegister 298 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rcx|q]" v44|q -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q -1 [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rsi|d]" v46|d v39|q [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rsi|q]" v47|q -1 [344, 346[344 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v47|q [346, 350[346 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[r9|d]" v49|d v31|d [348, 367[[368, 371[[372, 375[[376, 385[[386, 407[[408, 415[348 MustHaveRegister 366 ShouldHaveRegister 370 ShouldHaveRegister 374 ShouldHaveRegister 384 ShouldHaveRegister 406 ShouldHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q v51|q [360, 364[[376, 382[[386, 392[360 MustHaveRegister 362 MustHaveRegister 380 MustHaveRegister 388 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q -1 [358, 360[358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rcx|q]" v52|q -1 [390, 402[390 MustHaveRegister 394 MustHaveRegister 400 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v50|q [392, 400[[408, 410[392 MustHaveRegister 400 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rbx|q]" v54|q -1 [398, 400[398 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [402, 404[402 MustHaveRegister 404 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[r11|d]" v56|d -1 [440, 442[442 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r8|q]" v57|q -1 [440, 444[444 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [312, 316[312 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q -1 [112, 116[112 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction v5|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v6|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [v6|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction v12|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction JUMP ~[v12|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [v13|QWORD[.] + 16], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [v13|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction v14|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  120  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  124  <|@ instruction JUMP ~[v10|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction v21|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction v22|QWORD[*] = XOR (x: v21|QWORD[.+], y: v13|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction v23|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH v22|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: v13|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction v25|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [v24|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction v26|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction v27|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction v28|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: v29|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction v30|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr  220  <|@ instruction JUMP ~[v30|DWORD] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction v32|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v32|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction v33|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction v34|QWORD = LEA [v33|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[v33|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [v33|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [v33|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction v38|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction JUMP ~[v38|QWORD[.]] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [v39|QWORD[.] + 16], y: v32|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v40|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction v41|DWORD[_] = MOV [v40|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction v42|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction v44|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: v45|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction v58|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE v58|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  320  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v36|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr  324  <|@ instruction JUMP ~[v36|QWORD[.]] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v39|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction v47|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction v48|QWORD[*] = XOR (x: v47|QWORD[.+], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction v49|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH v48|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v39|QWORD[.], y: v39|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction v51|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction v50|QWORD[*] = SHR v51|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[v49|DWORD] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[v49|DWORD] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[v49|DWORD] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[v49|DWORD] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [v50|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction v52|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction v53|QWORD[*] = ADD (x: v50|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v52|QWORD, y: v52|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v54|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [v54|QWORD + v52|QWORD * 1 - 8], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction v55|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: v55|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[v49|DWORD] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[v49|DWORD] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction JUMP ~[int[-32283|0xffffffffffff81e5], long[0|0x0]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[int[-53011|0xffffffffffff30ed], long[20|0x14]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [v56|DWORD, v57|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v56|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v57|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[118, 120[[318, 320[ "NoOptimization"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 10[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v59|q [0, 6[[116, 118[[132, 134[[210, 212[[316, 318[[332, 334[[410, 412[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 102[[106, 416[[424, 435[[436, 447[6 MustHaveRegister 16 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [8, 102[[106, 416[[424, 435[[436, 447[8 MustHaveRegister 18 MustHaveRegister 24 MustHaveRegister 76 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 158 MustHaveRegister 228 MustHaveRegister 280 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 358 MustHaveRegister 367 LiveAtLoopEnd 371 LiveAtLoopEnd 375 LiveAtLoopEnd 385 LiveAtLoopEnd 407 LiveAtLoopEnd 415 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [10, 102[[106, 218[[424, 428[[436, 447[10 MustHaveRegister 12 MustHaveRegister 30 MustHaveRegister 66 MustHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[rsi|d]" v3|d -1 [16, 22[16 MustHaveRegister 18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r11|q]" v4|q v3|d [22, 102[[106, 416[22 MustHaveRegister 24 MustHaveRegister 76 MustHaveRegister 142 MustHaveRegister 144 MustHaveRegister 158 MustHaveRegister 228 MustHaveRegister 280 MustHaveRegister 342 MustHaveRegister 344 MustHaveRegister 358 MustHaveRegister 367 LiveAtLoopEnd 371 LiveAtLoopEnd 375 LiveAtLoopEnd 385 LiveAtLoopEnd 407 LiveAtLoopEnd 415 LiveAtLoopEnd  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [24, 64[[106, 126[24 MustHaveRegister 26 MustHaveRegister 30 MustHaveRegister 64 MustHaveRegister 114 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [38, 58[38 MustHaveRegister 40 MustHaveRegister 48 MustHaveRegister 50 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 56 MustHaveRegister 58 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q -1 [40, 46[40 MustHaveRegister 42 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r9|q]" v9|q v5|d [114, 123[114 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q rax|q [120, 125[120 MustHaveRegister 122 MustHaveRegister 124 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q v6|q [58, 61[58 MustHaveRegister 60 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[r9|q]" v13|q v12|q [62, 102[[126, 154[64 MustHaveRegister 66 MustHaveRegister 140 MustHaveRegister 146 ShouldHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rsi|d]" v15|d -1 [78, 86[78 MustHaveRegister 80 MustHaveRegister 86 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q -1 [84, 96[84 MustHaveRegister 88 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rsi|q]" v17|q v15|d [86, 94[[130, 132[86 MustHaveRegister 94 MustHaveRegister 132 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r8|q]" v18|q -1 [92, 94[92 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [96, 98[96 MustHaveRegister 98 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d v13|q [140, 142[140 MustHaveRegister 142 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rsi|q]" v21|q -1 [144, 146[144 MustHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q v21|q [146, 150[146 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r8|q]" v23|q -1 [148, 416[148 MustHaveRegister 162 MustHaveRegister 180 MustHaveRegister 188 MustHaveRegister 192 ShouldHaveRegister 362 MustHaveRegister 367 LiveAtLoopEnd 371 LiveAtLoopEnd 375 LiveAtLoopEnd 380 MustHaveRegister 385 LiveAtLoopEnd 388 MustHaveRegister 392 ShouldHaveRegister 407 LiveAtLoopEnd 415 LiveAtLoopEnd  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v25|q [160, 164[[176, 182[[186, 192[160 MustHaveRegister 162 MustHaveRegister 180 MustHaveRegister 188 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [158, 160[158 MustHaveRegister 160 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q -1 [190, 202[190 MustHaveRegister 194 MustHaveRegister 200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rsi|q]" v27|q v24|q [192, 200[[208, 210[192 MustHaveRegister 200 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[r9|q]" v28|q -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q -1 [202, 204[202 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rcx|d]" v30|d v2|d [218, 221[218 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v31|d DWORD "[r9|d]" v31|d v49|d [222, 348[[428, 435[224 MustHaveRegister 234 MustHaveRegister 270 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[rcx|d]" v32|d -1 [228, 268[[306, 326[228 MustHaveRegister 230 MustHaveRegister 234 MustHaveRegister 268 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [242, 262[242 MustHaveRegister 244 MustHaveRegister 252 MustHaveRegister 254 MustHaveRegister 256 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 262 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q -1 [244, 250[244 MustHaveRegister 246 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rbx|q]" v35|q v32|d [314, 323[314 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q rax|q [320, 325[320 MustHaveRegister 322 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q v33|q [262, 265[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rbx|q]" v39|q v38|q [266, 306[[326, 354[268 MustHaveRegister 270 MustHaveRegister 340 MustHaveRegister 346 ShouldHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q -1 [280, 282[280 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rsi|d]" v41|d -1 [282, 290[282 MustHaveRegister 284 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q -1 [288, 300[288 MustHaveRegister 292 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rsi|q]" v43|q v41|d [290, 298[[330, 332[290 MustHaveRegister 298 MustHaveRegister 332 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rcx|q]" v44|q -1 [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rsi|q]" v45|q -1 [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v46|d DWORD "[rsi|d]" v46|d v39|q [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rsi|q]" v47|q -1 [344, 346[344 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rsi|q]" v48|q v47|q [346, 350[346 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[r9|d]" v49|d v31|d [348, 367[[368, 371[[372, 375[[376, 385[[386, 407[[408, 415[348 MustHaveRegister 366 ShouldHaveRegister 370 ShouldHaveRegister 374 ShouldHaveRegister 384 ShouldHaveRegister 406 ShouldHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q v51|q [360, 364[[376, 382[[386, 392[360 MustHaveRegister 362 MustHaveRegister 380 MustHaveRegister 388 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q -1 [358, 360[358 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rcx|q]" v52|q -1 [390, 402[390 MustHaveRegister 394 MustHaveRegister 400 MustHaveRegister 402 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rsi|q]" v53|q v50|q [392, 400[[408, 410[392 MustHaveRegister 400 MustHaveRegister 410 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rbx|q]" v54|q -1 [398, 400[398 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q -1 [402, 404[402 MustHaveRegister 404 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[r11|d]" v56|d -1 [440, 442[442 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r8|q]" v57|q -1 [440, 444[444 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [312, 316[312 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q -1 [112, 116[112 MustHaveRegister 116 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction v5|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v6|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [v6|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction v12|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [v13|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [v13|QWORD[.] + 16], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [v13|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction v14|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  120  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction v21|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction v22|QWORD[*] = XOR (x: v21|QWORD[.+], y: v13|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction v23|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH v22|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: v13|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction v25|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [v24|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction v26|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction v27|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction v28|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: v29|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction v30|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [v31|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction v32|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v32|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction v33|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction v34|QWORD = LEA [v33|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[v33|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [v33|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [v33|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction v38|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [v39|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [v39|QWORD[.] + 16], y: v32|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v40|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction v41|DWORD[_] = MOV [v40|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction v42|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction v44|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: v45|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction v58|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE v58|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  320  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v36|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v39|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction v47|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction v48|QWORD[*] = XOR (x: v47|QWORD[.+], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction v49|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH v48|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v39|QWORD[.], y: v39|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction v51|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction v50|QWORD[*] = SHR v51|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [v50|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction v52|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction v53|QWORD[*] = ADD (x: v50|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v52|QWORD, y: v52|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v54|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [v54|QWORD + v52|QWORD * 1 - 8], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction v55|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: v55|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [v56|DWORD, v57|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v56|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v57|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction v3|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction CMPBRANCH (x: v1|DWORD, y: [v3|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction v5|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: v5|DWORD[_], y: v5|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: v2|DWORD, y: [v5|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction v6|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction v7|QWORD = LEA [v6|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: v7|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: v7|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[v6|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [v6|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [v6|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [v6|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [v6|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction v12|QWORD[.] = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [v13|QWORD[.] + 16], y: v5|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [v13|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction v14|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction v15|DWORD[_] = MOV [v14|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: v15|DWORD[_], y: v15|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction v16|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v15|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: v16|QWORD, y: v16|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction v18|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [v18|QWORD + v16|QWORD * 1 - 8], y: v17|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction v19|QWORD = LEA [v16|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: v19|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction v59|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  116  <|@ instruction rsi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  120  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} v1|DWORD v9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v2|DWORD 
vobject:Towers$TowersDisk:0{size=v2|DWORD,next=Object[null]} LTowers$TowersDisk; v2|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v10|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE v10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = MOVE v17|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction v20|DWORD[_] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v20|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction v21|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction v22|QWORD[*] = XOR (x: v21|QWORD[.+], y: v13|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction v23|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH v22|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: v13|QWORD[.], y: v13|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction v25|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction v24|QWORD[*] = SHR v25|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [v24|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [v24|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction v26|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction v27|QWORD[*] = ADD (x: v24|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: v26|QWORD, y: v26|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction v28|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [v28|QWORD + v26|QWORD * 1 - 8], y: v27|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction v29|QWORD = LEA [v26|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: v29|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE v27|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction v30|DWORD = DEC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVE v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction v32|DWORD[_] = MOV [v4|QWORD[.] + v1|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: v32|DWORD[_], y: v32|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v31|DWORD, y: [v32|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction v33|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction v34|QWORD = LEA [v33|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[v33|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [v33|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [v33|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction v38|QWORD[.] = MOVE v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [v39|QWORD[.] + 16], y: v32|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [v39|QWORD[.] + 12], y: v31|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction v40|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction v41|DWORD[_] = MOV [v40|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: v41|DWORD[_], y: v41|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction v42|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction v43|QWORD[.] = UNCOMPRESSPOINTER (input: v41|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: v42|QWORD, y: v42|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction v44|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [v44|QWORD + v42|QWORD * 1 - 8], y: v43|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction v45|QWORD = LEA [v42|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: v45|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction v58|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v32|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD = MOVE v58|QWORD moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  320  <|@ instruction v36|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: v0|QWORD[.] vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} v1|DWORD v35|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
vobject:Towers$TowersDisk:0{size=v31|DWORD,next=Object[null]} LTowers$TowersDisk; v31|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [v36|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD[.] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction v46|DWORD[_] = COMPRESSPOINTER (input: v39|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [v4|QWORD[.] + v1|DWORD * 4 + 16], y: v46|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction v47|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction v48|QWORD[*] = XOR (x: v47|QWORD[.+], y: v39|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction v49|DWORD = DEC v31|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH v48|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: v39|QWORD[.], y: v39|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction v51|QWORD[.+] = LEA [v4|QWORD[.] + v1|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction v50|QWORD[*] = SHR v51|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [v50|QWORD[*] + v23|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [v50|QWORD[*] + v23|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction v52|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction v53|QWORD[*] = ADD (x: v50|QWORD[*], y: v23|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: v52|QWORD, y: v52|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v54|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [v54|QWORD + v52|QWORD * 1 - 8], y: v53|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction v55|QWORD = LEA [v52|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: v55|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE v53|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: v0|QWORD[.] v1|DWORD - v31|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v56|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v57|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: v0|QWORD[.] v1|DWORD v2|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B11 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589468260265693457
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B1 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4579547018858614958
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B4 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576533922135885390
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B13 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" "B16" "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" 
    xhandlers
    flags 
    probability 4604303717918202188
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B18 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" 
    xhandlers
    flags 
    probability 4590717258562350874
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction JUMP ~[] destination: B20 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589567219361505545
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B24 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B22" "B24" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B45" "B53" "B54" "B51" "B49" "B47" 
    successors "B55" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B55 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B31" "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B38 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595987655416054162
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction JUMP ~[] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766852
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B40 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621169022982760592
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction JUMP ~[] destination: B49 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B45 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B47 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" "B52" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B51 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4606142267430079922
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction JUMP ~[] destination: B51 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B56" 
    xhandlers
    flags 
    probability 4606581938849701344
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B56" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B17" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B16" "B15" 
    successors "B28" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" "B23" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B44" "B53" "B54" "B50" "B48" "B46" 
    successors "B56" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B29" "B46" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" "B52" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B29" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B56" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B17" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B16" "B15" 
    successors "B28" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" "B23" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B44" "B53" "B54" "B50" "B48" "B46" 
    successors "B56" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B29" "B46" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" "B52" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B29" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B56" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B17" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B16" "B15" 
    successors "B28" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" "B23" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B44" "B53" "B54" "B50" "B48" "B46" 
    successors "B56" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B29" "B46" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" "B52" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B29" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B56" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B17" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B16" "B15" 
    successors "B28" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" "B23" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B44" "B53" "B54" "B50" "B48" "B46" 
    successors "B56" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B29" "B46" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" "B52" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B29" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B56" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B17" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B16" "B15" 
    successors "B28" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" "B23" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B44" "B53" "B54" "B50" "B48" "B46" 
    successors "B56" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B29" "B46" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" "B52" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r10:0, r11:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  322  <|@ st <@st|@reference-map: [rax:0, rcx:0, rbx:0, r10:0, r11:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B29" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [rax:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B56" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B59" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   18  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B5" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   24  <|@ instruction r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   26  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" "B58" 
    xhandlers
    flags 
    probability 4606450792020364443
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   30  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr   42  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4606497871656657093
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr   50  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr   52  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr   54  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   56  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   58  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B8" 
    successors "B17" "B12" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   64  <|@ instruction MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr   66  <|@ instruction MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B10" "B12" "B16" "B15" 
    successors "B28" "B19" 
    xhandlers
    flags 
    probability 4606581938849701342
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  146  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD <|@ <|@
      nr  148  <|@ instruction r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  150  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B28" "B21" 
    xhandlers
    flags 
    probability 4605741266919258850
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B28" "B23" 
    xhandlers
    flags 
    probability 4604984662181860607
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B17" "B19" "B21" "B23" "B27" "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4606581938849701343
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rcx|DWORD = DEC rcx|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" "B44" "B53" "B54" "B50" "B48" "B46" 
    successors "B56" "B30" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4623545497446130215
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL alignment: 16 numbPhis: 1 label: ? <|@ <|@
      nr  224  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" "B32" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  230  <|@ instruction TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B57" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622913520690767427
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  244  <|@ instruction rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4622951772895255204
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  252  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  254  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  256  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed} <|@ <|@
      nr  258  <|@ instruction MOV [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  260  <|@ instruction MOV [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  262  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B35" 
    successors "B44" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  268  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B37" "B39" "B43" "B42" 
    successors "B29" "B46" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4623020077489603657
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  340  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  342  <|@ instruction MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD <|@ <|@
      nr  348  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr  350  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B29" "B48" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4622337031546119131
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B29" "B50" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621722290196983058
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B29" "B52" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  380  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591746241005212487
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  390  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  392  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  394  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591038058971007731
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  402  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  404  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B54 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B44" "B41" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4608143186720523116
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  282  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  284  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607596749965735496
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  288  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  290  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607027494972835867
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  300  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  302  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593407408739766865
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  312  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r10:0, r11:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  322  <|@ st <@st|@reference-map: [rax:0, rcx:0, rbx:0, r10:0, r11:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} rdx|DWORD rbx|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]} LTowers$TowersDisk; r9|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592533109932106661
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B29" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4576819078054691486
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B53 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B29" "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B17" "B14" 
    xhandlers
    flags 
    probability 4591389796106704867
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   78  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   80  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4590717258562350873
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction rax|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr   88  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4590111974772432279
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   96  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B28" "B25" 
    xhandlers
    flags 
    probability 4590111974772432280
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  178  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  180  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4575366108728510705
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  190  <|@ instruction rax|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  192  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4574494500071027929
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction r9|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  200  <|@ instruction MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD <|@ <|@
      nr  204  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4576533922135885397
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>} <|@ <|@
      nr  114  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16] <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [rax:0, r8:0, r9:0, r10:0, r11:0]
live-base-pointers: []
Towers.pushDisk(Towers$TowersDisk, int) [bci: 32]
locals: r10|QWORD[.] vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} rdx|DWORD r9|QWORD[.] 
Towers.buildTowerAt(int, int) [bci: 16]
locals: r10|QWORD[.] rdx|DWORD - rcx|DWORD 
vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]} LTowers$TowersDisk; rcx|DWORD Object[null] 
>@ <|@ instruction NULLCHECK [rax|QWORD[.]] state [bci:32, 16] <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4575995892100402195
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4560112092531433663
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5] // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" "B58" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  442  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD <|@ <|@
      nr  444  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 0]
locals: r10|QWORD[.] rdx|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction MOV [r15|QWORD + 1156] y: -51731 size: DWORD <|@ <|@
      nr  432  <|@ instruction MOV [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  434  <|@ st <@st|@reference-map: [r10:0]
live-base-pointers: []
Towers.buildTowerAt(int, int) [bci: 2]
locals: r10|QWORD[.] rdx|DWORD - r9|DWORD 
>@ <|@ instruction DEOPT info [bci:2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B60" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed] // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_2       
     1: istore_3      
     2: iload_3       
     3: iflt          25
     6: aload_0       
     7: new           #13         // Towers$TowersDisk
    10: dup           
    11: iload_3       
    12: invokespecial #9          // Towers$TowersDisk.<init>:(int)void
    15: iload_1       
    16: invokevirtual #7          // pushDisk:(Towers$TowersDisk, int)void
    19: iinc          
    22: goto          2
    25: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000fbb97f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f858003000048896c24104c8bd685c90f8c4f020000418b72103b14f50c0000000f8305030000448bde49c1e303458b4493104585c00f840e000000423b0cc50c0000000f8d2d030000498bb7b8010000488d4618493b87c80100000f878e020000498987b80100000f18861801000048c70601000000c74608addeaddec7460c0000000048c74610000000004c8bce458941104189490c41807f40000f85dc010000498bf148c1ee034189749310498d7493104933f149b800006057ba7f000048f7c60000c0ff0f841d0000004d85c90f8414000000498d74931048c1ee0942803c06020f85ca010000ffc9448bc90f1f840000000000666666904585c90f8c60010000418b4c931085c90f840e000000443b0ccd0c0000000f8d34020000498bb7b8010000488d4618493b87c80100000f87f2000000498987b80100000f18861801000048c70601000000c74608addeaddec7460c0000000048c7461000000000488bde894b1044894b0c41807f40000f857c000000488bf348c1ee034189749310498d7493104833f341ffc948f7c60000c0ff0f8460ffffff4885db0f8457ffffff498d74931048c1ee0942803c06020f8443fffffff08304240042803c06000f8433ffffff42c6040600498b4f484903f04885c90f847d000000498b5f584889740bf8488d71f849897748e908ffffff498d7493108b3685f60f8475ffffff498b472848c1e6034885c00f843d000000498b4f3848897401f8488d70f849897728e94effffff48beaddeaddeaddeadde8bd948c1e303e8000000000f1f8400000000008500488bd8e915ffffffe800000000e91dffffffe800000000e997feffff488b6c24104883c418493ba7500400000f871b010000c5f877c3498d7493108b3685f60f8415feffff498b472848c1e6034885c00f84790000004d8b473849897400f8488d70f849897728e9eefdfffff08304240042803c06000f8426feffff42c6040600498b47484903f04885c00f84480000004d8b4f5849897401f8488d70f849897748e9fbfdffff48beaddeaddeaddeadde458bc849c1e103e8000000000f1f84000000000085004c8bc8e978fdffffe800000000e981fdffffe800000000e9bffdffff49c7c00000000041bbe581ffff45899f840400004d898790040000e8000000000f1f84000000000041c78784040000ed35ffff49c7879004000014000000e8000000000f1f84000000000049c7c01400000041bbed30ffffebb348896c2410e800000000e971fcfffff4488d0dd1feffff49898f68040000e923fcfffff441c78784040000f592ffff49c7879004000000000000e8000000000f1f84000000000041c787840400008f5afeff49c7879004000000000000e8000000000f1f84000000000041c787840400008ff0feff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD  <||@
  Comment 63 6 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 66 12 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 74 block B2 null  <||@
  Comment 74 14 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 74 16 rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 78 18 CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0]  <||@
  Comment 78 [rsi:0, r10:0]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r10|QWORD[.]  |rdx|DWORD  |rcx|DWORD  |-   <||@
  Comment 78 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 91 block B3 null  <||@
  Comment 91 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 91 22 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 98 24 r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 103 26 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 112 block B5 null  <||@
  Comment 112 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 112 30 CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD  <||@
  Comment 126 block B7 null  <||@
  Comment 126 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 126 38 rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 133 40 rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 137 42 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD  <||@
  Comment 150 block B9 null  <||@
  Comment 150 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 150 46 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 157 48 AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0  <||@
  Comment 164 50 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 171 52 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}  <||@
  Comment 171 {meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}}  <||@
  Comment 178 54 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 185 56 MOV [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 193 58 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 193 -1 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 196 60 JUMP ~[] destination: B9 -> B10  <||@
  Comment 196 block B10 null  <||@
  Comment 196 62 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 196 64 MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 200 66 MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 204 68 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null  <||@
  Comment 215 block B17 null  <||@
  Comment 215 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 215 140 rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 222 142 MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 227 144 rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 232 146 rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 235 148 r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000]  <||@
  Comment 245 150 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD  <||@
  Comment 258 block B19 null  <||@
  Comment 258 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 258 154 TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD  <||@
  Comment 267 block B21 null  <||@
  Comment 267 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 267 158 rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 272 160 rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD  <||@
  Comment 276 162 CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null  <||@
  Comment 287 block B28 null  <||@
  Comment 287 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 287 218 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 289 -1 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 292 220 JUMP ~[] destination: B28 -> B29  <||@
  Comment 292 block B29 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 292 222 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 304 224 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD  <||@
  Comment 313 block B30 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 313 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 313 228 rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 318 230 TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 326 block B32 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 326 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 326 234 CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD  <||@
  Comment 340 block B34 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 340 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 242 rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 347 244 rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 351 246 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD  <||@
  Comment 364 block B36 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 364 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 364 250 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 371 252 AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0  <||@
  Comment 378 254 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 385 256 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}  <||@
  Comment 385 {meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}}  <||@
  Comment 392 258 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 399 260 MOV [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 407 262 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 407 -1 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 410 264 JUMP ~[] destination: B36 -> B37  <||@
  Comment 410 block B37 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 410 266 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 410 268 MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 413 270 MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 417 272 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null  <||@
  Comment 428 block B44 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 428 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 428 340 rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 435 342 MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 440 344 rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 445 346 rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD  <||@
  Comment 448 348 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 451 350 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD  <||@
  Comment 464 block B46 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 464 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 464 354 TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD  <||@
  Comment 473 block B48 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 473 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 473 358 rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 478 360 rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD  <||@
  Comment 482 362 CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null  <||@
  Comment 493 block B50 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 493 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 493 378 MEMBAR barriers: 4  <||@
  Comment 498 380 CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null  <||@
  Comment 509 block B52 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 509 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 509 388 MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 514 390 rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 518 392 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD  <||@
  Comment 521 394 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD  <||@
  Comment 530 block B54 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 530 396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 530 398 rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 534 400 MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 539 402 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 543 404 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 547 406 JUMP ~[] destination: B54 -> B29  <||@
  Comment 552 block B39 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 552 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 552 280 rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 557 282 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 559 284 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD  <||@
  Comment 567 block B41 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 567 286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 567 288 rax|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 571 290 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 575 292 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD  <||@
  Comment 584 block B43 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 584 294 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 584 296 rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 588 298 MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 593 300 rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD  <||@
  Comment 597 302 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 601 304 JUMP ~[] destination: B43 -> B44  <||@
  Comment 606 block B35 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 606 310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 606 312 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>}  <||@
  Comment 606 {meta{HotSpotType<LTowers$TowersDisk;, resolved>}}  <||@
  Comment 616 314 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 622 318 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16]  <||@
  Comment 622 {Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 627 [rcx:0, rbx:0, r10:0, r11:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                             |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]}  |rdx|DWORD  |rbx|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3        
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |r9|DWORD   <||@
  Comment 635 322 NULLCHECK [rax|QWORD[.]] state [bci:32, 16]  <||@
  Comment 635 [rax:0, rcx:0, rbx:0, r10:0, r11:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                             |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]}  |rdx|DWORD  |rbx|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3        
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |r9|DWORD   <||@
  Comment 635 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 637 -1 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 640 324 JUMP ~[] destination: B35 -> B37  <||@
  Comment 645 block B42 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 645 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 645 334 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 645 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 650 336 JUMP ~[] destination: B42 -> B44  <||@
  Comment 655 block B53 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 655 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 655 410 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 655 412 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 655 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 660 414 JUMP ~[] destination: B53 -> B29  <||@
  Comment 665 block B56 null  <||@
  Comment 665 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 665 422 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 674 POLL_RETURN_FAR  <||@
  Comment 691 block B12 null  <||@
  Comment 691 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 691 76 rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 696 78 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 698 80 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 706 block B14 null  <||@
  Comment 706 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 706 84 rax|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 710 86 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 714 88 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 723 block B16 null  <||@
  Comment 723 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 723 92 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 727 94 MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 732 96 rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD  <||@
  Comment 736 98 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 740 100 JUMP ~[] destination: B16 -> B17  <||@
  Comment 745 block B23 null  <||@
  Comment 745 176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 745 178 MEMBAR barriers: 4  <||@
  Comment 750 180 CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null  <||@
  Comment 761 block B25 null  <||@
  Comment 761 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 761 188 MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 766 190 rax|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 770 192 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD  <||@
  Comment 773 194 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD  <||@
  Comment 782 block B27 null  <||@
  Comment 782 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 782 198 r9|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 786 200 MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 791 202 rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD  <||@
  Comment 795 204 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 799 206 JUMP ~[] destination: B27 -> B28  <||@
  Comment 804 block B8 null  <||@
  Comment 804 110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 804 112 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>}  <||@
  Comment 804 {meta{HotSpotType<LTowers$TowersDisk;, resolved>}}  <||@
  Comment 814 114 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 821 118 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16]  <||@
  Comment 821 {Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 826 [r8:0, r9:0, r10:0, r11:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3           
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |rdx|DWORD  |r9|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |rcx|DWORD   <||@
  Comment 834 122 NULLCHECK [rax|QWORD[.]] state [bci:32, 16]  <||@
  Comment 834 [rax:0, r8:0, r9:0, r10:0, r11:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3           
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |rdx|DWORD  |r9|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |rcx|DWORD   <||@
  Comment 834 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 836 -1 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 839 124 JUMP ~[] destination: B8 -> B10  <||@
  Comment 844 block B15 null  <||@
  Comment 844 130 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 844 134 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 844 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 849 136 JUMP ~[] destination: B15 -> B17  <||@
  Comment 854 block B26 null  <||@
  Comment 854 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 854 210 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 854 212 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 854 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 859 214 JUMP ~[] destination: B26 -> B28  <||@
  Comment 864 block B59 null  <||@
  Comment 864 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 864 -1 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 871 -1 r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5]  <||@
  Comment 877 426 JUMP ~[] destination: B59 -> B60  <||@
  Comment 877 block B60 null  <||@
  Comment 877 440 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 877 442 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 884 444 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 891 446 DEOPT info [bci:0]  <||@
  Comment 891 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 896 [r10:0]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r10|QWORD[.]  |rdx|DWORD  |rcx|DWORD  |-   <||@
  Comment 904 block B57 null  <||@
  Comment 904 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 904 430 MOV [r15|QWORD + 1156] y: -51731 size: DWORD  <||@
  Comment 915 432 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 926 434 DEOPT info [bci:2]  <||@
  Comment 926 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 931 [r10:0]at Towers.buildTowerAt(int, int) [bci: 2, duringCall: false, rethrow: false]
              |0             |1          |2  |3        
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |r9|DWORD   <||@
  Comment 939 block B58 null  <||@
  Comment 939 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 939 -1 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 946 -1 r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed]  <||@
  Comment 952 438 JUMP ~[] destination: B58 -> B60  <||@
  Comment 959 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 984 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 1012 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1017 [rsi:0, r10:0]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r10|QWORD[.]  |rdx|DWORD  |rcx|DWORD  |-   <||@
  Comment 1047 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1052 [rax:0, rcx:0, rbx:0, r10:0, r11:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                             |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]}  |rdx|DWORD  |rbx|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3        
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |r9|DWORD   <||@
  Comment 1082 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1087 [rax:0, r8:0, r9:0, r10:0, r11:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3           
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |rdx|DWORD  |r9|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |rcx|DWORD   <||@
  Comment 1095 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1095 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1101 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 1101 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5173[Towers.buildTowerAt(int, int)]"
  method "HotSpotCompilation-5173[Towers.buildTowerAt(int, int)]"
  date 1714038241531
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7fba63d18520 448b560849bc000000fbb97f00004d03d44d33e4493bc20f8543cbe6fe66669089842400c0feff4883ec189041817f20030000000f858003000048896c24104c8bd685c90f8c4f020000418b72103b14f50c0000000f8305030000448bde49c1e303458b4493104585c00f840e000000423b0cc50c0000000f8d2d030000498bb7b8010000488d4618493b87c80100000f878e020000498987b80100000f18861801000048c70601000000c74608f8da0001c7460c0000000048c74610000000004c8bce458941104189490c41807f40000f85dc010000498bf148c1ee034189749310498d7493104933f149b800006057ba7f000048f7c60000c0ff0f841d0000004d85c90f8414000000498d74931048c1ee0942803c06020f85ca010000ffc9448bc90f1f840000000000666666904585c90f8c60010000418b4c931085c90f840e000000443b0ccd0c0000000f8d34020000498bb7b8010000488d4618493b87c80100000f87f2000000498987b80100000f18861801000048c70601000000c74608f8da0001c7460c0000000048c7461000000000488bde894b1044894b0c41807f40000f857c000000488bf348c1ee034189749310498d7493104833f341ffc948f7c60000c0ff0f8460ffffff4885db0f8457ffffff498d74931048c1ee0942803c06020f8443fffffff08304240042803c06000f8433ffffff42c6040600498b4f484903f04885c90f847d000000498b5f584889740bf8488d71f849897748e908ffffff498d7493108b3685f60f8475ffffff498b472848c1e6034885c00f843d000000498b4f3848897401f8488d70f849897728e94effffff48bef8da00fcb97f00008bd948c1e303e8ed67fbfe0f1f8400000000008500488bd8e915ffffffe856dafafee91dffffffe84c18fbfee997feffff488b6c24104883c418493ba7500400000f871b010000c5f877c3498d7493108b3685f60f8415feffff498b472848c1e6034885c00f84790000004d8b473849897400f8488d70f849897728e9eefdfffff08304240042803c06000f8426feffff42c6040600498b47484903f04885c00f84480000004d8b4f5849897401f8488d70f849897748e9fbfdffff48bef8da00fcb97f0000458bc849c1e103e82667fbfe0f1f84000000000085004c8bc8e978fdffffe88fd9fafee981fdffffe88517fbfee9bffdffff49c7c00000000041bbe581ffff45899f840400004d898790040000e8da28e7fe0f1f84000000000041c78784040000ed35ffff49c7879004000014000000e8b728e7fe0f1f84000000000049c7c01400000041bbed30ffffebb348896c2410e83c29e5fee971fcfffff4488d0dd1feffff49898f68040000e90337e7fef441c78784040000f592ffff49c7879004000000000000e86128e7fe0f1f84000000000041c787840400008f5afeff49c7879004000000000000e83e28e7fe0f1f84000000000041c787840400008ff0feff49c7879004000000000000e81b28e7fe0f1f840000000000e894d5fafef4e8ae25e7fef4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@38369ec slotKind: QWORD  <||@
  Comment 63 6 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 66 12 TESTBRANCH (x: rcx|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.06666666666666667 condition: < trueDestination: B0 -> B56 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 74 block B2 null  <||@
  Comment 74 14 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 74 16 rsi|DWORD[_] = MOV [r10|QWORD[.] + 16] size: DWORD  <||@
  Comment 78 18 CMPBRANCH (x: rdx|DWORD, y: [rsi|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B59 size: DWORD state [bci:0]  <||@
  Comment 78 [rsi:0, r10:0]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r10|QWORD[.]  |rdx|DWORD  |rcx|DWORD  |-   <||@
  Comment 78 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 91 block B3 null  <||@
  Comment 91 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 91 22 r11|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 98 24 r8|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 103 26 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B3 -> B7 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 112 block B5 null  <||@
  Comment 112 28 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 112 30 CMPBRANCH (x: rcx|DWORD, y: [r8|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B5 -> B7 falseDestination: B5 -> B58 size: DWORD  <||@
  Comment 126 block B7 null  <||@
  Comment 126 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 126 38 rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 133 40 rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 137 42 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD  <||@
  Comment 150 block B9 null  <||@
  Comment 150 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 150 46 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 157 48 AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0  <||@
  Comment 164 50 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 171 52 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}  <||@
  Comment 171 {meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}}  <||@
  Comment 178 54 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 185 56 MOV [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 193 58 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 193 -1 r9|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 196 60 JUMP ~[] destination: B9 -> B10  <||@
  Comment 196 block B10 null  <||@
  Comment 196 62 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 196 64 MOV (x: [r9|QWORD[.] + 16], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 200 66 MOV (x: [r9|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 204 68 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B17 falseDestination: B10 -> B12 y: 0 size: BYTE inlinedY: null  <||@
  Comment 215 block B17 null  <||@
  Comment 215 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 215 140 rsi|DWORD[_] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 222 142 MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 227 144 rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 232 146 rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: r9|QWORD[.]) size: QWORD  <||@
  Comment 235 148 r8|QWORD = MOVE input: long[140438306553856|0x7fba57600000]  <||@
  Comment 245 150 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B17 -> B28 falseDestination: B17 -> B19 y: -4194304 size: QWORD  <||@
  Comment 258 block B19 null  <||@
  Comment 258 152 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 258 154 TESTBRANCH (x: r9|QWORD[.], y: r9|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B19 -> B28 falseDestination: B19 -> B21 size: QWORD  <||@
  Comment 267 block B21 null  <||@
  Comment 267 156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 267 158 rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 272 160 rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD  <||@
  Comment 276 162 CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B28 falseDestination: B21 -> B23 y: 2 size: BYTE inlinedY: null  <||@
  Comment 287 block B28 null  <||@
  Comment 287 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 287 218 rcx|DWORD = DEC rcx|DWORD size: DWORD  <||@
  Comment 289 -1 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 292 220 JUMP ~[] destination: B28 -> B29  <||@
  Comment 292 block B29 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 292 222 [] = LABEL alignment: 16 numbPhis: 1 label: ?  <||@
  Comment 304 224 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0714285714285714 condition: < trueDestination: B29 -> B56 falseDestination: B29 -> B30 size: DWORD  <||@
  Comment 313 block B30 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 313 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 313 228 rcx|DWORD[_] = MOV [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 318 230 TESTBRANCH (x: rcx|DWORD[_], y: rcx|DWORD[_]) trueDestinationProbability: 0.015600238878901168 condition: = trueDestination: B30 -> B34 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 326 block B32 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 326 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 326 234 CMPBRANCH (x: r9|DWORD, y: [rcx|DWORD[_] * 8 + 12]) trueDestinationProbability: 1.0 condition: < trueDestination: B32 -> B34 falseDestination: B32 -> B57 size: DWORD  <||@
  Comment 340 block B34 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 340 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 242 rsi|QWORD = MOV [r15|QWORD + 440] size: QWORD  <||@
  Comment 347 244 rax|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 351 246 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 size: QWORD  <||@
  Comment 364 block B36 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 364 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 364 250 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 371 252 AMD64PREFETCH ~[rsi|QWORD + 280] instr: 0  <||@
  Comment 378 254 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 385 256 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}  <||@
  Comment 385 {meta{HotSpotType<LTowers$TowersDisk;, resolved>;compressed}}  <||@
  Comment 392 258 MOV [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 399 260 MOV [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 407 262 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 407 -1 rbx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 410 264 JUMP ~[] destination: B36 -> B37  <||@
  Comment 410 block B37 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 410 266 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 410 268 MOV (x: [rbx|QWORD[.] + 16], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 413 270 MOV (x: [rbx|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 417 272 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B37 -> B44 falseDestination: B37 -> B39 y: 0 size: BYTE inlinedY: null  <||@
  Comment 428 block B44 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 428 338 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 428 340 rsi|DWORD[_] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 435 342 MOV (x: [r11|QWORD[.] + rdx|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 440 344 rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 445 346 rsi|QWORD[*] = XOR (x: rsi|QWORD[.+], y: rbx|QWORD[.]) size: QWORD  <||@
  Comment 448 348 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 451 350 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B29 falseDestination: B44 -> B46 y: -4194304 size: QWORD  <||@
  Comment 464 block B46 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 464 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 464 354 TESTBRANCH (x: rbx|QWORD[.], y: rbx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B29 falseDestination: B46 -> B48 size: QWORD  <||@
  Comment 473 block B48 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 473 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 473 358 rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 478 360 rsi|QWORD[*] = SHR rsi|QWORD[.+] y: 9 size: QWORD  <||@
  Comment 482 362 CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B48 -> B29 falseDestination: B48 -> B50 y: 2 size: BYTE inlinedY: null  <||@
  Comment 493 block B50 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 493 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 493 378 MEMBAR barriers: 4  <||@
  Comment 498 380 CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B50 -> B29 falseDestination: B50 -> B52 y: 0 size: BYTE inlinedY: null  <||@
  Comment 509 block B52 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 509 386 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 509 388 MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 514 390 rcx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 518 392 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD  <||@
  Comment 521 394 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD  <||@
  Comment 530 block B54 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 530 396 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 530 398 rbx|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 534 400 MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 539 402 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 543 404 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 547 406 JUMP ~[] destination: B54 -> B29  <||@
  Comment 552 block B39 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 552 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 552 280 rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 557 282 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 559 284 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B39 -> B44 falseDestination: B39 -> B41 size: DWORD  <||@
  Comment 567 block B41 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 567 286 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 567 288 rax|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 571 290 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 575 292 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 size: QWORD  <||@
  Comment 584 block B43 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 584 294 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 584 296 rcx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 588 298 MOV (x: [rcx|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 593 300 rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD  <||@
  Comment 597 302 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 601 304 JUMP ~[] destination: B43 -> B44  <||@
  Comment 606 block B35 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 606 310 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 606 312 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>}  <||@
  Comment 606 {meta{HotSpotType<LTowers$TowersDisk;, resolved>}}  <||@
  Comment 616 314 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 622 318 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16]  <||@
  Comment 622 {Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 627 [rcx:0, rbx:0, r10:0, r11:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                             |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]}  |rdx|DWORD  |rbx|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3        
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |r9|DWORD   <||@
  Comment 635 322 NULLCHECK [rax|QWORD[.]] state [bci:32, 16]  <||@
  Comment 635 [rax:0, rcx:0, rbx:0, r10:0, r11:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                             |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]}  |rdx|DWORD  |rbx|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3        
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |r9|DWORD   <||@
  Comment 635 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 637 -1 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 640 324 JUMP ~[] destination: B35 -> B37  <||@
  Comment 645 block B42 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 645 330 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 645 334 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 645 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 650 336 JUMP ~[] destination: B42 -> B44  <||@
  Comment 655 block B53 loop 0 depth 1 header:7|LoopBegin  <||@
  Comment 655 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 655 410 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 655 412 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 655 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 660 414 JUMP ~[] destination: B53 -> B29  <||@
  Comment 665 block B56 null  <||@
  Comment 665 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 665 422 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 674 POLL_RETURN_FAR  <||@
  Comment 691 block B12 null  <||@
  Comment 691 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 691 76 rsi|QWORD[.+] = LEA [r11|QWORD[.] + rdx|DWORD * 4 + 16] size: QWORD  <||@
  Comment 696 78 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 698 80 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B17 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 706 block B14 null  <||@
  Comment 706 82 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 706 84 rax|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 710 86 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 714 88 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 723 block B16 null  <||@
  Comment 723 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 723 92 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 727 94 MOV (x: [r8|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 732 96 rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD  <||@
  Comment 736 98 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 740 100 JUMP ~[] destination: B16 -> B17  <||@
  Comment 745 block B23 null  <||@
  Comment 745 176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 745 178 MEMBAR barriers: 4  <||@
  Comment 750 180 CMPCONSTBRANCH [rsi|QWORD[*] + r8|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B23 -> B28 falseDestination: B23 -> B25 y: 0 size: BYTE inlinedY: null  <||@
  Comment 761 block B25 null  <||@
  Comment 761 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 761 188 MOVB [rsi|QWORD[*] + r8|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 766 190 rax|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 770 192 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: r8|QWORD) size: QWORD  <||@
  Comment 773 194 TESTBRANCH (x: rax|QWORD, y: rax|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 size: QWORD  <||@
  Comment 782 block B27 null  <||@
  Comment 782 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 782 198 r9|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 786 200 MOV (x: [r9|QWORD + rax|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 791 202 rsi|QWORD = LEA [rax|QWORD - 8] size: QWORD  <||@
  Comment 795 204 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 799 206 JUMP ~[] destination: B27 -> B28  <||@
  Comment 804 block B8 null  <||@
  Comment 804 110 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 804 112 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<LTowers$TowersDisk;, resolved>}  <||@
  Comment 804 {meta{HotSpotType<LTowers$TowersDisk;, resolved>}}  <||@
  Comment 814 114 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@6fa6232 encoding: base: 0 shift: 3  <||@
  Comment 821 118 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD] [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:32, 16]  <||@
  Comment 821 {Stub<new_instance_or_null(KlassPointer)Object>@0x7fba62ccef80:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 826 [r8:0, r9:0, r10:0, r11:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3           
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |rdx|DWORD  |r9|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |rcx|DWORD   <||@
  Comment 834 122 NULLCHECK [rax|QWORD[.]] state [bci:32, 16]  <||@
  Comment 834 [rax:0, r8:0, r9:0, r10:0, r11:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3           
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |rdx|DWORD  |r9|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |rcx|DWORD   <||@
  Comment 834 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 836 -1 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 839 124 JUMP ~[] destination: B8 -> B10  <||@
  Comment 844 block B15 null  <||@
  Comment 844 130 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 844 134 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 844 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 849 136 JUMP ~[] destination: B15 -> B17  <||@
  Comment 854 block B26 null  <||@
  Comment 854 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 854 210 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 854 212 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 854 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 859 214 JUMP ~[] destination: B26 -> B28  <||@
  Comment 864 block B59 null  <||@
  Comment 864 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 864 -1 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 871 -1 r11|DWORD = MOVE input: int[-32283|0xffffffffffff81e5]  <||@
  Comment 877 426 JUMP ~[] destination: B59 -> B60  <||@
  Comment 877 block B60 null  <||@
  Comment 877 440 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 877 442 MOV (x: [r15|QWORD + 1156], y: r11|DWORD) size: DWORD  <||@
  Comment 884 444 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 891 446 DEOPT info [bci:0]  <||@
  Comment 891 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 896 [r10:0]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r10|QWORD[.]  |rdx|DWORD  |rcx|DWORD  |-   <||@
  Comment 904 block B57 null  <||@
  Comment 904 428 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 904 430 MOV [r15|QWORD + 1156] y: -51731 size: DWORD  <||@
  Comment 915 432 MOV [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 926 434 DEOPT info [bci:2]  <||@
  Comment 926 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 931 [r10:0]at Towers.buildTowerAt(int, int) [bci: 2, duringCall: false, rethrow: false]
              |0             |1          |2  |3        
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |r9|DWORD   <||@
  Comment 939 block B58 null  <||@
  Comment 939 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 939 -1 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 946 -1 r11|DWORD = MOVE input: int[-53011|0xffffffffffff30ed]  <||@
  Comment 952 438 JUMP ~[] destination: B58 -> B60  <||@
  Comment 959 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 984 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 1012 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1017 [rsi:0, r10:0]at Towers.buildTowerAt(int, int) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2          |3 
     locals:  |r10|QWORD[.]  |rdx|DWORD  |rcx|DWORD  |-   <||@
  Comment 1047 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1052 [rax:0, rcx:0, rbx:0, r10:0, r11:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                             |2          |3            
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=r9|DWORD,next=Object[null]}  |rdx|DWORD  |rbx|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3        
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |r9|DWORD   <||@
  Comment 1082 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1087 [rax:0, r8:0, r9:0, r10:0, r11:0]at Towers.pushDisk(Towers$TowersDisk, int) [bci: 32, duringCall: false, rethrow: false]
              |0             |1                                                              |2          |3           
     locals:  |r10|QWORD[.]  |vobject:Towers$TowersDisk:0{size=rcx|DWORD,next=Object[null]}  |rdx|DWORD  |r9|QWORD[.] 
  at Towers.buildTowerAt(int, int) [bci: 16, duringCall: true, rethrow: false]
              |0             |1          |2  |3         
     locals:  |r10|QWORD[.]  |rdx|DWORD  |-  |rcx|DWORD   <||@
  Comment 1095 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1095 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1101 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 1101 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
