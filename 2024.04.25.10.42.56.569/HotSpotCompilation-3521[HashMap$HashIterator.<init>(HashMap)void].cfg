begin_compilation
  name " HotSpotCompilation-3521[java.util.HashMap$HashIterator.<init>(HashMap)]"
  method "HotSpotCompilation-3521[java.util.HashMap$HashIterator.<init>(HashMap)]"
  date 1714038183741
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i581 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i581  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap$HashIterator
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v592 ?47 v594 v598 v596 ?17 ?33 v597 j250 j432 j527 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a587 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1587
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a587 
=== Succesors ===
=== Usages ===
i581 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a587  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.util.HashMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v595 a96 v593 v599 ?17 a249 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i581 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-25867|0xffffffffffff9af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1588) [bci: 11]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v593 
lastLocationAccess: - 
=== Succesors ===
next: a582 
=== Usages ===
v108 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v593 lastLocationAccess: - #next: a582  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a582 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1589) [bci: 18]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
lastLocationAccess: - 
=== Succesors ===
next: i583 
=== Usages ===
a112 v124 v600 v601 
=== Predecessor ===
i581 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v595 lastLocationAccess: - #next: i583  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i583 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i583 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 42]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v599 
lastLocationAccess: - 
=== Succesors ===
next: v246 
=== Usages ===
v24 
=== Predecessor ===
a582 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v599 lastLocationAccess: - #next: v246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j201 
=== Usages ===
=== Predecessor ===
i583 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j201 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j202 
=== Usages ===
v603 v605 v606 
=== Predecessor ===
v246 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j202  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v99 j202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v592 
=== Succesors ===
next: i232 
=== Usages ===
v604 
=== Predecessor ===
j201 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v592 #next: i232  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v603 
lastLocationAccess: - 
=== Succesors ===
next: v206 
=== Usages ===
v240 
=== Predecessor ===
j202 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v603 lastLocationAccess: - #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 v295 v302 v342 v382 v422 v472 v478 v518 v567 v573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i239 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i232 y: i239  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j231 j292 j334 j374 j414 j469 j510 j564 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v551 v215 v256 v276 v533 v323 v499 v363 v456 v403 v438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v205 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
i232 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v205 #falseSuccessor: v204  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v209  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v205 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a233 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a233  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j202 
index: - 
=== Succesors ===
=== Usages ===
a233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a233 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
lastLocationAccess: - 
=== Succesors ===
next: v213 
=== Usages ===
a234 v241 
=== Predecessor ===
v204 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v604 lastLocationAccess: - #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a233 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a233  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v212 
falseSuccessor: v208 
=== Usages ===
=== Predecessor ===
a233 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v212 #falseSuccessor: v208  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v211 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v211  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v212 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j235 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j235  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
j235 v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j235 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
v215 j231 v607 
=== Predecessor ===
v208 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v605 lastLocationAccess: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j235 
y: j227 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j235 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid a234 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a233 
=== Succesors ===
=== Usages ===
j220 v223 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a233  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v215 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
j235 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v215 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a234 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a234 #next: v224  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v223 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j236 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j236  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
j236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j236 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v606 
lastLocationAccess: - 
=== Succesors ===
next: j220 
=== Usages ===
v607 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v606 lastLocationAccess: - #next: j220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a234 
=== Succesors ===
next: v237 
=== Usages ===
v237 
=== Predecessor ===
j236 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a234 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j236 
index: j235 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j236 index: j235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
value: j220 
stateAfter: - 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
j220 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - value: j220 stateAfter: - #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
=== Inputs ===
x: j235 
y: j230 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j235 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
lastLocationAccess: - 
value: j231 
stateAfter: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v605 lastLocationAccess: - value: j231 stateAfter: - #next: v222  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v238 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v209 v211 v222 v224 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v209 v211 v222 v224 #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid a96 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
op: Compress
stamp: n java.util.HashMap
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.this$0
location: HashMap$HashIterator.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
lastLocationAccess: - 
value: a96 
stateAfter: - 
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v592 lastLocationAccess: - value: a96 stateAfter: - #next: v308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j248 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j248 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a249 
=== Usages ===
v608 v609 
=== Predecessor ===
v308 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: a java.util.HashMap
=== Inputs ===
object: a2 
=== Succesors ===
next: j250 
=== Usages ===
j251 
=== Predecessor ===
j248 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2 #next: j250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j251 
=== Usages ===
j252 j265 
=== Predecessor ===
a249 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a249 
=== Succesors ===
next: v255 
=== Usages ===
j252 v256 
=== Predecessor ===
j250 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a249 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
=== Inputs ===
x: j250 
y: j251 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j250 y: j251  <|@  <|@
f <@~|@floating>@ <|@
tid j286 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 v466 v561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
x: j252 
y: j286 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j252 y: j286  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 v477 v572 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j265 j445 j540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 140438306553856
stableDimension: 0
stamp: i64 [140438306553856]
stampKind: i64
value: long[140438306553856|0x7fba57600000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j288 v611 j467 v630 j562 v639 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v254 
falseSuccessor: v253 
=== Usages ===
=== Predecessor ===
j251 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v254 #falseSuccessor: v253  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v254 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j251 
y: j227 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j251 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v256 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v257 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v256 #trueSuccessor: v261 #falseSuccessor: v257  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i293 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i293  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j250 
y: i264 
=== Succesors ===
=== Usages ===
j288 v611 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j250 y: i264  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j265 
index: j263 
=== Succesors ===
=== Usages ===
i293 i294 v295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j265 index: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i293 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
lastLocationAccess: - 
=== Succesors ===
next: v269 
=== Usages ===
v301 
=== Predecessor ===
v257 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v611 lastLocationAccess: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i293 
y: i300 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i293 y: i300  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v301 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v266 
=== Usages ===
=== Predecessor ===
i293 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v301 #trueSuccessor: v268 #falseSuccessor: v266  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v267  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v268 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i294 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i294 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
lastLocationAccess: - 
=== Succesors ===
next: v274 
=== Usages ===
v302 
=== Predecessor ===
v270 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v611 lastLocationAccess: - #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i294 
y: i239 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i294 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v302 
=== Succesors ===
trueSuccessor: v273 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
i294 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v302 #trueSuccessor: v273 #falseSuccessor: v271  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
lastLocationAccess: - 
value: i239 
stateAfter: - 
=== Succesors ===
next: j296 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v611 lastLocationAccess: - value: i239 stateAfter: - #next: j296  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: - 
=== Succesors ===
=== Usages ===
j296 v299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j296 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v608 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
v276 j292 v610 
=== Predecessor ===
v295 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v608 lastLocationAccess: - #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j296 
y: j227 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j296 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid j288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j265 
y: j263 
=== Succesors ===
=== Usages ===
v283 v298 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j265 y: j263  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v276 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v277 
=== Usages ===
=== Predecessor ===
j296 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v276 #trueSuccessor: v278 #falseSuccessor: v277  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j288 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j288 #next: v284  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v283 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j297 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j297  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: - 
=== Succesors ===
=== Usages ===
j297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j297 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
lastLocationAccess: - 
=== Succesors ===
next: v298 
=== Usages ===
v610 
=== Predecessor ===
v277 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v609 lastLocationAccess: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j297 
index: j296 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j297 index: j296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v610 
lastLocationAccess: - 
value: j288 
stateAfter: - 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
j297 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v610 lastLocationAccess: - value: j288 stateAfter: - #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
=== Inputs ===
x: j296 
y: j230 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j296 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v608 
lastLocationAccess: - 
value: j292 
stateAfter: - 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v608 lastLocationAccess: - value: j292 stateAfter: - #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v258 v260 v267 v272 v282 v284 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v258 v260 v267 v272 v282 v284 #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.expectedModCount
location: HashMap$HashIterator.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1588) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
lastLocationAccess: - 
value: i581 
stateAfter: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v594 lastLocationAccess: - value: i581 stateAfter: - #next: v348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: j309 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j309 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j310 
=== Usages ===
v612 v614 v615 
=== Predecessor ===
v348 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j310  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v116 v142 v155 j310 j390 j486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v596 
=== Succesors ===
next: i335 
=== Usages ===
v613 
=== Predecessor ===
j309 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v596 #next: i335  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: - 
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i335 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v612 
lastLocationAccess: - 
=== Succesors ===
next: v314 
=== Usages ===
v342 
=== Predecessor ===
j310 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v612 lastLocationAccess: - #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i335 
y: i239 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i335 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
i335 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v313 #falseSuccessor: v312  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v313 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a336 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a336  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j310 
index: - 
=== Succesors ===
=== Usages ===
a336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j310 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a336 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
lastLocationAccess: - 
=== Succesors ===
next: v321 
=== Usages ===
a337 v343 
=== Predecessor ===
v312 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v613 lastLocationAccess: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a336 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a336  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v343 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
a336 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v343 #trueSuccessor: v320 #falseSuccessor: v316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v319  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v320 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: j338 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j338  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: - 
=== Succesors ===
=== Usages ===
j338 v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j338 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v614 
lastLocationAccess: - 
=== Succesors ===
next: v326 
=== Usages ===
v323 j334 v616 
=== Predecessor ===
v316 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v614 lastLocationAccess: - #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j338 
y: j227 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j338 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid a337 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a336 
=== Succesors ===
=== Usages ===
j328 v331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a336  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v325 
falseSuccessor: v324 
=== Usages ===
=== Predecessor ===
j338 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v325 #falseSuccessor: v324  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a337 
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a337 #next: v332  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: j339 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j339  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: - 
=== Succesors ===
=== Usages ===
j339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j339 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
lastLocationAccess: - 
=== Succesors ===
next: j328 
=== Usages ===
v616 
=== Predecessor ===
v324 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v615 lastLocationAccess: - #next: j328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a337 
=== Succesors ===
next: v340 
=== Usages ===
v340 
=== Predecessor ===
j339 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a337 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j339 
index: j338 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j339 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v616 
lastLocationAccess: - 
value: j328 
stateAfter: - 
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
j328 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v616 lastLocationAccess: - value: j328 stateAfter: - #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
=== Inputs ===
x: j338 
y: j230 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j338 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v614 
lastLocationAccess: - 
value: j334 
stateAfter: - 
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v614 lastLocationAccess: - value: j334 stateAfter: - #next: v330  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v317 v319 v330 v332 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v317 v319 v330 v332 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid a158 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 v118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
value: a158 
stateAfter: - 
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - value: a158 stateAfter: - #next: v388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j349 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j349 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j350 
=== Usages ===
v617 v619 v620 
=== Predecessor ===
v388 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j350  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v118 j350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v597 
=== Succesors ===
next: i375 
=== Usages ===
v618 
=== Predecessor ===
j349 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v597 #next: i375  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
i375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
lastLocationAccess: - 
=== Succesors ===
next: v354 
=== Usages ===
v382 
=== Predecessor ===
j350 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v617 lastLocationAccess: - #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i375 
y: i239 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i375 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v353 
falseSuccessor: v352 
=== Usages ===
=== Predecessor ===
i375 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v353 #falseSuccessor: v352  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v353 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a376 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a376  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
a376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a376 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v618 
lastLocationAccess: - 
=== Succesors ===
next: v361 
=== Usages ===
a377 v383 
=== Predecessor ===
v352 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v618 lastLocationAccess: - #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a376 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a376  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v383 
=== Succesors ===
trueSuccessor: v360 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
a376 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v383 #trueSuccessor: v360 #falseSuccessor: v356  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j378 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j378  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
j378 v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j378 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
v363 j374 v621 
=== Predecessor ===
v356 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v619 lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j378 
y: j227 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j378 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid a377 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a376 
=== Succesors ===
=== Usages ===
j368 v371 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a376  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v363 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
j378 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v363 #trueSuccessor: v365 #falseSuccessor: v364  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a377 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a377 #next: v372  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j379 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
j379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
lastLocationAccess: - 
=== Succesors ===
next: j368 
=== Usages ===
v621 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v620 lastLocationAccess: - #next: j368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a377 
=== Succesors ===
next: v380 
=== Usages ===
v380 
=== Predecessor ===
j379 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a377 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j379 
index: j378 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
lastLocationAccess: - 
value: j368 
stateAfter: - 
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
j368 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v621 lastLocationAccess: - value: j368 stateAfter: - #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid j374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
=== Inputs ===
x: j378 
y: j230 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j378 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
lastLocationAccess: - 
value: j374 
stateAfter: - 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v619 lastLocationAccess: - value: j374 stateAfter: - #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v357 v359 v370 v372 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v357 v359 v370 v372 #next: v118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.current
location: HashMap$HashIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v597 
lastLocationAccess: - 
value: a158 
stateAfter: - 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v597 lastLocationAccess: - value: a158 stateAfter: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v121 v129 v143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1591) [bci: 33]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 v131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1591) [bci: 34]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - value: i15 stateAfter: - #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 53]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a582 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a582  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 38]
profileData: PROFILED designatedSuccessorProbability: 0.0018282342214175859
stamp: void
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v20 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 45]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 i42 i84 v129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 45]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i583 
y: i23 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i583 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 45]
profileData: PROFILED designatedSuccessorProbability: 2.3260934965518842E-5
stamp: void
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v29 #falseSuccessor: v25  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: i584 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i584  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a582 
=== Succesors ===
=== Usages ===
i584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i584 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 53]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v600 
lastLocationAccess: - 
=== Succesors ===
next: v184 
=== Usages ===
v131 v145 
=== Predecessor ===
v25 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v600 lastLocationAccess: - #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i584 
y: i15 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i584 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid a112 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1589) [bci: 18]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a582 
=== Succesors ===
=== Usages ===
?33 v602 ?17 ?47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a582  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v183 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
i584 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v183 #falseSuccessor: v181  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: aload_2
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1591) [bci: 34]
sourceFile: HashMap.java
sourceLine: 1592
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a112 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a112  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 159
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@7f1c506c
stamp: void
=== Inputs ===
stateBefore: ?17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 67]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
value: i23 
stateAfter: - 
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - value: i23 stateAfter: - #next: v428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j389 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j389 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j390 
=== Usages ===
v622 v624 v625 
=== Predecessor ===
v428 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v596 
=== Succesors ===
next: i415 
=== Usages ===
v623 
=== Predecessor ===
j389 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v596 #next: i415  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j389 
index: - 
=== Succesors ===
=== Usages ===
i415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j389 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i415 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
lastLocationAccess: - 
=== Succesors ===
next: v394 
=== Usages ===
v422 
=== Predecessor ===
j390 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 lastLocationAccess: - #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i415 
y: i239 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i415 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v422 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
i415 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v422 #trueSuccessor: v393 #falseSuccessor: v392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a416 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a416  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j390 
index: - 
=== Succesors ===
=== Usages ===
a416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a416 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
lastLocationAccess: - 
=== Succesors ===
next: v401 
=== Usages ===
a417 v423 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v623 lastLocationAccess: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a416 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a416  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
a416 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v400 #falseSuccessor: v396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j418 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j418  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j389 
index: - 
=== Succesors ===
=== Usages ===
j418 v421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j389 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j418 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
=== Succesors ===
next: v406 
=== Usages ===
v403 j414 v626 
=== Predecessor ===
v396 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j418 
y: j227 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j418 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid a417 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a416 
=== Succesors ===
=== Usages ===
j408 v411 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a416  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
j418 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v405 #falseSuccessor: v404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a417 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a417 #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j419 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j419  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j389 
index: - 
=== Succesors ===
=== Usages ===
j419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j389 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j419 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v625 
lastLocationAccess: - 
=== Succesors ===
next: j408 
=== Usages ===
v626 
=== Predecessor ===
v404 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v625 lastLocationAccess: - #next: j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a417 
=== Succesors ===
next: v420 
=== Usages ===
v420 
=== Predecessor ===
j419 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a417 #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j419 
index: j418 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j419 index: j418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
lastLocationAccess: - 
value: j408 
stateAfter: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
j408 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v626 lastLocationAccess: - value: j408 stateAfter: - #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid j414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j418 
y: j230 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j418 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
value: j414 
stateAfter: - 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - value: j414 stateAfter: - #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v397 v399 v410 v412 
=== Succesors ===
next: a585 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v397 v399 v410 v412 #next: a585  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a582 
=== Succesors ===
=== Usages ===
a585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a585 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v601 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
v142 v161 a429 
=== Predecessor ===
v398 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v601 lastLocationAccess: - #next: v142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
value: a585 
stateAfter: - 
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
a585 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - value: a585 stateAfter: - #next: v484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j430 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a431 
=== Usages ===
v627 v628 
=== Predecessor ===
v484 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a431  <|@  <|@
f <@~|@floating>@ <|@
tid a429 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a585 
=== Succesors ===
=== Usages ===
a431 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a429 
=== Succesors ===
next: j432 
=== Usages ===
j433 
=== Predecessor ===
j430 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a429 #next: j432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j433 
=== Usages ===
j434 j445 
=== Predecessor ===
a431 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a431 
=== Succesors ===
next: v437 
=== Usages ===
j434 v438 
=== Predecessor ===
j432 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a431 #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j432 
y: j433 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j432 y: j433  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
x: j434 
y: j286 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j434 y: j286  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v466 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
j433 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v466 #trueSuccessor: v436 #falseSuccessor: v435  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v436 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j433 
y: j227 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j433 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v438 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v439 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v438 #trueSuccessor: v443 #falseSuccessor: v439  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v442  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i470 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i470  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j432 
y: i264 
=== Succesors ===
=== Usages ===
j467 v630 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j432 y: i264  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: j263 
=== Succesors ===
=== Usages ===
i470 i471 v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i470 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
v477 
=== Predecessor ===
v439 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v630 lastLocationAccess: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i470 
y: i300 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i470 y: i300  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v448 
falseSuccessor: v446 
=== Usages ===
=== Predecessor ===
i470 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v448 #falseSuccessor: v446  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v448 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i471 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i471 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
v478 
=== Predecessor ===
v450 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v630 lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i471 
y: i239 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i471 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v478 
=== Succesors ===
trueSuccessor: v453 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
i471 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v478 #trueSuccessor: v453 #falseSuccessor: v451  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v452  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
lastLocationAccess: - 
value: i239 
stateAfter: - 
=== Succesors ===
next: j473 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v630 lastLocationAccess: - value: i239 stateAfter: - #next: j473  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j430 
index: - 
=== Succesors ===
=== Usages ===
j473 v476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j473 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
lastLocationAccess: - 
=== Succesors ===
next: v459 
=== Usages ===
v456 j469 v629 
=== Predecessor ===
v472 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v627 lastLocationAccess: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j473 
y: j227 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j473 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid j467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j445 
y: j263 
=== Succesors ===
=== Usages ===
v463 v475 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j445 y: j263  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v458 
falseSuccessor: v457 
=== Usages ===
=== Predecessor ===
j473 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v458 #falseSuccessor: v457  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j467 
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j467 #next: v464  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v463 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j474 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j474  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j430 
index: - 
=== Succesors ===
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j474 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v628 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
v629 
=== Predecessor ===
v457 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v628 lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j474 
index: j473 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j474 index: j473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
value: j467 
stateAfter: - 
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
j474 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - value: j467 stateAfter: - #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid j469 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j473 
y: j230 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j473 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
lastLocationAccess: - 
value: j469 
stateAfter: - 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v627 lastLocationAccess: - value: j469 stateAfter: - #next: v462  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v476 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v440 v442 v447 v452 v462 v464 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v440 v442 v447 v452 v462 v464 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a585 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a585  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.7703136090873518
stamp: void
=== Inputs ===
condition: v161 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v161 #trueSuccessor: v72 #falseSuccessor: v70  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i23 i42 
=== Succesors ===
=== Usages ===
v145 i42 v602 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i23 i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v31 
=== Succesors ===
next: v188 
=== Usages ===
v50 v52 i84 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v31 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i584 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i84 y: i584  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v145 
=== Succesors ===
trueSuccessor: v185 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v145 #trueSuccessor: v185 #falseSuccessor: v187  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 66]
stamp: i32
=== Inputs ===
x: i84 
y: i23 
=== Succesors ===
=== Usages ===
v143 i84 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i84 y: i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 67]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - value: i42 stateAfter: - #next: v524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j485 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j485 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j486 
=== Usages ===
v631 v633 v634 
=== Predecessor ===
v524 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v596 
=== Succesors ===
next: i511 
=== Usages ===
v632 
=== Predecessor ===
j485 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v596 #next: i511  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j485 
index: - 
=== Succesors ===
=== Usages ===
i511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i511 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v631 
lastLocationAccess: - 
=== Succesors ===
next: v490 
=== Usages ===
v518 
=== Predecessor ===
j486 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v631 lastLocationAccess: - #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i511 
y: i239 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i511 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v489 
falseSuccessor: v488 
=== Usages ===
=== Predecessor ===
i511 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v489 #falseSuccessor: v488  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v493  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a512 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a512  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
a512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a512 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v632 
lastLocationAccess: - 
=== Succesors ===
next: v497 
=== Usages ===
a513 v519 
=== Predecessor ===
v488 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v632 lastLocationAccess: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a512 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a512  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v492 
=== Usages ===
=== Predecessor ===
a512 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v496 #falseSuccessor: v492  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v496 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j514 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j514  <|@  <|@
f <@~|@floating>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j485 
index: - 
=== Succesors ===
=== Usages ===
j514 v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j514 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v633 
lastLocationAccess: - 
=== Succesors ===
next: v502 
=== Usages ===
v499 j510 v635 
=== Predecessor ===
v492 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v633 lastLocationAccess: - #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j514 
y: j227 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j514 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid a513 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a512 
=== Succesors ===
=== Usages ===
j504 v507 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a512  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v500 
=== Usages ===
=== Predecessor ===
j514 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v501 #falseSuccessor: v500  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a513 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a513 #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j515 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j515  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j485 
index: - 
=== Succesors ===
=== Usages ===
j515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j515 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v634 
lastLocationAccess: - 
=== Succesors ===
next: j504 
=== Usages ===
v635 
=== Predecessor ===
v500 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v634 lastLocationAccess: - #next: j504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a513 
=== Succesors ===
next: v516 
=== Usages ===
v516 
=== Predecessor ===
j515 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a513 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j515 
index: j514 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j515 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v635 
lastLocationAccess: - 
value: j504 
stateAfter: - 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
j504 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v635 lastLocationAccess: - value: j504 stateAfter: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid j510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j514 
y: j230 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j514 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v633 
lastLocationAccess: - 
value: j510 
stateAfter: - 
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v633 lastLocationAccess: - value: j510 stateAfter: - #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v493 v495 v506 v508 
=== Succesors ===
next: a586 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v493 v495 v506 v508 #next: a586  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a112 
index: i84 
=== Succesors ===
=== Usages ===
a586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a112 index: i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a586 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v602 
lastLocationAccess: - 
=== Succesors ===
next: v155 
=== Usages ===
a153 v163 v155 
=== Predecessor ===
v494 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v602 lastLocationAccess: - #next: v155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
value: a586 
stateAfter: - 
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
a586 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - value: a586 stateAfter: - #next: v579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j525 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j525 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a526 
=== Usages ===
v636 v637 
=== Predecessor ===
v579 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a526  <|@  <|@
f <@~|@floating>@ <|@
tid a153 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a586 
=== Succesors ===
=== Usages ===
?47 a526 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a586  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a153 
=== Succesors ===
next: j527 
=== Usages ===
j528 
=== Predecessor ===
j525 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a153 #next: j527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j528 
=== Usages ===
j529 j540 
=== Predecessor ===
a526 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a526 
=== Succesors ===
next: v532 
=== Usages ===
j529 v533 
=== Predecessor ===
j527 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a526 #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j527 
y: j528 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j527 y: j528  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
x: j529 
y: j286 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j529 y: j286  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v561 
=== Succesors ===
trueSuccessor: v531 
falseSuccessor: v530 
=== Usages ===
=== Predecessor ===
j528 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v561 #trueSuccessor: v531 #falseSuccessor: v530  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j528 
y: j227 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j528 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v533 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v533 #trueSuccessor: v538 #falseSuccessor: v534  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v537  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i565 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i565  <|@  <|@
f <@~|@floating>@ <|@
tid j540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j527 
y: i264 
=== Succesors ===
=== Usages ===
j562 v639 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j527 y: i264  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j540 
index: j263 
=== Succesors ===
=== Usages ===
i565 i566 v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j540 index: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i565 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
=== Succesors ===
next: v544 
=== Usages ===
v572 
=== Predecessor ===
v534 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i565 
y: i300 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i565 y: i300  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v572 
=== Succesors ===
trueSuccessor: v543 
falseSuccessor: v541 
=== Usages ===
=== Predecessor ===
i565 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v572 #trueSuccessor: v543 #falseSuccessor: v541  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v542  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v543 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i566 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i566 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
=== Succesors ===
next: v549 
=== Usages ===
v573 
=== Predecessor ===
v545 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i566 
y: i239 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i566 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v573 
=== Succesors ===
trueSuccessor: v548 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
i566 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v573 #trueSuccessor: v548 #falseSuccessor: v546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
value: i239 
stateAfter: - 
=== Succesors ===
next: j568 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - value: i239 stateAfter: - #next: j568  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j525 
index: - 
=== Succesors ===
=== Usages ===
j568 v571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j525 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j568 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v636 
lastLocationAccess: - 
=== Succesors ===
next: v554 
=== Usages ===
v551 j564 v638 
=== Predecessor ===
v567 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v636 lastLocationAccess: - #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j568 
y: j227 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j568 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid j562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j540 
y: j263 
=== Succesors ===
=== Usages ===
v558 v570 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j540 y: j263  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v551 
=== Succesors ===
trueSuccessor: v553 
falseSuccessor: v552 
=== Usages ===
=== Predecessor ===
j568 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v551 #trueSuccessor: v553 #falseSuccessor: v552  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j562 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j562 #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v558 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j569 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j569  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j525 
index: - 
=== Succesors ===
=== Usages ===
j569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j525 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j569 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v637 
lastLocationAccess: - 
=== Succesors ===
next: v570 
=== Usages ===
v638 
=== Predecessor ===
v552 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v637 lastLocationAccess: - #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j569 
index: j568 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j569 index: j568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
lastLocationAccess: - 
value: j562 
stateAfter: - 
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
j569 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v638 lastLocationAccess: - value: j562 stateAfter: - #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid j564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j568 
y: j230 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j568 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v636 
lastLocationAccess: - 
value: j564 
stateAfter: - 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v636 lastLocationAccess: - value: j564 stateAfter: - #next: v557  <|@  <|@
f <@*|@fixed>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v571 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v535 v537 v542 v547 v557 v559 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v535 v537 v542 v547 v557 v559 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a586 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a586  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
profileData: INJECTED designatedSuccessorProbability: 0.7018274269037323
stamp: void
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v53 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 75
bytecode: ifnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
sourceFile: HashMap.java
sourceLine: 1593
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a153 a1 - a112 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a153 a1 - a112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
stateBefore: ?47 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?47 #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
loopBegin: v32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v32 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v32 #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 48
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1593
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - a112 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a112  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 146
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@7f1c506c
stamp: void
=== Inputs ===
stateBefore: ?33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?33  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v26 v28 v49 v81 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v26 v28 v49 v81 #next: v157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|QWORD, y: v7|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + v7|QWORD * 1 - 8], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA [v7|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v12|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v14|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = ADD (x: v14|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = MOV [v19|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD[_], y: v20|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|QWORD, y: v21|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD + v21|QWORD * 1 - 8], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = XOR (x: v0|QWORD[.], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v41|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|QWORD[.], y: v40|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v42|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = ADD (x: v42|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD[_], y: v39|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV [v32|QWORD[.] + v47|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = XOR (x: v0|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v57|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = ADD (x: v58|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|DWORD[_], y: v55|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v56|QWORD[.] 
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction SAFEPOINT v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i581 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i581  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.HashMap$HashIterator
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v592 ?47 v594 v598 v596 ?17 ?33 v597 j250 j432 j527 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a587 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1587
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a587 
=== Succesors ===
=== Usages ===
i581 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a587  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.util.HashMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v595 a96 v593 v599 ?17 a249 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i581 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i581 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-25867|0xffffffffffff9af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1588) [bci: 11]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v593 
lastLocationAccess: - 
=== Succesors ===
next: a582 
=== Usages ===
v108 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v593 lastLocationAccess: - #next: a582  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
result [v1|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a582 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.table
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1589) [bci: 18]
stamp: n java.util.HashMap$Node[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
lastLocationAccess: - 
=== Succesors ===
next: i583 
=== Usages ===
a112 v124 v600 v601 
=== Predecessor ===
i581 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v595 lastLocationAccess: - #next: i583  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i583 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i583 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: HashMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 42]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v599 
lastLocationAccess: - 
=== Succesors ===
next: v246 
=== Usages ===
v24 
=== Predecessor ===
a582 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v599 lastLocationAccess: - #next: v246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j201 
=== Usages ===
=== Predecessor ===
i583 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j201 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j202 
=== Usages ===
v603 v605 v606 
=== Predecessor ===
v246 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j202  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v99 j202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j202 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v592 
=== Succesors ===
next: i232 
=== Usages ===
v604 
=== Predecessor ===
j201 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v592 #next: i232  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
i232 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i232 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v603 
lastLocationAccess: - 
=== Succesors ===
next: v206 
=== Usages ===
v240 
=== Predecessor ===
j202 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v603 lastLocationAccess: - #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid i239 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v240 v295 v302 v342 v382 v422 v472 v478 v518 v567 v573 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i232 
y: i239 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i232 y: i239  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j231 j292 j334 j374 j414 j469 j510 j564 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j227 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v551 v215 v256 v276 v533 v323 v499 v363 v456 v403 v438 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v240 
=== Succesors ===
trueSuccessor: v205 
falseSuccessor: v204 
=== Usages ===
=== Predecessor ===
i232 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v240 #trueSuccessor: v205 #falseSuccessor: v204  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v209 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v209  <|@  <|@
f <@*|@fixed>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v205 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a233 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a233  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
result [v5|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j202 
index: - 
=== Succesors ===
=== Usages ===
a233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a233 <|@
result v6|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
lastLocationAccess: - 
=== Succesors ===
next: v213 
=== Usages ===
a234 v241 
=== Predecessor ===
v204 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v604 lastLocationAccess: - #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a233 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a233  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v241 
=== Succesors ===
trueSuccessor: v212 
falseSuccessor: v208 
=== Usages ===
=== Predecessor ===
a233 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v241 #trueSuccessor: v212 #falseSuccessor: v208  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v211 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v211  <|@  <|@
f <@*|@fixed>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v212 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j235 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j235  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
j235 v238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j235 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
lastLocationAccess: - 
=== Succesors ===
next: v218 
=== Usages ===
v215 j231 v607 
=== Predecessor ===
v208 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v605 lastLocationAccess: - #next: v218  <|@  <|@
f <@~|@floating>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j235 
y: j227 
=== Succesors ===
=== Usages ===
v218 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j235 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid a234 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a233 
=== Succesors ===
=== Usages ===
j220 v223 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a233  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v215 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v216 
=== Usages ===
=== Predecessor ===
j235 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v215 #trueSuccessor: v217 #falseSuccessor: v216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|QWORD, y: v7|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v223 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v223 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a234 
=== Succesors ===
next: v224 
=== Usages ===
=== Predecessor ===
v217 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a234 #next: v224  <|@  <|@
f <@*|@fixed>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v223 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j236 
=== Usages ===
=== Predecessor ===
v218 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j236  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j201 
index: - 
=== Succesors ===
=== Usages ===
j236 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j201 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j236 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v606 
lastLocationAccess: - 
=== Succesors ===
next: j220 
=== Usages ===
v607 
=== Predecessor ===
v216 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v606 lastLocationAccess: - #next: j220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j220 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a234 
=== Succesors ===
next: v237 
=== Usages ===
v237 
=== Predecessor ===
j236 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a234 #next: v237  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
result [v9|QWORD + v7|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j236 
index: j235 
=== Succesors ===
=== Usages ===
v237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j236 index: j235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
value: j220 
stateAfter: - 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
j220 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - value: j220 stateAfter: - #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid j231 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
=== Inputs ===
x: j235 
y: j230 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j235 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
lastLocationAccess: - 
value: j231 
stateAfter: - 
=== Succesors ===
next: v222 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v605 lastLocationAccess: - value: j231 stateAfter: - #next: v222  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
v238 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + v7|QWORD * 1 - 8], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA [v7|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v209 v211 v222 v224 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v209 v211 v222 v224 #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid a96 <|@
result v11|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
op: Compress
stamp: n java.util.HashMap
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.this$0
location: HashMap$HashIterator.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
lastLocationAccess: - 
value: a96 
stateAfter: - 
=== Succesors ===
next: v308 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v592 lastLocationAccess: - value: a96 stateAfter: - #next: v308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j248 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j248 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a249 
=== Usages ===
v608 v609 
=== Predecessor ===
v308 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a249 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: a java.util.HashMap
=== Inputs ===
object: a2 
=== Succesors ===
next: j250 
=== Usages ===
j251 
=== Predecessor ===
j248 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2 #next: j250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j250 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j251 
=== Usages ===
j252 j265 
=== Predecessor ===
a249 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j251 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a249 
=== Succesors ===
next: v255 
=== Usages ===
j252 v256 
=== Predecessor ===
j250 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a249 #next: v255  <|@  <|@
f <@~|@floating>@ <|@
tid j252 <|@
result v12|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
=== Inputs ===
x: j250 
y: j251 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j250 y: j251  <|@  <|@
f <@~|@floating>@ <|@
tid j286 <|@
result long[-4194304|0xffffffffffc00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 v466 v561 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
x: j252 
y: j286 
=== Succesors ===
=== Usages ===
v255 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j252 y: j286  <|@  <|@
f <@~|@floating>@ <|@
tid i300 <|@
result byte[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 v477 v572 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i264 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j265 j445 j540 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j263 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
rawvalue: 140438306553856
stableDimension: 0
stamp: i64 [140438306553856]
stampKind: i64
value: long[140438306553856|0x7fba57600000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j288 v611 j467 v630 j562 v639 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v254 
falseSuccessor: v253 
=== Usages ===
=== Predecessor ===
j251 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v254 #falseSuccessor: v253  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v12|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v254 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j251 
y: j227 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j251 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v256 
=== Succesors ===
trueSuccessor: v261 
falseSuccessor: v257 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v256 #trueSuccessor: v261 #falseSuccessor: v257  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v261 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i293 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i293  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
result v14|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j250 
y: i264 
=== Succesors ===
=== Usages ===
j288 v611 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j250 y: i264  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
result [v14|QWORD[*] + v13|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j265 
index: j263 
=== Succesors ===
=== Usages ===
i293 i294 v295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j265 index: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i293 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
lastLocationAccess: - 
=== Succesors ===
next: v269 
=== Usages ===
v301 
=== Predecessor ===
v257 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v611 lastLocationAccess: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i293 
y: i300 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i293 y: i300  <|@  <|@
f <@*|@fixed>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v301 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v266 
=== Usages ===
=== Predecessor ===
i293 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v301 #trueSuccessor: v268 #falseSuccessor: v266  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v267 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v267  <|@  <|@
f <@*|@fixed>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v268 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v270 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v270  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i294 
=== Usages ===
=== Predecessor ===
v266 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i294 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
lastLocationAccess: - 
=== Succesors ===
next: v274 
=== Usages ===
v302 
=== Predecessor ===
v270 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v611 lastLocationAccess: - #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i294 
y: i239 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i294 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v302 
=== Succesors ===
trueSuccessor: v273 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
i294 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v302 #trueSuccessor: v273 #falseSuccessor: v271  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v273 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v273 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
lastLocationAccess: - 
value: i239 
stateAfter: - 
=== Succesors ===
next: j296 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v611 lastLocationAccess: - value: i239 stateAfter: - #next: j296  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: - 
=== Succesors ===
=== Usages ===
j296 v299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j296 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v608 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
v276 j292 v610 
=== Predecessor ===
v295 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v608 lastLocationAccess: - #next: v279  <|@  <|@
f <@~|@floating>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j296 
y: j227 
=== Succesors ===
=== Usages ===
v279 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j296 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid j288 <|@
result v16|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j265 
y: j263 
=== Succesors ===
=== Usages ===
v283 v298 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j265 y: j263  <|@  <|@
f <@*|@fixed>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v276 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v277 
=== Usages ===
=== Predecessor ===
j296 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v276 #trueSuccessor: v278 #falseSuccessor: v277  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v14|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = ADD (x: v14|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j288 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j288 #next: v284  <|@  <|@
f <@*|@fixed>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v283 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j297 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j297  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j248 
index: - 
=== Succesors ===
=== Usages ===
j297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j248 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j297 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
lastLocationAccess: - 
=== Succesors ===
next: v298 
=== Usages ===
v610 
=== Predecessor ===
v277 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v609 lastLocationAccess: - #next: v298  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
result [v17|QWORD + v15|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j297 
index: j296 
=== Succesors ===
=== Usages ===
v298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j297 index: j296  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v610 
lastLocationAccess: - 
value: j288 
stateAfter: - 
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
j297 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v610 lastLocationAccess: - value: j288 stateAfter: - #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: i64
=== Inputs ===
x: j296 
y: j230 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j296 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v608 
lastLocationAccess: - 
value: j292 
stateAfter: - 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v298 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v608 lastLocationAccess: - value: j292 stateAfter: - #next: v282  <|@  <|@
f <@*|@fixed>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v299 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v258 v260 v267 v272 v282 v284 
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v258 v260 v267 v272 v282 v284 #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.expectedModCount
location: HashMap$HashIterator.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1588) [bci: 14]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
lastLocationAccess: - 
value: i581 
stateAfter: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v259 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v594 lastLocationAccess: - value: i581 stateAfter: - #next: v348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: j309 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j309 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j310 
=== Usages ===
v612 v614 v615 
=== Predecessor ===
v348 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j310  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v116 v142 v155 j310 j390 j486 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j310 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v596 
=== Succesors ===
next: i335 
=== Usages ===
v613 
=== Predecessor ===
j309 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v596 #next: i335  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: - 
=== Succesors ===
=== Usages ===
i335 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i335 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v612 
lastLocationAccess: - 
=== Succesors ===
next: v314 
=== Usages ===
v342 
=== Predecessor ===
j310 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v612 lastLocationAccess: - #next: v314  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i335 
y: i239 
=== Succesors ===
=== Usages ===
v314 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i335 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v313 
falseSuccessor: v312 
=== Usages ===
=== Predecessor ===
i335 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v313 #falseSuccessor: v312  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v313 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a336 
=== Usages ===
=== Predecessor ===
v314 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a336  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
result [v19|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j310 
index: - 
=== Succesors ===
=== Usages ===
a336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j310 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a336 <|@
result v20|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
lastLocationAccess: - 
=== Succesors ===
next: v321 
=== Usages ===
a337 v343 
=== Predecessor ===
v312 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v613 lastLocationAccess: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a336 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a336  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v343 
=== Succesors ===
trueSuccessor: v320 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
a336 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v343 #trueSuccessor: v320 #falseSuccessor: v316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = MOV [v19|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD[_], y: v20|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v319  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v320 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: j338 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j338  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: - 
=== Succesors ===
=== Usages ===
j338 v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j338 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v614 
lastLocationAccess: - 
=== Succesors ===
next: v326 
=== Usages ===
v323 j334 v616 
=== Predecessor ===
v316 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v614 lastLocationAccess: - #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j338 
y: j227 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j338 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid a337 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a336 
=== Succesors ===
=== Usages ===
j328 v331 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a336  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v325 
falseSuccessor: v324 
=== Usages ===
=== Predecessor ===
j338 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v325 #falseSuccessor: v324  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|QWORD, y: v21|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v331  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a337 
=== Succesors ===
next: v332 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a337 #next: v332  <|@  <|@
f <@*|@fixed>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v331 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: j339 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j339  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j309 
index: - 
=== Succesors ===
=== Usages ===
j339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j309 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j339 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
lastLocationAccess: - 
=== Succesors ===
next: j328 
=== Usages ===
v616 
=== Predecessor ===
v324 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v615 lastLocationAccess: - #next: j328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j328 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a337 
=== Succesors ===
next: v340 
=== Usages ===
v340 
=== Predecessor ===
j339 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a337 #next: v340  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
result [v23|QWORD + v21|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j339 
index: j338 
=== Succesors ===
=== Usages ===
v340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j339 index: j338  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v616 
lastLocationAccess: - 
value: j328 
stateAfter: - 
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
j328 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v616 lastLocationAccess: - value: j328 stateAfter: - #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: i64
=== Inputs ===
x: j338 
y: j230 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j338 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v614 
lastLocationAccess: - 
value: j334 
stateAfter: - 
=== Succesors ===
next: v330 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v614 lastLocationAccess: - value: j334 stateAfter: - #next: v330  <|@  <|@
f <@*|@fixed>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD + v21|QWORD * 1 - 8], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v317 v319 v330 v332 
=== Succesors ===
next: v116 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v317 v319 v330 v332 #next: v116  <|@  <|@
f <@~|@floating>@ <|@
tid a158 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
rawvalue: null
stableDimension: 0
stamp: n java.lang.Object NULL
stampKind: n java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v116 v118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
value: a158 
stateAfter: - 
=== Succesors ===
next: v388 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - value: a158 stateAfter: - #next: v388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j349 
=== Usages ===
=== Predecessor ===
v116 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j349 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j350 
=== Usages ===
v617 v619 v620 
=== Predecessor ===
v388 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j350  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v118 j350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j350 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v597 
=== Succesors ===
next: i375 
=== Usages ===
v618 
=== Predecessor ===
j349 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v597 #next: i375  <|@  <|@
f <@~|@floating>@ <|@
tid v617 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
i375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v617 
lastLocationAccess: - 
=== Succesors ===
next: v354 
=== Usages ===
v382 
=== Predecessor ===
j350 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v617 lastLocationAccess: - #next: v354  <|@  <|@
f <@~|@floating>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i375 
y: i239 
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i375 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v382 
=== Succesors ===
trueSuccessor: v353 
falseSuccessor: v352 
=== Usages ===
=== Predecessor ===
i375 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v382 #trueSuccessor: v353 #falseSuccessor: v352  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v353 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a376 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a376  <|@  <|@
f <@~|@floating>@ <|@
tid v618 <|@
result [v25|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j350 
index: - 
=== Succesors ===
=== Usages ===
a376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j350 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a376 <|@
result v26|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v618 
lastLocationAccess: - 
=== Succesors ===
next: v361 
=== Usages ===
a377 v383 
=== Predecessor ===
v352 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v618 lastLocationAccess: - #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a376 
=== Succesors ===
=== Usages ===
v361 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a376  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v383 
=== Succesors ===
trueSuccessor: v360 
falseSuccessor: v356 
=== Usages ===
=== Predecessor ===
a376 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v383 #trueSuccessor: v360 #falseSuccessor: v356  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@*|@fixed>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v360 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j378 
=== Usages ===
=== Predecessor ===
v361 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j378  <|@  <|@
f <@~|@floating>@ <|@
tid v619 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
j378 v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j378 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
lastLocationAccess: - 
=== Succesors ===
next: v366 
=== Usages ===
v363 j374 v621 
=== Predecessor ===
v356 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v619 lastLocationAccess: - #next: v366  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j378 
y: j227 
=== Succesors ===
=== Usages ===
v366 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j378 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid a377 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a376 
=== Succesors ===
=== Usages ===
j368 v371 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a376  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v363 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v364 
=== Usages ===
=== Predecessor ===
j378 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v363 #trueSuccessor: v365 #falseSuccessor: v364  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v371 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a377 
=== Succesors ===
next: v372 
=== Usages ===
=== Predecessor ===
v365 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a377 #next: v372  <|@  <|@
f <@*|@fixed>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j379 
=== Usages ===
=== Predecessor ===
v366 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v620 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j349 
index: - 
=== Succesors ===
=== Usages ===
j379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j349 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v620 
lastLocationAccess: - 
=== Succesors ===
next: j368 
=== Usages ===
v621 
=== Predecessor ===
v364 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v620 lastLocationAccess: - #next: j368  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j368 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a377 
=== Succesors ===
next: v380 
=== Usages ===
v380 
=== Predecessor ===
j379 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a377 #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid v621 <|@
result [v29|QWORD + v27|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j379 
index: j378 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v621 
lastLocationAccess: - 
value: j368 
stateAfter: - 
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
j368 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v621 lastLocationAccess: - value: j368 stateAfter: - #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid j374 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: i64
=== Inputs ===
x: j378 
y: j230 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j378 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v619 
lastLocationAccess: - 
value: j374 
stateAfter: - 
=== Succesors ===
next: v370 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v619 lastLocationAccess: - value: j374 stateAfter: - #next: v370  <|@  <|@
f <@*|@fixed>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v357 v359 v370 v372 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v357 v359 v370 v372 #next: v118  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.current
location: HashMap$HashIterator.current
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1590) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v597 
lastLocationAccess: - 
value: a158 
stateAfter: - 
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v597 lastLocationAccess: - value: a158 stateAfter: - #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v121 v129 v143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1591) [bci: 33]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v121 v131 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1591) [bci: 34]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - value: i15 stateAfter: - #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 53]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a582 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a582  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 38]
profileData: PROFILED designatedSuccessorProbability: 0.0018282342214175859
stamp: void
=== Inputs ===
condition: v124 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v124 #trueSuccessor: v20 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v20 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 41]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@~|@floating>@ <|@
tid i23 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 45]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 i42 i84 v129 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 45]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i583 
y: i23 
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i583 y: i23  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 45]
profileData: PROFILED designatedSuccessorProbability: 2.3260934965518842E-5
stamp: void
=== Inputs ===
condition: v24 
=== Succesors ===
trueSuccessor: v29 
falseSuccessor: v25 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v24 #trueSuccessor: v29 #falseSuccessor: v25  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v29 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: i584 
=== Usages ===
=== Predecessor ===
v30 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i584  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
result [v3|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a582 
=== Succesors ===
=== Usages ===
i584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i584 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 53]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v600 
lastLocationAccess: - 
=== Succesors ===
next: v184 
=== Usages ===
v131 v145 
=== Predecessor ===
v25 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v600 lastLocationAccess: - #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i584 
y: i15 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i584 y: i15  <|@  <|@
f <@~|@floating>@ <|@
tid a112 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1589) [bci: 18]
op: Uncompress
stamp: a java.util.HashMap$Node[]
=== Inputs ===
value: a582 
=== Succesors ===
=== Usages ===
?33 v602 ?17 ?47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a582  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v131 
=== Succesors ===
trueSuccessor: v183 
falseSuccessor: v181 
=== Usages ===
=== Predecessor ===
i584 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v131 #trueSuccessor: v183 #falseSuccessor: v181  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v182  <|@  <|@
tid ?17 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: aload_2
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1591) [bci: 34]
sourceFile: HashMap.java
sourceLine: 1592
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a112 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a112  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 159
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@7f1c506c
stamp: void
=== Inputs ===
stateBefore: ?17 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v184 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 67]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
value: i23 
stateAfter: - 
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - value: i23 stateAfter: - #next: v428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j389 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j389 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j390 
=== Usages ===
v622 v624 v625 
=== Predecessor ===
v428 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j390 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v596 
=== Succesors ===
next: i415 
=== Usages ===
v623 
=== Predecessor ===
j389 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v596 #next: i415  <|@  <|@
f <@~|@floating>@ <|@
tid v622 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j389 
index: - 
=== Succesors ===
=== Usages ===
i415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j389 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i415 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v622 
lastLocationAccess: - 
=== Succesors ===
next: v394 
=== Usages ===
v422 
=== Predecessor ===
j390 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v622 lastLocationAccess: - #next: v394  <|@  <|@
f <@~|@floating>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i415 
y: i239 
=== Succesors ===
=== Usages ===
v394 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i415 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v422 
=== Succesors ===
trueSuccessor: v393 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
i415 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v422 #trueSuccessor: v393 #falseSuccessor: v392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v397 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v397  <|@  <|@
f <@*|@fixed>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v393 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a416 
=== Usages ===
=== Predecessor ===
v394 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a416  <|@  <|@
f <@~|@floating>@ <|@
tid v623 <|@
result [v33|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j390 
index: - 
=== Succesors ===
=== Usages ===
a416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j390 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a416 <|@
result v34|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v623 
lastLocationAccess: - 
=== Succesors ===
next: v401 
=== Usages ===
a417 v423 
=== Predecessor ===
v392 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v623 lastLocationAccess: - #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a416 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a416  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v423 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v396 
=== Usages ===
=== Predecessor ===
a416 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v423 #trueSuccessor: v400 #falseSuccessor: v396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j418 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j418  <|@  <|@
f <@~|@floating>@ <|@
tid v624 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j389 
index: - 
=== Succesors ===
=== Usages ===
j418 v421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j389 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j418 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
=== Succesors ===
next: v406 
=== Usages ===
v403 j414 v626 
=== Predecessor ===
v396 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - #next: v406  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j418 
y: j227 
=== Succesors ===
=== Usages ===
v406 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j418 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid a417 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a416 
=== Succesors ===
=== Usages ===
j408 v411 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a416  <|@  <|@
f <@*|@fixed>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v405 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
j418 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v405 #falseSuccessor: v404  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v411 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a417 
=== Succesors ===
next: v412 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a417 #next: v412  <|@  <|@
f <@*|@fixed>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j419 
=== Usages ===
=== Predecessor ===
v406 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j419  <|@  <|@
f <@~|@floating>@ <|@
tid v625 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j389 
index: - 
=== Succesors ===
=== Usages ===
j419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j389 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j419 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v625 
lastLocationAccess: - 
=== Succesors ===
next: j408 
=== Usages ===
v626 
=== Predecessor ===
v404 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v625 lastLocationAccess: - #next: j408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j408 <|@
result v36|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a417 
=== Succesors ===
next: v420 
=== Usages ===
v420 
=== Predecessor ===
j419 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a417 #next: v420  <|@  <|@
f <@~|@floating>@ <|@
tid v626 <|@
result [v37|QWORD + v35|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j419 
index: j418 
=== Succesors ===
=== Usages ===
v420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j419 index: j418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v626 
lastLocationAccess: - 
value: j408 
stateAfter: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
j408 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v626 lastLocationAccess: - value: j408 stateAfter: - #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid j414 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j418 
y: j230 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j418 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v624 
lastLocationAccess: - 
value: j414 
stateAfter: - 
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v624 lastLocationAccess: - value: j414 stateAfter: - #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
v421 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v397 v399 v410 v412 
=== Succesors ===
next: a585 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v397 v399 v410 v412 #next: a585  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
result [v3|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a582 
=== Succesors ===
=== Usages ===
a585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a585 <|@
result v39|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v601 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
v142 v161 a429 
=== Predecessor ===
v398 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v601 lastLocationAccess: - #next: v142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
value: a585 
stateAfter: - 
=== Succesors ===
next: v484 
=== Usages ===
=== Predecessor ===
a585 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - value: a585 stateAfter: - #next: v484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j430 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j430 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a431 
=== Usages ===
v627 v628 
=== Predecessor ===
v484 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a431  <|@  <|@
f <@~|@floating>@ <|@
tid a429 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a585 
=== Succesors ===
=== Usages ===
a431 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a431 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a429 
=== Succesors ===
next: j432 
=== Usages ===
j433 
=== Predecessor ===
j430 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a429 #next: j432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j432 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j433 
=== Usages ===
j434 j445 
=== Predecessor ===
a431 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j433 <|@
result v40|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a431 
=== Succesors ===
next: v437 
=== Usages ===
j434 v438 
=== Predecessor ===
j432 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a431 #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid j434 <|@
result v41|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j432 
y: j433 
=== Succesors ===
=== Usages ===
v466 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j432 y: j433  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
x: j434 
y: j286 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j434 y: j286  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v466 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
j433 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v466 #trueSuccessor: v436 #falseSuccessor: v435  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = XOR (x: v0|QWORD[.], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v41|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v440 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v440  <|@  <|@
f <@*|@fixed>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v436 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j433 
y: j227 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j433 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v438 
=== Succesors ===
trueSuccessor: v443 
falseSuccessor: v439 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v438 #trueSuccessor: v443 #falseSuccessor: v439  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|QWORD[.], y: v40|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v442  <|@  <|@
f <@*|@fixed>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i470 
=== Usages ===
=== Predecessor ===
v444 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i470  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
result v42|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j432 
y: i264 
=== Succesors ===
=== Usages ===
j467 v630 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j432 y: i264  <|@  <|@
f <@~|@floating>@ <|@
tid v630 <|@
result [v42|QWORD[*] + v13|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j445 
index: j263 
=== Succesors ===
=== Usages ===
i470 i471 v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j445 index: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i470 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
lastLocationAccess: - 
=== Succesors ===
next: v449 
=== Usages ===
v477 
=== Predecessor ===
v439 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v630 lastLocationAccess: - #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i470 
y: i300 
=== Succesors ===
=== Usages ===
v449 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i470 y: i300  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v477 
=== Succesors ===
trueSuccessor: v448 
falseSuccessor: v446 
=== Usages ===
=== Predecessor ===
i470 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v477 #trueSuccessor: v448 #falseSuccessor: v446  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v447 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v447  <|@  <|@
f <@*|@fixed>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v448 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
v449 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v450  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i471 
=== Usages ===
=== Predecessor ===
v446 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i471  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i471 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
lastLocationAccess: - 
=== Succesors ===
next: v454 
=== Usages ===
v478 
=== Predecessor ===
v450 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v630 lastLocationAccess: - #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i471 
y: i239 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i471 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v478 
=== Succesors ===
trueSuccessor: v453 
falseSuccessor: v451 
=== Usages ===
=== Predecessor ===
i471 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v478 #trueSuccessor: v453 #falseSuccessor: v451  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v452 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v452  <|@  <|@
f <@*|@fixed>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v630 
lastLocationAccess: - 
value: i239 
stateAfter: - 
=== Succesors ===
next: j473 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v630 lastLocationAccess: - value: i239 stateAfter: - #next: j473  <|@  <|@
f <@~|@floating>@ <|@
tid v627 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j430 
index: - 
=== Succesors ===
=== Usages ===
j473 v476 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j473 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
lastLocationAccess: - 
=== Succesors ===
next: v459 
=== Usages ===
v456 j469 v629 
=== Predecessor ===
v472 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v627 lastLocationAccess: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j473 
y: j227 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j473 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid j467 <|@
result v44|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j445 
y: j263 
=== Succesors ===
=== Usages ===
v463 v475 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j445 y: j263  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v456 
=== Succesors ===
trueSuccessor: v458 
falseSuccessor: v457 
=== Usages ===
=== Predecessor ===
j473 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v456 #trueSuccessor: v458 #falseSuccessor: v457  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v42|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = ADD (x: v42|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v458 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v463 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j467 
=== Succesors ===
next: v464 
=== Usages ===
=== Predecessor ===
v458 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j467 #next: v464  <|@  <|@
f <@*|@fixed>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v463 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j474 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j474  <|@  <|@
f <@~|@floating>@ <|@
tid v628 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j430 
index: - 
=== Succesors ===
=== Usages ===
j474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j430 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j474 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v628 
lastLocationAccess: - 
=== Succesors ===
next: v475 
=== Usages ===
v629 
=== Predecessor ===
v457 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v628 lastLocationAccess: - #next: v475  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
result [v45|QWORD + v43|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j474 
index: j473 
=== Succesors ===
=== Usages ===
v475 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j474 index: j473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v629 
lastLocationAccess: - 
value: j467 
stateAfter: - 
=== Succesors ===
next: v476 
=== Usages ===
=== Predecessor ===
j474 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v629 lastLocationAccess: - value: j467 stateAfter: - #next: v476  <|@  <|@
f <@~|@floating>@ <|@
tid j469 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j473 
y: j230 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j473 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v627 
lastLocationAccess: - 
value: j469 
stateAfter: - 
=== Succesors ===
next: v462 
=== Usages ===
=== Predecessor ===
v475 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v627 lastLocationAccess: - value: j469 stateAfter: - #next: v462  <|@  <|@
f <@*|@fixed>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v441 
=== Predecessor ===
v476 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v440 v442 v447 v452 v462 v464 
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v440 v442 v447 v452 v462 v464 #next: v73  <|@  <|@
f <@~|@floating>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a585 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a585  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
profileData: PROFILED designatedSuccessorProbability: 0.7703136090873518
stamp: void
=== Inputs ===
condition: v161 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v70 
=== Usages ===
=== Predecessor ===
v441 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v161 #trueSuccessor: v72 #falseSuccessor: v70  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD[_], y: v39|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v32 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i84 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v32 
values: i23 i42 
=== Succesors ===
=== Usages ===
v145 i42 v602 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v32 values: i23 i42  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: true
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v31 
=== Succesors ===
next: v188 
=== Usages ===
v50 v52 i84 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v31 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i84 
y: i584 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i84 y: i584  <|@  <|@
f <@*|@fixed>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v145 
=== Succesors ===
trueSuccessor: v185 
falseSuccessor: v187 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v145 #trueSuccessor: v185 #falseSuccessor: v187  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid i42 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 66]
stamp: i32
=== Inputs ===
x: i84 
y: i23 
=== Succesors ===
=== Usages ===
v143 i84 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i84 y: i23  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.index
location: HashMap$HashIterator.index
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 67]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
value: i42 
stateAfter: - 
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - value: i42 stateAfter: - #next: v524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j485 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j485 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j486 
=== Usages ===
v631 v633 v634 
=== Predecessor ===
v524 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j486 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v596 
=== Succesors ===
next: i511 
=== Usages ===
v632 
=== Predecessor ===
j485 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v596 #next: i511  <|@  <|@
f <@~|@floating>@ <|@
tid v631 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j485 
index: - 
=== Succesors ===
=== Usages ===
i511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i511 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v631 
lastLocationAccess: - 
=== Succesors ===
next: v490 
=== Usages ===
v518 
=== Predecessor ===
j486 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v631 lastLocationAccess: - #next: v490  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i511 
y: i239 
=== Succesors ===
=== Usages ===
v490 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i511 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v489 
falseSuccessor: v488 
=== Usages ===
=== Predecessor ===
i511 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v489 #falseSuccessor: v488  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v493 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v493  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v489 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: a512 
=== Usages ===
=== Predecessor ===
v490 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a512  <|@  <|@
f <@~|@floating>@ <|@
tid v632 <|@
result [v49|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j486 
index: - 
=== Succesors ===
=== Usages ===
a512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j486 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a512 <|@
result v50|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v632 
lastLocationAccess: - 
=== Succesors ===
next: v497 
=== Usages ===
a513 v519 
=== Predecessor ===
v488 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v632 lastLocationAccess: - #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a512 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a512  <|@  <|@
f <@*|@fixed>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v492 
=== Usages ===
=== Predecessor ===
a512 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v496 #falseSuccessor: v492  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v495 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v495  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v496 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j514 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j514  <|@  <|@
f <@~|@floating>@ <|@
tid v633 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j485 
index: - 
=== Succesors ===
=== Usages ===
j514 v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j514 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v633 
lastLocationAccess: - 
=== Succesors ===
next: v502 
=== Usages ===
v499 j510 v635 
=== Predecessor ===
v492 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v633 lastLocationAccess: - #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j514 
y: j227 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j514 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid a513 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a512 
=== Succesors ===
=== Usages ===
j504 v507 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a512  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v499 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v500 
=== Usages ===
=== Predecessor ===
j514 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v499 #trueSuccessor: v501 #falseSuccessor: v500  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a513 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a513 #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j515 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j515  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j485 
index: - 
=== Succesors ===
=== Usages ===
j515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j485 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j515 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v634 
lastLocationAccess: - 
=== Succesors ===
next: j504 
=== Usages ===
v635 
=== Predecessor ===
v500 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v634 lastLocationAccess: - #next: j504  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j504 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a513 
=== Succesors ===
next: v516 
=== Usages ===
v516 
=== Predecessor ===
j515 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a513 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
result [v53|QWORD + v51|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j515 
index: j514 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j515 index: j514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v635 
lastLocationAccess: - 
value: j504 
stateAfter: - 
=== Succesors ===
next: v517 
=== Usages ===
=== Predecessor ===
j504 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v635 lastLocationAccess: - value: j504 stateAfter: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid j510 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j514 
y: j230 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j514 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v633 
lastLocationAccess: - 
value: j510 
stateAfter: - 
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v633 lastLocationAccess: - value: j510 stateAfter: - #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v494 
=== Predecessor ===
v517 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v493 v495 v506 v508 
=== Succesors ===
next: a586 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v493 v495 v506 v508 #next: a586  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
result [v32|QWORD[.] + v47|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a112 
index: i84 
=== Succesors ===
=== Usages ===
a586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a112 index: i84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a586 <|@
result v55|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.HashMap$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: n java.util.HashMap$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v602 
lastLocationAccess: - 
=== Succesors ===
next: v155 
=== Usages ===
a153 v163 v155 
=== Predecessor ===
v494 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v602 lastLocationAccess: - #next: v155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: HashMap$HashIterator.next
location: HashMap$HashIterator.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
value: a586 
stateAfter: - 
=== Succesors ===
next: v579 
=== Usages ===
=== Predecessor ===
a586 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - value: a586 stateAfter: - #next: v579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j525 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j525  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j525 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a526 
=== Usages ===
v636 v637 
=== Predecessor ===
v579 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a526  <|@  <|@
f <@~|@floating>@ <|@
tid a153 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
op: Uncompress
stamp: a java.util.HashMap$Node
=== Inputs ===
value: a586 
=== Succesors ===
=== Usages ===
?47 a526 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a586  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a526 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: a java.util.HashMap$Node
=== Inputs ===
object: a153 
=== Succesors ===
next: j527 
=== Usages ===
j528 
=== Predecessor ===
j525 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a153 #next: j527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j527 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1 
=== Succesors ===
next: j528 
=== Usages ===
j529 j540 
=== Predecessor ===
a526 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1 #next: j528  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j528 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a526 
=== Succesors ===
next: v532 
=== Usages ===
j529 v533 
=== Predecessor ===
j527 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a526 #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid j529 <|@
result v57|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j527 
y: j528 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j527 y: j528  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
x: j529 
y: j286 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j529 y: j286  <|@  <|@
f <@*|@fixed>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v561 
=== Succesors ===
trueSuccessor: v531 
falseSuccessor: v530 
=== Usages ===
=== Predecessor ===
j528 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v561 #trueSuccessor: v531 #falseSuccessor: v530  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV [v32|QWORD[.] + v47|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = XOR (x: v0|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v57|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v539 
=== Usages ===
=== Predecessor ===
v532 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v539  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j528 
y: j227 
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j528 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v533 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v534 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v533 #trueSuccessor: v538 #falseSuccessor: v534  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v537  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v538 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i565 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i565  <|@  <|@
f <@~|@floating>@ <|@
tid j540 <|@
result v58|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j527 
y: i264 
=== Succesors ===
=== Usages ===
j562 v639 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j527 y: i264  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
result [v58|QWORD[*] + v13|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j540 
index: j263 
=== Succesors ===
=== Usages ===
i565 i566 v567 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j540 index: j263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i565 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
=== Succesors ===
next: v544 
=== Usages ===
v572 
=== Predecessor ===
v534 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - #next: v544  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i565 
y: i300 
=== Succesors ===
=== Usages ===
v544 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i565 y: i300  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v572 
=== Succesors ===
trueSuccessor: v543 
falseSuccessor: v541 
=== Usages ===
=== Predecessor ===
i565 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v572 #trueSuccessor: v543 #falseSuccessor: v541  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v542 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v542  <|@  <|@
f <@*|@fixed>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v543 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v545 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v545  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: i566 
=== Usages ===
=== Predecessor ===
v541 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i566  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i566 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
=== Succesors ===
next: v549 
=== Usages ===
v573 
=== Predecessor ===
v545 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - #next: v549  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i566 
y: i239 
=== Succesors ===
=== Usages ===
v549 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i566 y: i239  <|@  <|@
f <@*|@fixed>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v573 
=== Succesors ===
trueSuccessor: v548 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
i566 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v573 #trueSuccessor: v548 #falseSuccessor: v546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v547 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v547  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v548 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
value: i239 
stateAfter: - 
=== Succesors ===
next: j568 
=== Usages ===
=== Predecessor ===
v546 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - value: i239 stateAfter: - #next: j568  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j525 
index: - 
=== Succesors ===
=== Usages ===
j568 v571 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j525 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j568 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v636 
lastLocationAccess: - 
=== Succesors ===
next: v554 
=== Usages ===
v551 j564 v638 
=== Predecessor ===
v567 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v636 lastLocationAccess: - #next: v554  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j568 
y: j227 
=== Succesors ===
=== Usages ===
v554 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j568 y: j227  <|@  <|@
f <@~|@floating>@ <|@
tid j562 <|@
result v60|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j540 
y: j263 
=== Succesors ===
=== Usages ===
v558 v570 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j540 y: j263  <|@  <|@
f <@*|@fixed>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v551 
=== Succesors ===
trueSuccessor: v553 
falseSuccessor: v552 
=== Usages ===
=== Predecessor ===
j568 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v551 #trueSuccessor: v553 #falseSuccessor: v552  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = ADD (x: v58|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v558  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j562 
=== Succesors ===
next: v559 
=== Usages ===
=== Predecessor ===
v553 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j562 #next: v559  <|@  <|@
f <@*|@fixed>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v558 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
next: j569 
=== Usages ===
=== Predecessor ===
v554 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j569  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j525 
index: - 
=== Succesors ===
=== Usages ===
j569 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j525 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j569 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v637 
lastLocationAccess: - 
=== Succesors ===
next: v570 
=== Usages ===
v638 
=== Predecessor ===
v552 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v637 lastLocationAccess: - #next: v570  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
result [v61|QWORD + v59|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j569 
index: j568 
=== Succesors ===
=== Usages ===
v570 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j569 index: j568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
lastLocationAccess: - 
value: j562 
stateAfter: - 
=== Succesors ===
next: v571 
=== Usages ===
=== Predecessor ===
j569 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v638 lastLocationAccess: - value: j562 stateAfter: - #next: v571  <|@  <|@
f <@~|@floating>@ <|@
tid j564 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: i64
=== Inputs ===
x: j568 
y: j230 
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j568 y: j230  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v636 
lastLocationAccess: - 
value: j564 
stateAfter: - 
=== Succesors ===
next: v557 
=== Usages ===
=== Predecessor ===
v570 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v636 lastLocationAccess: - value: j564 stateAfter: - #next: v557  <|@  <|@
f <@*|@fixed>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
v571 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v535 v537 v542 v547 v557 v559 
=== Succesors ===
next: v54 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v535 v537 v542 v547 v557 v559 #next: v54  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a586 
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a586  <|@  <|@
f <@*|@fixed>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
profileData: INJECTED designatedSuccessorProbability: 0.7018274269037323
stamp: void
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v53 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|DWORD[_], y: v55|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
tid ?47 <|@
d <@d|@=== Debug Properties ===
bci: 75
bytecode: ifnull
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 72]
sourceFile: HashMap.java
sourceLine: 1593
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a153 a1 - a112 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a153 a1 - a112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
stateBefore: ?47 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Safepoint|@jdk.graal.compiler.nodes.SafepointNode>@ stateBefore: ?47 #next: v52  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
stamp: void
=== Inputs ===
loopBegin: v32 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v56|QWORD[.] 
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction SAFEPOINT v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v32 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v32 #next: v49  <|@  <|@
f <@*|@fixed>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v50 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
stamp: void
=== Inputs ===
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v186  <|@  <|@
tid ?33 <|@
d <@d|@=== Debug Properties ===
bci: 48
bytecode: aload_0
code: ResolvedJavaMethodBytecode<HashMap$HashIterator.<init>(HashMap)>
localsSize: 3
locksSize: 0
sourceFile: HashMap.java
sourceLine: 1593
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - a112 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - a112  <|@  <|@
f <@*|@fixed>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 146
mayConvertToGuard: true
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 70]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@7f1c506c
stamp: void
=== Inputs ===
stateBefore: ?33 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v187 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?33  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v70 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v26 v28 v49 v81 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v26 v28 v49 v81 #next: v157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: ANY_LOCATION
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.HashMap$HashIterator.<init>(HashMap.java:1595) [bci: 78]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v157 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|QWORD, y: v7|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + v7|QWORD * 1 - 8], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA [v7|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v12|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v14|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = ADD (x: v14|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = MOV [v19|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD[_], y: v20|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|QWORD, y: v21|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD + v21|QWORD * 1 - 8], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = XOR (x: v0|QWORD[.], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v41|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|QWORD[.], y: v40|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v42|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = ADD (x: v42|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD[_], y: v39|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV [v32|QWORD[.] + v47|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = XOR (x: v0|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v57|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = ADD (x: v58|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|DWORD[_], y: v55|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v56|QWORD[.] 
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction SAFEPOINT v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|QWORD, y: v7|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + v7|QWORD * 1 - 8], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA [v7|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v12|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v14|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = ADD (x: v14|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = MOV [v19|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD[_], y: v20|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|QWORD, y: v21|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD + v21|QWORD * 1 - 8], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = XOR (x: v0|QWORD[.], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v41|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|QWORD[.], y: v40|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v42|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = ADD (x: v42|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD[_], y: v39|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV [v32|QWORD[.] + v47|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = XOR (x: v0|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v57|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = ADD (x: v58|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|DWORD[_], y: v55|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v56|QWORD[.] 
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction SAFEPOINT v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|QWORD, y: v7|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + v7|QWORD * 1 - 8], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA [v7|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v12|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v14|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = ADD (x: v14|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = MOV [v19|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD[_], y: v20|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|QWORD, y: v21|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD + v21|QWORD * 1 - 8], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = XOR (x: v0|QWORD[.], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v41|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|QWORD[.], y: v40|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v42|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = ADD (x: v42|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD[_], y: v39|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV [v32|QWORD[.] + v47|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = XOR (x: v0|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v57|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = ADD (x: v58|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|DWORD[_], y: v55|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v56|QWORD[.] 
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction SAFEPOINT v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v7|QWORD, y: v7|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v9|QWORD + v7|QWORD * 1 - 8], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = LEA [v7|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v10|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v12|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v14|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[*] = ADD (x: v14|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v18|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v16|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD[_] = MOV [v19|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v20|DWORD[_], y: v20|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v21|QWORD, y: v21|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD + v21|QWORD * 1 - 8], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v39|DWORD[_] = MOV [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[*] = XOR (x: v0|QWORD[.], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v41|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v40|QWORD[.], y: v40|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v42|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[*] = ADD (x: v42|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v39|DWORD[_], y: v39|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD[_] = MOV [v32|QWORD[.] + v47|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = XOR (x: v0|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v57|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[*] = ADD (x: v58|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v55|DWORD[_], y: v55|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v56|QWORD[.] 
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction SAFEPOINT v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v5|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction v7|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: v7|QWORD, y: v7|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction v9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [v9|QWORD + v7|QWORD * 1 - 8], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction v10|QWORD = LEA [v7|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: v10|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v11|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction v12|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction v13|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH v12|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction v14|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [v14|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction v15|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction v16|QWORD[*] = ADD (x: v14|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v17|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: v18|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE v16|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v19|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction v20|DWORD[_] = MOV [v19|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: v20|DWORD[_], y: v20|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction v21|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v21|QWORD, y: v21|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v23|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [v23|QWORD + v21|QWORD * 1 - 8], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction v24|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: v24|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction v25|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction v31|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction v39|DWORD[_] = MOV [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction v41|QWORD[*] = XOR (x: v0|QWORD[.], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH v41|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v40|QWORD[.], y: v40|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v42|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [v42|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction v43|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction v44|QWORD[*] = ADD (x: v42|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction v45|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: v46|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: v39|DWORD[_], y: v39|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [v47|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v48|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction v49|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction v55|DWORD[_] = MOV [v32|QWORD[.] + v47|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction v57|QWORD[*] = XOR (x: v0|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH v57|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction v58|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [v58|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction v59|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction v60|QWORD[*] = ADD (x: v58|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction v61|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: v62|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v55|DWORD[_], y: v55|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v56|QWORD[.] 
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction SAFEPOINT v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr  530  <|@ instruction JUMP ~[v48|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v5|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction v7|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: v7|QWORD, y: v7|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction v9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [v9|QWORD + v7|QWORD * 1 - 8], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction v10|QWORD = LEA [v7|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: v10|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v11|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction v12|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction v13|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH v12|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction v14|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [v14|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction v15|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction v16|QWORD[*] = ADD (x: v14|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v17|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: v18|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE v16|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v19|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction v20|DWORD[_] = MOV [v19|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: v20|DWORD[_], y: v20|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction v21|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v21|QWORD, y: v21|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v23|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [v23|QWORD + v21|QWORD * 1 - 8], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction v24|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: v24|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction v25|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction v31|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction v39|DWORD[_] = MOV [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction v41|QWORD[*] = XOR (x: v0|QWORD[.], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH v41|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v40|QWORD[.], y: v40|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v42|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [v42|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction v43|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction v44|QWORD[*] = ADD (x: v42|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction v45|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: v46|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: v39|DWORD[_], y: v39|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [v47|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v48|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction v49|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction v55|DWORD[_] = MOV [v32|QWORD[.] + v47|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction v57|QWORD[*] = XOR (x: v0|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH v57|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction v58|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [v58|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction v59|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction v60|QWORD[*] = ADD (x: v58|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction v61|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: v62|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v55|DWORD[_], y: v55|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v56|QWORD[.] 
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction SAFEPOINT v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr  530  <|@ instruction JUMP ~[v48|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v8|q [0, 6[[56, 58[[130, 132[[180, 182[[230, 232[[300, 302[[378, 380[[442, 444[[516, 518[ "NoOptimization"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 372[[376, 532[[548, 555[[556, 563[6 MustHaveRegister 24 MustHaveRegister 66 MustHaveRegister 68 ShouldHaveRegister 80 MustHaveRegister 138 MustHaveRegister 148 MustHaveRegister 188 MustHaveRegister 198 MustHaveRegister 238 MustHaveRegister 240 MustHaveRegister 258 MustHaveRegister 268 MustHaveRegister 310 MustHaveRegister 314 ShouldHaveRegister 324 MustHaveRegister 400 MustHaveRegister 410 MustHaveRegister 452 MustHaveRegister 456 ShouldHaveRegister 466 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|q [8, 256[[548, 555[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 64 MustHaveRegister 68 ShouldHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [10, 138[10 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [12, 308[12 MustHaveRegister 242 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [14, 246[14 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [26, 34[26 MustHaveRegister 28 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [32, 44[32 MustHaveRegister 36 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v6|d [34, 42[[54, 56[34 MustHaveRegister 42 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v1|q [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v0|q [68, 72[68 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [70, 372[[376, 532[70 MustHaveRegister 82 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 112 ShouldHaveRegister 326 MustHaveRegister 344 MustHaveRegister 352 MustHaveRegister 356 ShouldHaveRegister 468 MustHaveRegister 486 MustHaveRegister 494 MustHaveRegister 498 ShouldHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v0|q [80, 84[[96, 102[[106, 112[80 MustHaveRegister 82 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [110, 122[110 MustHaveRegister 114 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v14|q [112, 120[[128, 130[112 MustHaveRegister 120 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [118, 120[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [150, 158[150 MustHaveRegister 152 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [156, 168[156 MustHaveRegister 160 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v20|d [158, 166[[178, 180[158 MustHaveRegister 166 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [200, 208[200 MustHaveRegister 202 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [206, 218[206 MustHaveRegister 210 MustHaveRegister 216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v26|d [208, 216[[228, 230[208 MustHaveRegister 216 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [214, 216[214 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q -1 [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d -1 [250, 372[[376, 532[250 MustHaveRegister 254 MustHaveRegister 394 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v3|d [252, 372[[376, 532[[548, 555[[556, 563[252 MustHaveRegister 450 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [270, 278[270 MustHaveRegister 272 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q -1 [276, 288[276 MustHaveRegister 280 MustHaveRegister 286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v34|d [278, 286[[298, 300[278 MustHaveRegister 286 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [284, 286[284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [288, 290[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [308, 372[[376, 386[308 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v39|d [312, 320[312 MustHaveRegister 314 ShouldHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v0|q [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q v0|q [324, 328[[340, 346[[350, 356[324 MustHaveRegister 326 MustHaveRegister 344 MustHaveRegister 352 MustHaveRegister 356 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q -1 [354, 366[354 MustHaveRegister 358 MustHaveRegister 364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v42|q [356, 364[[376, 378[356 MustHaveRegister 364 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [362, 364[362 MustHaveRegister 364 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d v48|d [392, 450[394 ShouldHaveRegister 398 ShouldHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d v47|d [398, 531[398 MustHaveRegister 400 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d -1 [412, 420[412 MustHaveRegister 414 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q -1 [418, 430[418 MustHaveRegister 422 MustHaveRegister 428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v50|d [420, 428[[440, 442[420 MustHaveRegister 428 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q -1 [426, 428[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q -1 [430, 432[430 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d -1 [450, 524[450 MustHaveRegister 452 MustHaveRegister 454 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v55|d [454, 529[454 MustHaveRegister 456 ShouldHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v0|q [456, 458[456 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v0|q [466, 470[[482, 488[[492, 498[466 MustHaveRegister 468 MustHaveRegister 486 MustHaveRegister 494 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [496, 508[496 MustHaveRegister 500 MustHaveRegister 506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v58|q [498, 506[[514, 516[498 MustHaveRegister 506 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q -1 [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q -1 [508, 510[508 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q -1 [528, 529[528 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_intervals
  name "After register allocation"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v8|q [0, 6[[56, 58[[130, 132[[180, 182[[230, 232[[300, 302[[378, 380[[442, 444[[516, 518[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 372[[376, 532[[548, 555[[556, 563[6 MustHaveRegister 24 MustHaveRegister 66 MustHaveRegister 68 ShouldHaveRegister 80 MustHaveRegister 138 MustHaveRegister 148 MustHaveRegister 188 MustHaveRegister 198 MustHaveRegister 238 MustHaveRegister 240 MustHaveRegister 258 MustHaveRegister 268 MustHaveRegister 310 MustHaveRegister 314 ShouldHaveRegister 324 MustHaveRegister 400 MustHaveRegister 410 MustHaveRegister 452 MustHaveRegister 456 ShouldHaveRegister 466 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [8, 256[[548, 555[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 64 MustHaveRegister 68 ShouldHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [10, 138[10 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [12, 308[12 MustHaveRegister 242 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [14, 246[14 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rsi|q]" v5|q -1 [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d -1 [26, 34[26 MustHaveRegister 28 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q -1 [32, 44[32 MustHaveRegister 36 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q v6|d [34, 42[[54, 56[34 MustHaveRegister 42 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rbx|q]" v9|q -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rsi|d]" v11|d v1|q [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q v0|q [68, 72[68 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q -1 [70, 372[[376, 532[70 MustHaveRegister 82 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 112 ShouldHaveRegister 326 MustHaveRegister 344 MustHaveRegister 352 MustHaveRegister 356 ShouldHaveRegister 468 MustHaveRegister 486 MustHaveRegister 494 MustHaveRegister 498 ShouldHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q v0|q [80, 84[[96, 102[[106, 112[80 MustHaveRegister 82 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbx|q]" v15|q -1 [110, 122[110 MustHaveRegister 114 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v14|q [112, 120[[128, 130[112 MustHaveRegister 120 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdi|q]" v17|q -1 [118, 120[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d -1 [150, 158[150 MustHaveRegister 152 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r11|q]" v21|q -1 [156, 168[156 MustHaveRegister 160 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q v20|d [158, 166[[178, 180[158 MustHaveRegister 166 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbx|q]" v23|q -1 [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rsi|d]" v26|d -1 [200, 208[200 MustHaveRegister 202 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[r11|q]" v27|q -1 [206, 218[206 MustHaveRegister 210 MustHaveRegister 216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v26|d [208, 216[[228, 230[208 MustHaveRegister 216 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q -1 [214, 216[214 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q -1 [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d -1 [250, 372[[376, 532[250 MustHaveRegister 254 MustHaveRegister 394 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v32|q QWORD "[r9|q]" v32|q v3|d [252, 372[[376, 532[[548, 555[[556, 563[252 MustHaveRegister 450 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [270, 278[270 MustHaveRegister 272 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rbx|q]" v35|q -1 [276, 288[276 MustHaveRegister 280 MustHaveRegister 286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v34|d [278, 286[[298, 300[278 MustHaveRegister 286 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q -1 [284, 286[284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q -1 [288, 290[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r8|d]" v39|d -1 [308, 372[[376, 386[308 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v39|d [312, 320[312 MustHaveRegister 314 ShouldHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rbx|q]" v41|q v0|q [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q v0|q [324, 328[[340, 346[[350, 356[324 MustHaveRegister 326 MustHaveRegister 344 MustHaveRegister 352 MustHaveRegister 356 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rbx|q]" v43|q -1 [354, 366[354 MustHaveRegister 358 MustHaveRegister 364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q v42|q [356, 364[[376, 378[356 MustHaveRegister 364 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q -1 [362, 364[362 MustHaveRegister 364 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r8|d]" v47|d v48|d [392, 450[394 ShouldHaveRegister 398 ShouldHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rbx|d]" v48|d v47|d [398, 531[398 MustHaveRegister 400 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rsi|d]" v50|d -1 [412, 420[412 MustHaveRegister 414 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rdi|q]" v51|q -1 [418, 430[418 MustHaveRegister 422 MustHaveRegister 428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q v50|d [420, 428[[440, 442[420 MustHaveRegister 428 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdx|q]" v53|q -1 [426, 428[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q -1 [430, 432[430 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[r8|d]" v55|d -1 [450, 524[450 MustHaveRegister 452 MustHaveRegister 454 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q v55|d [454, 529[454 MustHaveRegister 456 ShouldHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rsi|q]" v57|q v0|q [456, 458[456 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v0|q [466, 470[[482, 488[[492, 498[466 MustHaveRegister 468 MustHaveRegister 486 MustHaveRegister 494 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdx|q]" v59|q -1 [496, 508[496 MustHaveRegister 500 MustHaveRegister 506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v58|q [498, 506[[514, 516[498 MustHaveRegister 506 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rax|q]" v61|q -1 [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [508, 510[508 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r8|q]" v63|q -1 [528, 529[528 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v5|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction v7|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: v7|QWORD, y: v7|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction v9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [v9|QWORD + v7|QWORD * 1 - 8], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction v10|QWORD = LEA [v7|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: v10|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v11|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction v12|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction v13|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH v12|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction v14|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [v14|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction v15|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction v16|QWORD[*] = ADD (x: v14|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v17|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: v18|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE v16|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v19|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction v20|DWORD[_] = MOV [v19|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: v20|DWORD[_], y: v20|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction v21|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v21|QWORD, y: v21|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v23|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [v23|QWORD + v21|QWORD * 1 - 8], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction v24|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: v24|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction v25|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction v31|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction v39|DWORD[_] = MOV [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction v41|QWORD[*] = XOR (x: v0|QWORD[.], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH v41|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v40|QWORD[.], y: v40|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v42|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [v42|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction v43|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction v44|QWORD[*] = ADD (x: v42|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction v45|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: v46|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: v39|DWORD[_], y: v39|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [v47|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v48|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction v49|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction v55|DWORD[_] = MOV [v32|QWORD[.] + v47|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction v57|QWORD[*] = XOR (x: v0|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH v57|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction v58|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [v58|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction v59|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction v60|QWORD[*] = ADD (x: v58|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction v61|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: v62|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v55|DWORD[_], y: v55|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v56|QWORD[.] 
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction SAFEPOINT v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr  530  <|@ instruction JUMP ~[v48|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v8|q [0, 6[[56, 58[[130, 132[[180, 182[[230, 232[[300, 302[[378, 380[[442, 444[[516, 518[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 372[[376, 532[[548, 555[[556, 563[6 MustHaveRegister 24 MustHaveRegister 66 MustHaveRegister 68 ShouldHaveRegister 80 MustHaveRegister 138 MustHaveRegister 148 MustHaveRegister 188 MustHaveRegister 198 MustHaveRegister 238 MustHaveRegister 240 MustHaveRegister 258 MustHaveRegister 268 MustHaveRegister 310 MustHaveRegister 314 ShouldHaveRegister 324 MustHaveRegister 400 MustHaveRegister 410 MustHaveRegister 452 MustHaveRegister 456 ShouldHaveRegister 466 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [8, 256[[548, 555[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 64 MustHaveRegister 68 ShouldHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [10, 138[10 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [12, 308[12 MustHaveRegister 242 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [14, 246[14 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rsi|q]" v5|q -1 [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d -1 [26, 34[26 MustHaveRegister 28 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q -1 [32, 44[32 MustHaveRegister 36 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q v6|d [34, 42[[54, 56[34 MustHaveRegister 42 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rbx|q]" v9|q -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rsi|d]" v11|d v1|q [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q v0|q [68, 72[68 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q -1 [70, 372[[376, 532[70 MustHaveRegister 82 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 112 ShouldHaveRegister 326 MustHaveRegister 344 MustHaveRegister 352 MustHaveRegister 356 ShouldHaveRegister 468 MustHaveRegister 486 MustHaveRegister 494 MustHaveRegister 498 ShouldHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q v0|q [80, 84[[96, 102[[106, 112[80 MustHaveRegister 82 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbx|q]" v15|q -1 [110, 122[110 MustHaveRegister 114 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v14|q [112, 120[[128, 130[112 MustHaveRegister 120 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdi|q]" v17|q -1 [118, 120[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d -1 [150, 158[150 MustHaveRegister 152 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r11|q]" v21|q -1 [156, 168[156 MustHaveRegister 160 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q v20|d [158, 166[[178, 180[158 MustHaveRegister 166 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbx|q]" v23|q -1 [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rsi|d]" v26|d -1 [200, 208[200 MustHaveRegister 202 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[r11|q]" v27|q -1 [206, 218[206 MustHaveRegister 210 MustHaveRegister 216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v26|d [208, 216[[228, 230[208 MustHaveRegister 216 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q -1 [214, 216[214 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q -1 [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d -1 [250, 372[[376, 532[250 MustHaveRegister 254 MustHaveRegister 394 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v32|q QWORD "[r9|q]" v32|q v3|d [252, 372[[376, 532[[548, 555[[556, 563[252 MustHaveRegister 450 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [270, 278[270 MustHaveRegister 272 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rbx|q]" v35|q -1 [276, 288[276 MustHaveRegister 280 MustHaveRegister 286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v34|d [278, 286[[298, 300[278 MustHaveRegister 286 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q -1 [284, 286[284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q -1 [288, 290[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r8|d]" v39|d -1 [308, 372[[376, 386[308 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v39|d [312, 320[312 MustHaveRegister 314 ShouldHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rbx|q]" v41|q v0|q [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q v0|q [324, 328[[340, 346[[350, 356[324 MustHaveRegister 326 MustHaveRegister 344 MustHaveRegister 352 MustHaveRegister 356 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rbx|q]" v43|q -1 [354, 366[354 MustHaveRegister 358 MustHaveRegister 364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q v42|q [356, 364[[376, 378[356 MustHaveRegister 364 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q -1 [362, 364[362 MustHaveRegister 364 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r8|d]" v47|d v48|d [392, 450[394 ShouldHaveRegister 398 ShouldHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rbx|d]" v48|d v47|d [398, 531[398 MustHaveRegister 400 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rsi|d]" v50|d -1 [412, 420[412 MustHaveRegister 414 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rdi|q]" v51|q -1 [418, 430[418 MustHaveRegister 422 MustHaveRegister 428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q v50|d [420, 428[[440, 442[420 MustHaveRegister 428 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdx|q]" v53|q -1 [426, 428[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q -1 [430, 432[430 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[r8|d]" v55|d -1 [450, 524[450 MustHaveRegister 452 MustHaveRegister 454 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q v55|d [454, 529[454 MustHaveRegister 456 ShouldHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rsi|q]" v57|q v0|q [456, 458[456 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v0|q [466, 470[[482, 488[[492, 498[466 MustHaveRegister 468 MustHaveRegister 486 MustHaveRegister 494 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdx|q]" v59|q -1 [496, 508[496 MustHaveRegister 500 MustHaveRegister 506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v58|q [498, 506[[514, 516[498 MustHaveRegister 506 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rax|q]" v61|q -1 [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [508, 510[508 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r8|q]" v63|q -1 [528, 529[528 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v5|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction v7|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: v7|QWORD, y: v7|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction v9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [v9|QWORD + v7|QWORD * 1 - 8], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction v10|QWORD = LEA [v7|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: v10|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v11|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction v12|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction v13|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH v12|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction v14|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [v14|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction v15|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction v16|QWORD[*] = ADD (x: v14|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v17|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: v18|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE v16|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v19|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction v20|DWORD[_] = MOV [v19|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: v20|DWORD[_], y: v20|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction v21|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v21|QWORD, y: v21|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v23|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [v23|QWORD + v21|QWORD * 1 - 8], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction v24|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: v24|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction v25|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction v31|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction v39|DWORD[_] = MOV [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction v41|QWORD[*] = XOR (x: v0|QWORD[.], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH v41|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v40|QWORD[.], y: v40|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v42|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [v42|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction v43|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction v44|QWORD[*] = ADD (x: v42|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction v45|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: v46|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: v39|DWORD[_], y: v39|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[int[1|0x1]] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [v47|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v48|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction v49|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction v55|DWORD[_] = MOV [v32|QWORD[.] + v47|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction v57|QWORD[*] = XOR (x: v0|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH v57|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction v58|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [v58|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction v59|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction v60|QWORD[*] = ADD (x: v58|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction v61|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: v62|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v55|DWORD[_], y: v55|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v56|QWORD[.] 
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction SAFEPOINT v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr  530  <|@ instruction JUMP ~[v48|DWORD] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 8[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 2[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v8|q [0, 6[[56, 58[[130, 132[[180, 182[[230, 232[[300, 302[[378, 380[[442, 444[[516, 518[ "NoOptimization"
  v0|q QWORD "[r10|q]" v0|q rsi|q [6, 372[[376, 532[[548, 555[[556, 563[6 MustHaveRegister 24 MustHaveRegister 66 MustHaveRegister 68 ShouldHaveRegister 80 MustHaveRegister 138 MustHaveRegister 148 MustHaveRegister 188 MustHaveRegister 198 MustHaveRegister 238 MustHaveRegister 240 MustHaveRegister 258 MustHaveRegister 268 MustHaveRegister 310 MustHaveRegister 314 ShouldHaveRegister 324 MustHaveRegister 400 MustHaveRegister 410 MustHaveRegister 452 MustHaveRegister 456 ShouldHaveRegister 466 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [8, 256[[548, 555[8 MustHaveRegister 10 MustHaveRegister 12 MustHaveRegister 14 MustHaveRegister 64 MustHaveRegister 68 ShouldHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [10, 138[10 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [12, 308[12 MustHaveRegister 242 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [14, 246[14 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rsi|q]" v5|q -1 [24, 26[24 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[rsi|d]" v6|d -1 [26, 34[26 MustHaveRegister 28 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rcx|q]" v7|q -1 [32, 44[32 MustHaveRegister 36 MustHaveRegister 42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q v6|d [34, 42[[54, 56[34 MustHaveRegister 42 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rbx|q]" v9|q -1 [40, 42[40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q -1 [44, 46[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rsi|d]" v11|d v1|q [64, 66[64 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q v0|q [68, 72[68 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q -1 [70, 372[[376, 532[70 MustHaveRegister 82 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 112 ShouldHaveRegister 326 MustHaveRegister 344 MustHaveRegister 352 MustHaveRegister 356 ShouldHaveRegister 468 MustHaveRegister 486 MustHaveRegister 494 MustHaveRegister 498 ShouldHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q v0|q [80, 84[[96, 102[[106, 112[80 MustHaveRegister 82 MustHaveRegister 100 MustHaveRegister 108 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbx|q]" v15|q -1 [110, 122[110 MustHaveRegister 114 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rsi|q]" v16|q v14|q [112, 120[[128, 130[112 MustHaveRegister 120 MustHaveRegister 130 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdi|q]" v17|q -1 [118, 120[118 MustHaveRegister 120 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rsi|q]" v19|q -1 [148, 150[148 MustHaveRegister 150 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rsi|d]" v20|d -1 [150, 158[150 MustHaveRegister 152 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[r11|q]" v21|q -1 [156, 168[156 MustHaveRegister 160 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rsi|q]" v22|q v20|d [158, 166[[178, 180[158 MustHaveRegister 166 MustHaveRegister 180 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbx|q]" v23|q -1 [164, 166[164 MustHaveRegister 166 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [198, 200[198 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rsi|d]" v26|d -1 [200, 208[200 MustHaveRegister 202 MustHaveRegister 208 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[r11|q]" v27|q -1 [206, 218[206 MustHaveRegister 210 MustHaveRegister 216 MustHaveRegister 218 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v26|d [208, 216[[228, 230[208 MustHaveRegister 216 MustHaveRegister 230 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rbx|q]" v29|q -1 [214, 216[214 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q -1 [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[r11|d]" v31|d -1 [250, 372[[376, 532[250 MustHaveRegister 254 MustHaveRegister 394 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v32|q QWORD "[r9|q]" v32|q v3|d [252, 372[[376, 532[[548, 555[[556, 563[252 MustHaveRegister 450 MustHaveRegister 531 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[rsi|q]" v33|q -1 [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v34|d DWORD "[rsi|d]" v34|d -1 [270, 278[270 MustHaveRegister 272 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rbx|q]" v35|q -1 [276, 288[276 MustHaveRegister 280 MustHaveRegister 286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q v34|d [278, 286[[298, 300[278 MustHaveRegister 286 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q -1 [284, 286[284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rsi|q]" v38|q -1 [288, 290[288 MustHaveRegister 290 MustHaveRegister  "NoSpillStore"
  v39|d DWORD "[r8|d]" v39|d -1 [308, 372[[376, 386[308 MustHaveRegister 310 MustHaveRegister 312 MustHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rsi|q]" v40|q v39|d [312, 320[312 MustHaveRegister 314 ShouldHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rbx|q]" v41|q v0|q [314, 316[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q v0|q [324, 328[[340, 346[[350, 356[324 MustHaveRegister 326 MustHaveRegister 344 MustHaveRegister 352 MustHaveRegister 356 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rbx|q]" v43|q -1 [354, 366[354 MustHaveRegister 358 MustHaveRegister 364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rsi|q]" v44|q v42|q [356, 364[[376, 378[356 MustHaveRegister 364 MustHaveRegister 378 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q -1 [362, 364[362 MustHaveRegister 364 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v47|d DWORD "[r8|d]" v47|d v48|d [392, 450[394 ShouldHaveRegister 398 ShouldHaveRegister 450 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rbx|d]" v48|d v47|d [398, 531[398 MustHaveRegister 400 MustHaveRegister 530 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [410, 412[410 MustHaveRegister 412 MustHaveRegister  "NoSpillStore"
  v50|d DWORD "[rsi|d]" v50|d -1 [412, 420[412 MustHaveRegister 414 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rdi|q]" v51|q -1 [418, 430[418 MustHaveRegister 422 MustHaveRegister 428 MustHaveRegister 430 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q v50|d [420, 428[[440, 442[420 MustHaveRegister 428 MustHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdx|q]" v53|q -1 [426, 428[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q -1 [430, 432[430 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[r8|d]" v55|d -1 [450, 524[450 MustHaveRegister 452 MustHaveRegister 454 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q v55|d [454, 529[454 MustHaveRegister 456 ShouldHaveRegister 462 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rsi|q]" v57|q v0|q [456, 458[456 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q v0|q [466, 470[[482, 488[[492, 498[466 MustHaveRegister 468 MustHaveRegister 486 MustHaveRegister 494 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdx|q]" v59|q -1 [496, 508[496 MustHaveRegister 500 MustHaveRegister 506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rsi|q]" v60|q v58|q [498, 506[[514, 516[498 MustHaveRegister 506 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rax|q]" v61|q -1 [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rsi|q]" v62|q -1 [508, 510[508 MustHaveRegister 510 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[r8|q]" v63|q -1 [528, 529[528 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v5|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction v7|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: v7|QWORD, y: v7|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction v9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [v9|QWORD + v7|QWORD * 1 - 8], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction v10|QWORD = LEA [v7|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: v10|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v11|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction v12|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction v13|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH v12|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction v14|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [v14|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction v15|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction v16|QWORD[*] = ADD (x: v14|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v17|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: v18|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE v16|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v19|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction v20|DWORD[_] = MOV [v19|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: v20|DWORD[_], y: v20|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction v21|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v21|QWORD, y: v21|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v23|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [v23|QWORD + v21|QWORD * 1 - 8], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction v24|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: v24|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction v25|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction v31|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction v39|DWORD[_] = MOV [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction v41|QWORD[*] = XOR (x: v0|QWORD[.], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH v41|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v40|QWORD[.], y: v40|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v42|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [v42|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction v43|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction v44|QWORD[*] = ADD (x: v42|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction v45|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: v46|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: v39|DWORD[_], y: v39|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [v47|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v48|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction v49|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction v55|DWORD[_] = MOV [v32|QWORD[.] + v47|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction v57|QWORD[*] = XOR (x: v0|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH v57|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction v58|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [v58|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction v59|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction v60|QWORD[*] = ADD (x: v58|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction v61|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: v62|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v55|DWORD[_], y: v55|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v56|QWORD[.] 
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction SAFEPOINT v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: v0|QWORD[.] Object[null] - 
>@ <|@ instruction v2|DWORD = MOV [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction v3|DWORD[_] = MOV [v1|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction v5|QWORD[.+] = LEA [v0|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction v6|DWORD[_] = MOV [v5|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: v6|DWORD[_], y: v6|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction v7|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v6|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: v7|QWORD, y: v7|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction v9|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [v9|QWORD + v7|QWORD * 1 - 8], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction v10|QWORD = LEA [v7|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: v10|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   56  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction v11|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v11|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction v12|QWORD[*] = XOR (x: v0|QWORD[.], y: v1|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction v13|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH v12|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: v1|QWORD[.], y: v1|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction v14|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [v14|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [v14|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction v15|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction v16|QWORD[*] = ADD (x: v14|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: v15|QWORD, y: v15|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction v17|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [v17|QWORD + v15|QWORD * 1 - 8], y: v16|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction v18|QWORD = LEA [v15|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: v18|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE v16|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction v19|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction v20|DWORD[_] = MOV [v19|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: v20|DWORD[_], y: v20|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction v21|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction v22|QWORD[.] = UNCOMPRESSPOINTER (input: v20|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: v21|QWORD, y: v21|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction v23|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [v23|QWORD + v21|QWORD * 1 - 8], y: v22|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction v24|QWORD = LEA [v21|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: v24|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction rsi|QWORD[.] = MOVE v22|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [v0|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction v25|QWORD[.+] = LEA [v0|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  230  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [v0|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: v3|DWORD[_], y: v3|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH v4|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction v31|DWORD = MOV [v3|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction v32|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: v31|DWORD, y: v31|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [v0|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction v33|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction v34|DWORD[_] = MOV [v33|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: v34|DWORD[_], y: v34|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction v35|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction v36|QWORD[.] = UNCOMPRESSPOINTER (input: v34|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: v35|QWORD, y: v35|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction v37|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [v37|QWORD + v35|QWORD * 1 - 8], y: v36|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction v38|QWORD = LEA [v35|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: v38|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  300  <|@ instruction rsi|QWORD[.] = MOVE v36|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction v39|DWORD[_] = MOV [v3|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v39|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction v40|QWORD[.] = UNCOMPRESSPOINTER (input: v39|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction v41|QWORD[*] = XOR (x: v0|QWORD[.], y: v40|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH v41|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: v40|QWORD[.], y: v40|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction v42|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [v42|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [v42|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction v43|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction v44|QWORD[*] = ADD (x: v42|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: v43|QWORD, y: v43|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction v45|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [v45|QWORD + v43|QWORD * 1 - 8], y: v44|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction v46|QWORD = LEA [v43|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: v46|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE v44|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: v39|DWORD[_], y: v39|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: v31|DWORD, y: v47|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction v48|DWORD = INC v47|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v48|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction v49|QWORD[.+] = LEA [v0|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction v50|DWORD[_] = MOV [v49|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: v50|DWORD[_], y: v50|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction v51|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction v52|QWORD[.] = UNCOMPRESSPOINTER (input: v50|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: v51|QWORD, y: v51|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction v53|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [v53|QWORD + v51|QWORD * 1 - 8], y: v52|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction v54|QWORD = LEA [v51|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: v54|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction v55|DWORD[_] = MOV [v32|QWORD[.] + v47|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v55|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction v56|QWORD[.] = UNCOMPRESSPOINTER (input: v55|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction v57|QWORD[*] = XOR (x: v0|QWORD[.], y: v56|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH v57|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: v56|QWORD[.], y: v56|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction v58|QWORD[*] = SHR v0|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [v58|QWORD[*] + v13|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [v58|QWORD[*] + v13|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction v59|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction v60|QWORD[*] = ADD (x: v58|QWORD[*], y: v13|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: v59|QWORD, y: v59|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction v61|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [v61|QWORD + v59|QWORD * 1 - 8], y: v60|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction v62|QWORD = LEA [v59|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: v62|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE v60|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: v55|DWORD[_], y: v55|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: v56|QWORD[.] 
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction SAFEPOINT v63|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVE v48|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: v0|QWORD[.] v1|QWORD[.] v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: v0|QWORD[.] - v32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rax|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] rdx|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rax|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] rdx|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rax|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] rdx|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rax|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] rdx|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rax|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] rdx|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rax|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] rdx|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B3 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" "B6" "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" 
    xhandlers
    flags 
    probability 4604741467801982600
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B8 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B14 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B18" 
    xhandlers
    flags 
    probability 4589917419268529874
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B14 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B8" "B10" "B12" "B14" "B17" "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction JUMP ~[] destination: B19 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B19" "B21" "B24" "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction JUMP ~[] destination: B26 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576918229304087672
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B39 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B39 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576907556406328546
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B39" "B41" "B44" "B43" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" 
    xhandlers
    flags 
    probability 4604729310704378844
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B50 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B46 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591137597116599423
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  338  <|@ instruction JUMP ~[] destination: B48 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4589907693590446870
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" 
    xhandlers
    flags 
    probability 4566074065096263914
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B33 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B46" "B48" "B50" "B52" "B55" "B54" 
    successors "B57" "B81" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B81 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918397
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B60 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4583089719477616450
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B62 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" "B65" "B64" 
    successors "B67" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B67 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B69" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B71 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611144899004586516
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B71 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151243
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B67 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377006
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B69 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B73 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595940884156087106
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B73 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rax|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B67" "B69" "B71" "B73" "B76" "B75" 
    successors "B78" "B79" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B79 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B82" 
    xhandlers
    flags 
    probability 4605100741650976961
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B82" 
    xhandlers
    flags 
    probability 4597428023275702677
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B33" "B35" "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B82" 
    xhandlers
    flags 
    probability 4537474089773413476
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B35 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] rdx|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B7" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" "B6" "B5" 
    successors "B18" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B11" "B13" "B17" "B16" 
    successors "B25" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B24" "B23" 
    successors "B32" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" "B31" "B30" 
    successors "B82" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B44" "B43" 
    successors "B56" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B55" "B54" 
    successors "B57" "B82" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B65" "B64" 
    successors "B77" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rax|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B70" "B72" "B76" "B75" 
    successors "B78" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" "B77" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] rdx|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B7" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" "B6" "B5" 
    successors "B18" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B11" "B13" "B17" "B16" 
    successors "B25" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B24" "B23" 
    successors "B32" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" "B31" "B30" 
    successors "B82" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B44" "B43" 
    successors "B56" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B55" "B54" 
    successors "B57" "B82" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" "B77" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B65" "B64" 
    successors "B77" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B70" "B72" "B76" "B75" 
    successors "B78" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rax|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] rdx|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B7" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" "B6" "B5" 
    successors "B18" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B11" "B13" "B17" "B16" 
    successors "B25" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B24" "B23" 
    successors "B32" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" "B31" "B30" 
    successors "B82" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B44" "B43" 
    successors "B56" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B55" "B54" 
    successors "B57" "B82" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" "B77" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B65" "B64" 
    successors "B77" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B70" "B72" "B76" "B75" 
    successors "B78" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rax|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] rdx|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B7" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" "B6" "B5" 
    successors "B18" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B11" "B13" "B17" "B16" 
    successors "B25" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B24" "B23" 
    successors "B32" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" "B31" "B30" 
    successors "B82" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B44" "B43" 
    successors "B56" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B55" "B54" 
    successors "B57" "B82" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" "B77" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B65" "B64" 
    successors "B77" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B70" "B72" "B76" "B75" 
    successors "B78" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rax|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] rdx|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B7" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" "B6" "B5" 
    successors "B18" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B11" "B13" "B17" "B16" 
    successors "B25" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B24" "B23" 
    successors "B32" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" "B31" "B30" 
    successors "B82" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B44" "B43" 
    successors "B56" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B55" "B54" 
    successors "B57" "B82" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" "B77" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B65" "B64" 
    successors "B77" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B70" "B72" "B76" "B75" 
    successors "B78" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rdi:0, r9:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rax|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] rdx|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [r9:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B7" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ st <@st|@reference-map: [rdx:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0]
locals: r10|QWORD[.] Object[null] - 
>@ <|@ instruction r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   12  <|@ instruction r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   14  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B0" "B2" "B6" "B5" 
    successors "B18" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr   68  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD <|@ <|@
      nr   70  <|@ instruction rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   72  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B18" "B11" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" "B13" 
    xhandlers
    flags 
    probability 4605471050941616620
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   82  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B7" "B9" "B11" "B13" "B17" "B16" 
    successors "B25" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B18" "B20" "B24" "B23" 
    successors "B32" "B27" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  188  <|@ instruction MOV [r10|QWORD[.] + 20] y: 0 size: DWORD <|@ <|@
      nr  190  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B25" "B27" "B31" "B30" 
    successors "B82" "B34" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction MOV [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  240  <|@ instruction MOV [r10|QWORD[.] + 16] y: 0 size: DWORD <|@ <|@
      nr  242  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B82" "B36" 
    xhandlers
    flags 
    probability 4607165951530100764
    begin_IR
      LIR
      nr  244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  246  <|@ instruction CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" "B38" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  254  <|@ instruction TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B45" "B40" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction MOV [r10|QWORD[.] + 16] y: 1 size: DWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" "B44" "B43" 
    successors "B56" "B47" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  306  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  308  <|@ instruction r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  310  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  312  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  314  <|@ instruction rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B56" "B49" 
    xhandlers
    flags 
    probability 4606266690112069537
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  320  <|@ instruction TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B56" "B51" 
    xhandlers
    flags 
    probability 4605457543055390225
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  326  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B45" "B47" "B49" "B51" "B55" "B54" 
    successors "B57" "B82" 
    xhandlers
    flags 
    probability 4607165742397268773
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  386  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B32" "B34" "B77" "B56" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605100741650976960
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = INC r8|DWORD size: DWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B59" "B61" "B65" "B64" 
    successors "B77" "B68" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  452  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  458  <|@ instruction TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B77" "B70" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612408394004918398
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  462  <|@ instruction TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B77" "B72" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4611885796484428299
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  466  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  468  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B66" "B68" "B70" "B72" "B76" "B75" 
    successors "B78" "B82" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4612989057916574063
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  524  <|@ instruction TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4610829336352909949
    begin_IR
      LIR
      nr  526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  528  <|@ st <@st|@reference-map: [rdi:0, r9:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75]
stack: rdi|QWORD[.] 
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75] <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  530  <|@ instruction JUMP ~[] destination: B78 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B78" 
    successors "B59" "B80" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4612989057916574062
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B66" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598316931211151242
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  414  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4597529580618377004
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  420  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  422  <|@ instruction TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592846
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  432  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B77" "B74" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4596693424585592848
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  486  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581677544844469874
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  498  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4581075512500865280
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction rax|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  506  <|@ instruction MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  510  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B76 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4582346469670697199
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4566962681275149197
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  520  <|@ instruction JUMP ~[] destination: B75 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD <|@ <|@
      nr  200  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  202  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  206  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  208  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  210  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  216  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B4" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD <|@ <|@
      nr   26  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr   28  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   32  <|@ instruction rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   34  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   42  <|@ instruction MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr   44  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr   46  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  152  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4591149604126578441
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  156  <|@ instruction r11|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  158  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591856838944758812
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  270  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  272  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4591137597116599424
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  276  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  278  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3 <|@ <|@
      nr  280  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4590490279471255975
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  286  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  288  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B18" "B15" 
    xhandlers
    flags 
    probability 4590501085780237090
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   98  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  100  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4590490279471255974
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  342  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  344  <|@ instruction CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4575814308827526276
    begin_IR
      LIR
      nr  350  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  352  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  354  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  356  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4575039258837334049
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576341768551784249
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4576332162943801036
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  302  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  304  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4575822953874711169
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4575054819922266856
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4560610154621423821
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  134  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4560596322545927992
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  550  <|@ instruction MOV [r15|QWORD + 1156] y: -40731 size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  554  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37]
locals: r10|QWORD[.] rdx|QWORD[.] r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:37] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction MOV [r15|QWORD + 1156] y: -37403 size: DWORD <|@ <|@
      nr  560  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  562  <|@ st <@st|@reference-map: [r9:0, r10:0]
live-base-pointers: []
java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48]
locals: r10|QWORD[.] - r9|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.HashMap
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_1       
    11: getfield      #2          // java.util.HashMap.modCount:int
    14: putfield      #3          // expectedModCount:int
    17: aload_1       
    18: getfield      #4          // java.util.HashMap.table:java.util.HashMap$Node[]
    21: astore_2      
    22: aload_0       
    23: aload_0       
    24: aconst_null   
    25: dup_x1        
    26: putfield      #5          // next:java.util.HashMap$Node
    29: putfield      #6          // current:java.util.HashMap$Node
    32: aload_0       
    33: iconst_0      
    34: putfield      #7          // index:int
    37: aload_2       
    38: ifnull        78
    41: aload_1       
    42: getfield      #8          // java.util.HashMap.size:int
    45: ifle          78
    48: aload_0       
    49: getfield      #7          // index:int
    52: aload_2       
    53: arraylength   
    54: if_icmpge     78
    57: aload_0       
    58: aload_2       
    59: aload_0       
    60: dup           
    61: getfield      #7          // index:int
    64: dup_x1        
    65: iconst_1      
    66: iadd          
    67: putfield      #7          // index:int
    70: aaload        
    71: dup_x1        
    72: putfield      #5          // next:java.util.HashMap$Node
    75: ifnull        48
    78: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000fbb97f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85fe03000048896c24104c8bd6448b5a18448b4224448b4a1441807f40000f8547020000488bf248c1ee034189721c498bf24833f248b900006057ba7f000048f7c60000c0ff0f841a0000004885d20f8411000000498bf248c1ee09803c0e020f85a402000045895a0c41807f40000f852b02000041c742140000000041807f40000f85ae01000041c742180000000041c74210000000004585c00f847e0000004183f9010f8c74000000468b1cc50c000000458bc849c1e1034585db0f84fa02000041c742100100000041807f40000f85ff010000468b04c51000000045894214418bf048c1e603498bda4833de48f7c30000c0ff0f841a0000004885f60f8411000000498bf248c1ee09803c0e020f85080200004585c00f8417000000488b6c24104883c418493ba7500400000f87de020000c341b801000000e97100000066660f1f840000000000418bd8ffc341895a1041807f40000f855d000000478b44811045894214418bf848c1e703498bf24833f748f7c60000c0ff0f841a0000004885ff0f8411000000498bf248c1ee09803c0e020f85510000004585c00f857affffff4d8b8758040000418500448bc3453bd87794e924020000498d72148b3685f67499498b7f2848c1e6034885ff0f844b000000498b57384889743af8488d77f849897728e972fffffff083042400803c0e0074a4c6040e00498b57484803f14885d20f8420000000498b475848897410f8488d72f849897748e97affffffe800000000e933ffffffe800000000e966ffffff498d72188b3685f60f8444feffff4d8b5f2848c1e6034d85db0f8416010000498b5f384a89741bf8498d73f849897728e91dfeffff498d721c8b3685f60f84abfdffff498b4f2848c1e6034885c90f84cd000000498b5f384889740bf8488d71f849897728e984fdffff498d72148b3685f60f84c7fdffff4d8b5f2848c1e6034d85db0f84a2000000498b5f384a89741bf8498d73f849897728e9a0fdffff498d72148b3685f60f84f3fdffff498b5f2848c1e6034885db0f8481000000498b7f384889741ff8488d73f849897728e9ccfdfffff083042400803c0e000f844dfdffffe961000000f083042400803c0e000f84e9fdffffc6040e00498b5f484803f14885db0f8472000000498b7f584889741ff8488d73f849897748e9bffdffffe800000000e9c3fcffffe800000000e90afdffffe800000000e913fdffffe800000000e957fdffffc6040e00498b5f484803f14885db0f8416000000498b7f584889741ff8488d73f849897748e9bdfcffffe800000000e9b3fcffffe800000000e959fdffff41c78784040000e560ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000e56dffff49c7879004000000000000e8000000000f1f84000000000048896c2410e800000000e9f3fbfffff4488d0d0efdffff49898f68040000e9a5fbfffff441c78784040000f59affff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD  <||@
  Comment 63 6 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 66 10 r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 66 [rdx:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r10|QWORD[.]  |Object[null]  |-   <||@
  Comment 66 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 70 12 r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 74 14 r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 78 16 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null  <||@
  Comment 89 block B7 null  <||@
  Comment 89 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 89 64 rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 96 66 MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 100 68 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 106 70 rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000]  <||@
  Comment 116 72 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD  <||@
  Comment 129 block B9 null  <||@
  Comment 129 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 129 76 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 138 block B11 null  <||@
  Comment 138 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 138 80 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 145 82 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null  <||@
  Comment 155 block B18 null  <||@
  Comment 155 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 155 138 MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 159 140 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null  <||@
  Comment 170 block B25 null  <||@
  Comment 170 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 170 188 MOV [r10|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 178 190 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null  <||@
  Comment 189 block B32 null  <||@
  Comment 189 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 189 238 MOV [r10|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 197 240 MOV [r10|QWORD[.] + 16] y: 0 size: DWORD  <||@
  Comment 205 242 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 214 block B34 null  <||@
  Comment 214 244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 214 246 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null  <||@
  Comment 224 block B36 null  <||@
  Comment 224 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 224 250 r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 232 252 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 239 254 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 248 block B38 null  <||@
  Comment 248 256 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 248 258 MOV [r10|QWORD[.] + 16] y: 1 size: DWORD  <||@
  Comment 256 260 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null  <||@
  Comment 267 block B45 null  <||@
  Comment 267 306 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 267 308 r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 275 310 MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 279 312 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 286 314 rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 292 316 TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD  <||@
  Comment 305 block B47 null  <||@
  Comment 305 318 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 305 320 TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD  <||@
  Comment 314 block B49 null  <||@
  Comment 314 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 314 324 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 321 326 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null  <||@
  Comment 331 block B56 null  <||@
  Comment 331 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 331 386 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD  <||@
  Comment 340 block B82 null  <||@
  Comment 340 540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 542 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 349 POLL_RETURN_FAR  <||@
  Comment 363 block B57 null  <||@
  Comment 363 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 363 -1 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 369 390 JUMP ~[] destination: B57 -> B58  <||@
  Comment 374 block B59 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 374 396 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 398 rbx|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 389 400 MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 393 402 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null  <||@
  Comment 404 block B66 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 404 448 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 404 450 r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 409 452 MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 413 454 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 420 456 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 426 458 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD  <||@
  Comment 439 block B68 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 439 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 439 462 TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD  <||@
  Comment 448 block B70 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 448 464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 448 466 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 455 468 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null  <||@
  Comment 465 block B77 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 465 522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 465 524 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD  <||@
  Comment 474 block B78 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 474 526 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 474 528 SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75]  <||@
  Comment 481 [rdi:0, r9:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r9|QWORD[.] 
     stack:   |rdi|QWORD[.]  |   |              <||@
  Comment 481 {infopoint: SAFEPOINT}  <||@
  Comment 481 POLL_FAR  <||@
  Comment 484 -1 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 487 530 JUMP ~[] destination: B78 -> B58  <||@
  Comment 487 block B58 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 487 392 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 487 394 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD  <||@
  Comment 497 block B61 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 497 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 497 410 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 501 412 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 503 414 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD  <||@
  Comment 507 block B63 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 507 416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 507 418 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 511 420 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 515 422 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD  <||@
  Comment 524 block B65 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 524 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 524 426 rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 528 428 MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 533 430 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 537 432 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 541 434 JUMP ~[] destination: B65 -> B66  <||@
  Comment 546 block B72 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 546 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 546 484 MEMBAR barriers: 4  <||@
  Comment 551 486 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null  <||@
  Comment 557 block B74 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 557 492 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 557 494 MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 561 496 rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 565 498 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 568 500 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD  <||@
  Comment 577 block B76 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 577 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 577 504 rax|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 581 506 MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 586 508 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 590 510 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 594 512 JUMP ~[] destination: B76 -> B77  <||@
  Comment 599 block B64 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 599 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 599 444 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 599 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 604 446 JUMP ~[] destination: B64 -> B66  <||@
  Comment 609 block B75 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 609 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 609 516 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 609 518 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 609 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 614 520 JUMP ~[] destination: B75 -> B77  <||@
  Comment 619 block B27 null  <||@
  Comment 619 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 619 198 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD  <||@
  Comment 623 200 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 625 202 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 633 block B29 null  <||@
  Comment 633 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 633 206 r11|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 637 208 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 641 210 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD  <||@
  Comment 650 block B31 null  <||@
  Comment 650 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 214 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 654 216 MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 659 218 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 663 220 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 667 222 JUMP ~[] destination: B31 -> B32  <||@
  Comment 672 block B2 null  <||@
  Comment 672 22 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 672 24 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD  <||@
  Comment 676 26 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 678 28 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 686 block B4 null  <||@
  Comment 686 30 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 686 32 rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 690 34 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 694 36 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 703 block B6 null  <||@
  Comment 703 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 703 40 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 707 42 MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 712 44 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 716 46 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 720 48 JUMP ~[] destination: B6 -> B7  <||@
  Comment 725 block B20 null  <||@
  Comment 725 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 725 148 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 729 150 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 731 152 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD  <||@
  Comment 739 block B22 null  <||@
  Comment 739 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 739 156 r11|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 743 158 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 747 160 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD  <||@
  Comment 756 block B24 null  <||@
  Comment 756 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 756 164 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 760 166 MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 765 168 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 769 170 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 773 172 JUMP ~[] destination: B24 -> B25  <||@
  Comment 778 block B40 null  <||@
  Comment 778 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 778 268 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 782 270 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 784 272 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD  <||@
  Comment 792 block B42 null  <||@
  Comment 792 274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 792 276 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 796 278 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 800 280 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD  <||@
  Comment 809 block B44 null  <||@
  Comment 809 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 809 284 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 813 286 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 818 288 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 822 290 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 826 292 JUMP ~[] destination: B44 -> B45  <||@
  Comment 831 block B13 null  <||@
  Comment 831 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 831 98 MEMBAR barriers: 4  <||@
  Comment 836 100 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null  <||@
  Comment 851 block B51 null  <||@
  Comment 851 340 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 851 342 MEMBAR barriers: 4  <||@
  Comment 856 344 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null  <||@
  Comment 866 block B53 null  <||@
  Comment 866 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 866 352 MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 870 354 rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 874 356 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 877 358 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD  <||@
  Comment 886 block B55 null  <||@
  Comment 886 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 886 362 rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 890 364 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 895 366 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 899 368 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 903 370 JUMP ~[] destination: B55 -> B56  <||@
  Comment 908 block B5 null  <||@
  Comment 908 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 908 58 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 908 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 913 60 JUMP ~[] destination: B5 -> B7  <||@
  Comment 918 block B23 null  <||@
  Comment 918 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 918 182 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 918 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 923 184 JUMP ~[] destination: B23 -> B25  <||@
  Comment 928 block B30 null  <||@
  Comment 928 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 928 232 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 928 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 933 234 JUMP ~[] destination: B30 -> B32  <||@
  Comment 938 block B43 null  <||@
  Comment 938 298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 938 302 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 938 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 943 304 JUMP ~[] destination: B43 -> B45  <||@
  Comment 948 block B15 null  <||@
  Comment 948 106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 948 108 MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 952 110 rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 956 112 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 959 114 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD  <||@
  Comment 968 block B17 null  <||@
  Comment 968 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 968 118 rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 972 120 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 977 122 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 981 124 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 985 126 JUMP ~[] destination: B17 -> B18  <||@
  Comment 990 block B16 null  <||@
  Comment 990 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 990 130 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 990 132 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 990 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 995 134 JUMP ~[] destination: B16 -> B18  <||@
  Comment 1000 block B54 null  <||@
  Comment 1000 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1000 378 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1000 380 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1000 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1005 382 JUMP ~[] destination: B54 -> B56  <||@
  Comment 1010 block B37 null  <||@
  Comment 1010 548 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1010 550 MOV [r15|QWORD + 1156] y: -40731 size: DWORD  <||@
  Comment 1021 552 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1032 554 DEOPT info [bci:37]  <||@
  Comment 1032 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1037 [rdx:0, r9:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2           
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r9|QWORD[.]   <||@
  Comment 1045 block B80 null  <||@
  Comment 1045 556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1045 558 MOV [r15|QWORD + 1156] y: -37403 size: DWORD  <||@
  Comment 1056 560 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1067 562 DEOPT info [bci:48]  <||@
  Comment 1067 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1072 [r9:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r9|QWORD[.]   <||@
  Comment 1085 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 1110 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 1138 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1143 [rdx:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r10|QWORD[.]  |Object[null]  |-   <||@
  Comment 1151 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1151 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1157 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 1157 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-3521[java.util.HashMap$HashIterator.<init>(HashMap)]"
  method "HotSpotCompilation-3521[java.util.HashMap$HashIterator.<init>(HashMap)]"
  date 1714038184673
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7fba638a16a0 448b560849bc000000fbb97f00004d03d44d33e4493bc20f85c3392eff66669089842400c0feff4883ec189041817f20000000000f85fe03000048896c24104c8bd6448b5a18448b4224448b4a1441807f40000f8547020000488bf248c1ee034189721c498bf24833f248b900006057ba7f000048f7c60000c0ff0f841a0000004885d20f8411000000498bf248c1ee09803c0e020f85a402000045895a0c41807f40000f852b02000041c742140000000041807f40000f85ae01000041c742180000000041c74210000000004585c00f847e0000004183f9010f8c74000000468b1cc50c000000458bc849c1e1034585db0f84fa02000041c742100100000041807f40000f85ff010000468b04c51000000045894214418bf048c1e603498bda4833de48f7c30000c0ff0f841a0000004885f60f8411000000498bf248c1ee09803c0e020f85080200004585c00f8417000000488b6c24104883c418493ba7500400000f87de020000c341b801000000e97100000066660f1f840000000000418bd8ffc341895a1041807f40000f855d000000478b44811045894214418bf848c1e703498bf24833f748f7c60000c0ff0f841a0000004885ff0f8411000000498bf248c1ee09803c0e020f85510000004585c00f857affffff4d8b8758040000418500448bc3453bd87794e924020000498d72148b3685f67499498b7f2848c1e6034885ff0f844b000000498b57384889743af8488d77f849897728e972fffffff083042400803c0e0074a4c6040e00498b57484803f14885d20f8420000000498b475848897410f8488d72f849897748e97affffffe8044942ffe933ffffffe8fa8642ffe966ffffff498d72188b3685f60f8444feffff4d8b5f2848c1e6034d85db0f8416010000498b5f384a89741bf8498d73f849897728e91dfeffff498d721c8b3685f60f84abfdffff498b4f2848c1e6034885c90f84cd000000498b5f384889740bf8488d71f849897728e984fdffff498d72148b3685f60f84c7fdffff4d8b5f2848c1e6034d85db0f84a2000000498b5f384a89741bf8498d73f849897728e9a0fdffff498d72148b3685f60f84f3fdffff498b5f2848c1e6034885db0f8481000000498b7f384889741ff8488d73f849897728e9ccfdfffff083042400803c0e000f844dfdffffe961000000f083042400803c0e000f84e9fdffffc6040e00498b5f484803f14885db0f8472000000498b7f584889741ff8488d73f849897748e9bffdffffe8cf4742ffe9c3fcffffe8c54742ffe90afdffffe8bb4742ffe913fdffffe8b14742ffe957fdffffc6040e00498b5f484803f14885db0f8416000000498b7f584889741ff8488d73f849897748e9bdfcffffe87d8542ffe9b3fcffffe8738542ffe959fdffff41c78784040000e560ffff49c7879004000000000000e8cd962eff0f1f84000000000041c78784040000e56dffff49c7879004000000000000e8aa962eff0f1f84000000000048896c2410e83e972cffe9f3fbfffff4488d0d0efdffff49898f68040000e905a52efff441c78784040000f59affff49c7879004000000000000e863962eff0f1f840000000000e8dc4342fff4e8f6932efff4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@913f315 slotKind: QWORD  <||@
  Comment 63 6 r10|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 66 10 r11|DWORD = MOV [rdx|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 66 [rdx:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r10|QWORD[.]  |Object[null]  |-   <||@
  Comment 66 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 70 12 r8|DWORD[_] = MOV [rdx|QWORD[.] + 36] size: DWORD  <||@
  Comment 74 14 r9|DWORD = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 78 16 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B0 -> B7 falseDestination: B0 -> B2 y: 0 size: BYTE inlinedY: null  <||@
  Comment 89 block B7 null  <||@
  Comment 89 62 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 89 64 rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 96 66 MOV (x: [r10|QWORD[.] + 28], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 100 68 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdx|QWORD[.]) size: QWORD  <||@
  Comment 106 70 rcx|QWORD = MOVE input: long[140438306553856|0x7fba57600000]  <||@
  Comment 116 72 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B18 falseDestination: B7 -> B9 y: -4194304 size: QWORD  <||@
  Comment 129 block B9 null  <||@
  Comment 129 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 129 76 TESTBRANCH (x: rdx|QWORD[.], y: rdx|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B18 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 138 block B11 null  <||@
  Comment 138 78 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 138 80 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 145 82 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B11 -> B18 falseDestination: B11 -> B13 y: 2 size: BYTE inlinedY: null  <||@
  Comment 155 block B18 null  <||@
  Comment 155 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 155 138 MOV (x: [r10|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 159 140 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B25 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null  <||@
  Comment 170 block B25 null  <||@
  Comment 170 186 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 170 188 MOV [r10|QWORD[.] + 20] y: 0 size: DWORD  <||@
  Comment 178 190 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B25 -> B32 falseDestination: B25 -> B27 y: 0 size: BYTE inlinedY: null  <||@
  Comment 189 block B32 null  <||@
  Comment 189 236 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 189 238 MOV [r10|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 197 240 MOV [r10|QWORD[.] + 16] y: 0 size: DWORD  <||@
  Comment 205 242 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.0018282342214175859 condition: = trueDestination: B32 -> B82 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 214 block B34 null  <||@
  Comment 214 244 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 214 246 CMPCONSTBRANCH r9|DWORD trueDestinationProbability: 2.3260934965518842E-5 condition: < trueDestination: B34 -> B82 falseDestination: B34 -> B36 y: 1 size: DWORD inlinedY: null  <||@
  Comment 224 block B36 null  <||@
  Comment 224 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 224 250 r11|DWORD = MOV [r8|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 232 252 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 239 254 TESTBRANCH (x: r11|DWORD, y: r11|DWORD) trueDestinationProbability: 0.0 condition: = trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 248 block B38 null  <||@
  Comment 248 256 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 248 258 MOV [r10|QWORD[.] + 16] y: 1 size: DWORD  <||@
  Comment 256 260 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B38 -> B45 falseDestination: B38 -> B40 y: 0 size: BYTE inlinedY: null  <||@
  Comment 267 block B45 null  <||@
  Comment 267 306 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 267 308 r8|DWORD[_] = MOV [r8|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 275 310 MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 279 312 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 286 314 rbx|QWORD[*] = XOR (x: r10|QWORD[.], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 292 316 TESTCONSTBRANCH rbx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B45 -> B56 falseDestination: B45 -> B47 y: -4194304 size: QWORD  <||@
  Comment 305 block B47 null  <||@
  Comment 305 318 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 305 320 TESTBRANCH (x: rsi|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B47 -> B56 falseDestination: B47 -> B49 size: QWORD  <||@
  Comment 314 block B49 null  <||@
  Comment 314 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 314 324 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 321 326 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B49 -> B56 falseDestination: B49 -> B51 y: 2 size: BYTE inlinedY: null  <||@
  Comment 331 block B56 null  <||@
  Comment 331 384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 331 386 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7703136090873518 condition: = trueDestination: B56 -> B57 falseDestination: B56 -> B82 size: DWORD  <||@
  Comment 340 block B82 null  <||@
  Comment 340 540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 542 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 349 POLL_RETURN_FAR  <||@
  Comment 363 block B57 null  <||@
  Comment 363 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 363 -1 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 369 390 JUMP ~[] destination: B57 -> B58  <||@
  Comment 374 block B59 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 374 396 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 384 398 rbx|DWORD = INC r8|DWORD size: DWORD  <||@
  Comment 389 400 MOV (x: [r10|QWORD[.] + 16], y: rbx|DWORD) size: DWORD  <||@
  Comment 393 402 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B59 -> B66 falseDestination: B59 -> B61 y: 0 size: BYTE inlinedY: null  <||@
  Comment 404 block B66 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 404 448 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 404 450 r8|DWORD[_] = MOV [r9|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 409 452 MOV (x: [r10|QWORD[.] + 20], y: r8|DWORD[_]) size: DWORD  <||@
  Comment 413 454 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 420 456 rsi|QWORD[*] = XOR (x: r10|QWORD[.], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 426 458 TESTCONSTBRANCH rsi|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B66 -> B77 falseDestination: B66 -> B68 y: -4194304 size: QWORD  <||@
  Comment 439 block B68 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 439 460 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 439 462 TESTBRANCH (x: rdi|QWORD[.], y: rdi|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B68 -> B77 falseDestination: B68 -> B70 size: QWORD  <||@
  Comment 448 block B70 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 448 464 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 448 466 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 455 468 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B70 -> B77 falseDestination: B70 -> B72 y: 2 size: BYTE inlinedY: null  <||@
  Comment 465 block B77 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 465 522 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 465 524 TESTBRANCH (x: r8|DWORD[_], y: r8|DWORD[_]) trueDestinationProbability: 0.7018274269037323 condition: = trueDestination: B77 -> B78 falseDestination: B77 -> B82 size: DWORD  <||@
  Comment 474 block B78 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 474 526 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 474 528 SAFEPOINT r8|QWORD config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 thread: r15 state [bci:75]  <||@
  Comment 481 [rdi:0, r9:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 75, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r9|QWORD[.] 
     stack:   |rdi|QWORD[.]  |   |              <||@
  Comment 481 {infopoint: SAFEPOINT}  <||@
  Comment 481 POLL_FAR  <||@
  Comment 484 -1 r8|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 487 530 JUMP ~[] destination: B78 -> B58  <||@
  Comment 487 block B58 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 487 392 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 487 394 CMPBRANCH (x: r11|DWORD, y: r8|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B58 -> B59 falseDestination: B58 -> B80 size: DWORD  <||@
  Comment 497 block B61 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 497 408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 497 410 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 501 412 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 503 414 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B61 -> B66 falseDestination: B61 -> B63 size: DWORD  <||@
  Comment 507 block B63 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 507 416 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 507 418 rdi|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 511 420 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 515 422 TESTBRANCH (x: rdi|QWORD, y: rdi|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: QWORD  <||@
  Comment 524 block B65 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 524 424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 524 426 rdx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 528 428 MOV (x: [rdx|QWORD + rdi|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 533 430 rsi|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 537 432 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 541 434 JUMP ~[] destination: B65 -> B66  <||@
  Comment 546 block B72 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 546 482 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 546 484 MEMBAR barriers: 4  <||@
  Comment 551 486 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B72 -> B77 falseDestination: B72 -> B74 y: 0 size: BYTE inlinedY: null  <||@
  Comment 557 block B74 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 557 492 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 557 494 MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 561 496 rdx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 565 498 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 568 500 TESTBRANCH (x: rdx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B76 size: QWORD  <||@
  Comment 577 block B76 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 577 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 577 504 rax|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 581 506 MOV (x: [rax|QWORD + rdx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 586 508 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 590 510 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 594 512 JUMP ~[] destination: B76 -> B77  <||@
  Comment 599 block B64 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 599 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 599 444 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 599 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 604 446 JUMP ~[] destination: B64 -> B66  <||@
  Comment 609 block B75 loop 0 depth 1 header:32|LoopBegin  <||@
  Comment 609 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 609 516 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 609 518 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 609 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 614 520 JUMP ~[] destination: B75 -> B77  <||@
  Comment 619 block B27 null  <||@
  Comment 619 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 619 198 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 24] size: QWORD  <||@
  Comment 623 200 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 625 202 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 633 block B29 null  <||@
  Comment 633 204 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 633 206 r11|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 637 208 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 641 210 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: QWORD  <||@
  Comment 650 block B31 null  <||@
  Comment 650 212 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 650 214 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 654 216 MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 659 218 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 663 220 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 667 222 JUMP ~[] destination: B31 -> B32  <||@
  Comment 672 block B2 null  <||@
  Comment 672 22 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 672 24 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 28] size: QWORD  <||@
  Comment 676 26 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 678 28 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B2 -> B7 falseDestination: B2 -> B4 size: DWORD  <||@
  Comment 686 block B4 null  <||@
  Comment 686 30 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 686 32 rcx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 690 34 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 694 36 TESTBRANCH (x: rcx|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 703 block B6 null  <||@
  Comment 703 38 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 703 40 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 707 42 MOV (x: [rbx|QWORD + rcx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 712 44 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 716 46 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 720 48 JUMP ~[] destination: B6 -> B7  <||@
  Comment 725 block B20 null  <||@
  Comment 725 146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 725 148 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 729 150 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 731 152 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 size: DWORD  <||@
  Comment 739 block B22 null  <||@
  Comment 739 154 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 739 156 r11|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 743 158 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 747 160 TESTBRANCH (x: r11|QWORD, y: r11|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD  <||@
  Comment 756 block B24 null  <||@
  Comment 756 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 756 164 rbx|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 760 166 MOV (x: [rbx|QWORD + r11|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 765 168 rsi|QWORD = LEA [r11|QWORD - 8] size: QWORD  <||@
  Comment 769 170 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 773 172 JUMP ~[] destination: B24 -> B25  <||@
  Comment 778 block B40 null  <||@
  Comment 778 266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 778 268 rsi|QWORD[.+] = LEA [r10|QWORD[.] + 20] size: QWORD  <||@
  Comment 782 270 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 784 272 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 size: DWORD  <||@
  Comment 792 block B42 null  <||@
  Comment 792 274 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 792 276 rbx|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 796 278 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@b6c4cdd encoding: base: 0 shift: 3  <||@
  Comment 800 280 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: QWORD  <||@
  Comment 809 block B44 null  <||@
  Comment 809 282 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 809 284 rdi|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 813 286 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 818 288 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 822 290 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 826 292 JUMP ~[] destination: B44 -> B45  <||@
  Comment 831 block B13 null  <||@
  Comment 831 96 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 831 98 MEMBAR barriers: 4  <||@
  Comment 836 100 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B13 -> B18 falseDestination: B13 -> B15 y: 0 size: BYTE inlinedY: null  <||@
  Comment 851 block B51 null  <||@
  Comment 851 340 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 851 342 MEMBAR barriers: 4  <||@
  Comment 856 344 CMPCONSTBRANCH [rsi|QWORD[*] + rcx|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 0 size: BYTE inlinedY: null  <||@
  Comment 866 block B53 null  <||@
  Comment 866 350 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 866 352 MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 870 354 rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 874 356 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 877 358 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 size: QWORD  <||@
  Comment 886 block B55 null  <||@
  Comment 886 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 886 362 rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 890 364 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 895 366 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 899 368 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 903 370 JUMP ~[] destination: B55 -> B56  <||@
  Comment 908 block B5 null  <||@
  Comment 908 54 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 908 58 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 908 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 913 60 JUMP ~[] destination: B5 -> B7  <||@
  Comment 918 block B23 null  <||@
  Comment 918 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 918 182 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 918 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 923 184 JUMP ~[] destination: B23 -> B25  <||@
  Comment 928 block B30 null  <||@
  Comment 928 228 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 928 232 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 928 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 933 234 JUMP ~[] destination: B30 -> B32  <||@
  Comment 938 block B43 null  <||@
  Comment 938 298 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 938 302 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 938 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 943 304 JUMP ~[] destination: B43 -> B45  <||@
  Comment 948 block B15 null  <||@
  Comment 948 106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 948 108 MOVB [rsi|QWORD[*] + rcx|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 952 110 rbx|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 956 112 rsi|QWORD[*] = ADD (x: rsi|QWORD[*], y: rcx|QWORD) size: QWORD  <||@
  Comment 959 114 TESTBRANCH (x: rbx|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 size: QWORD  <||@
  Comment 968 block B17 null  <||@
  Comment 968 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 968 118 rdi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 972 120 MOV (x: [rdi|QWORD + rbx|QWORD * 1 - 8], y: rsi|QWORD[*]) size: QWORD  <||@
  Comment 977 122 rsi|QWORD = LEA [rbx|QWORD - 8] size: QWORD  <||@
  Comment 981 124 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 985 126 JUMP ~[] destination: B17 -> B18  <||@
  Comment 990 block B16 null  <||@
  Comment 990 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 990 130 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 990 132 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 990 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 995 134 JUMP ~[] destination: B16 -> B18  <||@
  Comment 1000 block B54 null  <||@
  Comment 1000 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1000 378 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1000 380 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1000 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1005 382 JUMP ~[] destination: B54 -> B56  <||@
  Comment 1010 block B37 null  <||@
  Comment 1010 548 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1010 550 MOV [r15|QWORD + 1156] y: -40731 size: DWORD  <||@
  Comment 1021 552 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1032 554 DEOPT info [bci:37]  <||@
  Comment 1032 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1037 [rdx:0, r9:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1592) [bci: 37, duringCall: false, rethrow: false]
              |0             |1             |2           
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |r9|QWORD[.]   <||@
  Comment 1045 block B80 null  <||@
  Comment 1045 556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1045 558 MOV [r15|QWORD + 1156] y: -37403 size: DWORD  <||@
  Comment 1056 560 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1067 562 DEOPT info [bci:48]  <||@
  Comment 1067 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1072 [r9:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1593) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2           
     locals:  |r10|QWORD[.]  |-  |r9|QWORD[.]   <||@
  Comment 1085 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 1110 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 1138 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1143 [rdx:0, r10:0]at java.util.HashMap$HashIterator.<init>(HashMap.java:1587) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |r10|QWORD[.]  |Object[null]  |-   <||@
  Comment 1151 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1151 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1157 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 1157 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
