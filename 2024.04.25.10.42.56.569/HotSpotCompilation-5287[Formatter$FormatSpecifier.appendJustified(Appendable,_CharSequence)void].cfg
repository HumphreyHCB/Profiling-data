begin_compilation
  name " HotSpotCompilation-5287[java.util.Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)]"
  method "HotSpotCompilation-5287[java.util.Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)]"
  date 1714038239362
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1126 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i1126  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.Formatter$FormatSpecifier
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1171 v1186 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1126 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FormatSpecifier.width
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
lastLocationAccess: - 
=== Succesors ===
next: v10 
=== Usages ===
v7 ?24 i25 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1171 lastLocationAccess: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1126 
y: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1126 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?247 ?343 ?265 ?24 ?102 ?105 ?35 v1189 v542 ?358 v1185 v1174 v1180 v545 ?182 ?323 ?126 v517 ?208 v1172 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1148 i1156 i1160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1118 v1124 v1125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 4]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 22]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i39 v480 v416 v289 v478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 21]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 i18 v19 v164 v229 j300 i308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1135 i1139 i1145 i1154 i1163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a1133 a1140 a1150 a1161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1189 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1130 v1147 v1159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.Appendable
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1188 ?751 ?24 ?760 ?105 ?35 v542 j1049 ?355 ?358 ?316 ?126 ?314 ?755 v1175 ?182 v444 v1176 ?313 ?265 ?756 ?208 v1184 ?753 ?753 v445 v1177 v511 ?754 ?755 ?247 j927 v519 ?323 ?750 ?750 ?327 ?102 ?757 v545 ?343 ?759 v538 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1127 v1165 v1166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3194
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v767 v1127 v1159 i1129 v1130 i1162 i1134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 5]
profileData: PROFILED designatedSuccessorProbability: 0.9485652393632811
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
i1126 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v9 #falseSuccessor: v8  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-94219|0xfffffffffffe8ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1188 
lastLocationAccess: - 
=== Succesors ===
next: v123 
=== Usages ===
v851 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1188 lastLocationAccess: - #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1127 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1127  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}]
keySuccessors: [I@39bb8bb5
keys: [HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/io/PrintStream;, resolved>]
profileData: PROFILED keyProbabilities: [0.987143010065966, 0.012856989934033987, 0.0]
stamp: void
=== Inputs ===
value: v851 
=== Succesors ===
successors: v111 v116 v119 
=== Usages ===
=== Predecessor ===
v1127 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v851 #successors: v111 v116 v119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a1128 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1128 a1142 v450 v516 j880 j1007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1128 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
lastLocationAccess: - 
=== Succesors ===
next: i1129 
=== Usages ===
a456 v1181 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1176 lastLocationAccess: - #next: i1129  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1128 
=== Succesors ===
=== Usages ===
i1129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1129 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-156171|0xfffffffffffd9df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1181 
lastLocationAccess: - 
=== Succesors ===
next: v1130 
=== Usages ===
i162 
=== Predecessor ===
a1128 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1181 lastLocationAccess: - #next: v1130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-173075|0xfffffffffffd5bed]
deoptSpeculation: long[1300|0x514]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1189 
lastLocationAccess: - 
=== Succesors ===
next: i1131 
=== Usages ===
v1170 
=== Predecessor ===
i1129 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1189 lastLocationAccess: - #next: i1131  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1131 i1138 i1144 i1136 i1149 i1153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1131 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: i1132 
=== Usages ===
i463 
=== Predecessor ===
v1130 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: i1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1132 i1137 i1146 v443 v501 i1155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1132 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
=== Succesors ===
next: v134 
=== Usages ===
i212 i145 
=== Predecessor ===
i1131 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1131 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1131  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1129 
y: i463 
=== Succesors ===
=== Usages ===
i163 i228 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1129 y: i463  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1130 
y: v1169 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1130 y: v1169  <|@  <|@
f <@~|@floating>@ <|@
tid a456 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1128 
=== Succesors ===
=== Usages ===
?755 ?753 v514 a361 v448 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1128  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v978 v1094 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i941 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j942 j1062 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j940 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 140438306553856
stableDimension: 0
stamp: i64 [140438306553856]
stampKind: i64
value: long[140438306553856|0x7fba57600000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j965 v1200 j1084 v1211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j963 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v964 v1083 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j907 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j908 j969 j1031 j1086 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 v1020 v933 v953 v830 v893 j810 j810 j810 j810 v1073 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i916 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 v972 v979 v1039 v1089 v1095 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?320 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3195
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?126 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?320 
values: a2 a3 
=== Succesors ===
=== Usages ===
?316 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?320 values: a2 a3  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?126 
values: a2 
=== Succesors ===
=== Usages ===
?207 ?315 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?126 values: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 13]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.7106877721660849
stamp: void
=== Inputs ===
condition: v1170 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v132 
=== Usages ===
=== Predecessor ===
i1132 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1170 #trueSuccessor: v133 #falseSuccessor: v132  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1133 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1133 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1172 
lastLocationAccess: - 
=== Succesors ===
next: i1134 
=== Usages ===
v1173 
=== Predecessor ===
v133 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1172 lastLocationAccess: - #next: i1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1133 
=== Succesors ===
=== Usages ===
i1134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1134 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-95499|0xfffffffffffe8af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1173 
lastLocationAccess: - 
=== Succesors ===
next: i1135 
=== Usages ===
i222 
=== Predecessor ===
a1133 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1173 lastLocationAccess: - #next: i1135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1135 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
i380 
=== Predecessor ===
i1134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1135 
=== Succesors ===
=== Usages ===
i222 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1135  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1134 
y: i380 
=== Succesors ===
=== Usages ===
i212 i215 ?313 ?247 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1134 y: i380  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i222 
y: i1132 
=== Succesors ===
=== Usages ===
i228 v445 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i222 y: i1132  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i212 
y: i162 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i212 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i228 
y: i16 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i228 y: i16  <|@  <|@
tid ?315 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 626
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?316 
=== Succesors ===
=== Usages ===
?208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?316  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?315 
values: a2 a3 
=== Succesors ===
=== Usages ===
?314 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?315 values: a2 a3  <|@  <|@
tid ?314 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 179
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?208 
values: a2 
=== Succesors ===
=== Usages ===
?313 ?247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?208 values: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9207459892678765
stamp: void
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v231 
falseSuccessor: v230 
=== Usages ===
=== Predecessor ===
i1135 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v231 #falseSuccessor: v230  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i234 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i234  <|@  <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a2 i212 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i212  <|@  <|@
tid ?247 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 587
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?314 
values: a2 a3 i222 
=== Succesors ===
=== Usages ===
?755 ?756 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?314 values: a2 a3 i222  <|@  <|@
tid ?755 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 243
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?247 
values: a2 a456 a2 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?247 values: a2 a456 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i234 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v445 
stateDuring: ?755 
=== Succesors ===
next: i1136 
=== Usages ===
i237 
=== Predecessor ===
v230 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v445 stateDuring: ?755 #next: i1136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1136 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: a239 
=== Usages ===
i447 
=== Predecessor ===
i234 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: a239  <|@  <|@
f <@~|@floating>@ <|@
tid i447 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1136 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1136  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i234 
y: i447 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i234 y: i447  <|@  <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a456 i237 
=== Succesors ===
=== Usages ===
a239 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a456 i237  <|@  <|@
tid ?756 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 242
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?247 
values: a2 
=== Succesors ===
=== Usages ===
a239 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?247 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a239 <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v448 
stateDuring: ?756 
=== Succesors ===
next: v923 
=== Usages ===
a926 a449 
=== Predecessor ===
i1136 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v448 stateDuring: ?756 #next: v923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j879 
=== Usages ===
=== Predecessor ===
a239 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j879 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j880 
=== Usages ===
v1192 v1194 v1195 
=== Predecessor ===
v923 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j880 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1176 
=== Succesors ===
next: i909 
=== Usages ===
v1193 
=== Predecessor ===
j879 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1176 #next: i909  <|@  <|@
f <@~|@floating>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j879 
index: - 
=== Succesors ===
=== Usages ===
i909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j879 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i909 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1192 
lastLocationAccess: - 
=== Succesors ===
next: v884 
=== Usages ===
v917 
=== Predecessor ===
j880 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1192 lastLocationAccess: - #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i909 
y: i916 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i909 y: i916  <|@  <|@
f <@*|@fixed>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v917 
=== Succesors ===
trueSuccessor: v883 
falseSuccessor: v882 
=== Usages ===
=== Predecessor ===
i909 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v917 #trueSuccessor: v883 #falseSuccessor: v882  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v887  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
v883 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a910 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a910  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j880 
index: - 
=== Succesors ===
=== Usages ===
a910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a910 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1193 
lastLocationAccess: - 
=== Succesors ===
next: v891 
=== Usages ===
a911 v918 
=== Predecessor ===
v882 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1193 lastLocationAccess: - #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a910 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a910  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v918 
=== Succesors ===
trueSuccessor: v890 
falseSuccessor: v886 
=== Usages ===
=== Predecessor ===
a910 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v918 #trueSuccessor: v890 #falseSuccessor: v886  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
v890 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j912 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j912  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j879 
index: - 
=== Succesors ===
=== Usages ===
j912 v915 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j879 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j912 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1194 
lastLocationAccess: - 
=== Succesors ===
next: v896 
=== Usages ===
v893 j908 v1196 
=== Predecessor ===
v886 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1194 lastLocationAccess: - #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j912 
y: j764 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j912 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid a911 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a910 
=== Succesors ===
=== Usages ===
j898 v901 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a910  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v893 
=== Succesors ===
trueSuccessor: v895 
falseSuccessor: v894 
=== Usages ===
=== Predecessor ===
j912 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v893 #trueSuccessor: v895 #falseSuccessor: v894  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a911 
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a911 #next: v902  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j913 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j913  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j879 
index: - 
=== Succesors ===
=== Usages ===
j913 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j879 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j913 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1195 
lastLocationAccess: - 
=== Succesors ===
next: j898 
=== Usages ===
v1196 
=== Predecessor ===
v894 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1195 lastLocationAccess: - #next: j898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a911 
=== Succesors ===
next: v914 
=== Usages ===
v914 
=== Predecessor ===
j913 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a911 #next: v914  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j913 
index: j912 
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j913 index: j912  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1196 
lastLocationAccess: - 
value: j898 
stateAfter: - 
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
j898 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1196 lastLocationAccess: - value: j898 stateAfter: - #next: v915  <|@  <|@
f <@~|@floating>@ <|@
tid j908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j912 
y: j907 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j912 y: j907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1194 
lastLocationAccess: - 
value: j908 
stateAfter: - 
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1194 lastLocationAccess: - value: j908 stateAfter: - #next: v900  <|@  <|@
f <@*|@fixed>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
v915 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v887 v889 v900 v902 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v887 v889 v900 v902 #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid a449 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a239 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
lastLocationAccess: - 
value: a449 
stateAfter: - 
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1176 lastLocationAccess: - value: a449 stateAfter: - #next: v985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j925 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j925 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a926 
=== Usages ===
v1197 v1198 
=== Predecessor ===
v985 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: a# byte[]
=== Inputs ===
object: a239 
=== Succesors ===
next: j927 
=== Usages ===
j928 
=== Predecessor ===
j925 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a239 #next: j927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: j928 
=== Usages ===
j929 j942 
=== Predecessor ===
a926 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a2 #next: j928  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a926 
=== Succesors ===
next: v932 
=== Usages ===
j929 v933 
=== Predecessor ===
j927 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a926 #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid j929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j927 
y: j928 
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j927 y: j928  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
x: j929 
y: j963 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j929 y: j963  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v964 
=== Succesors ===
trueSuccessor: v931 
falseSuccessor: v930 
=== Usages ===
=== Predecessor ===
j928 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v964 #trueSuccessor: v931 #falseSuccessor: v930  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v931 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j928 
y: j764 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j928 y: j764  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v933 
=== Succesors ===
trueSuccessor: v938 
falseSuccessor: v934 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v933 #trueSuccessor: v938 #falseSuccessor: v934  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1116 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1116  <|@  <|@
f <@*|@fixed>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v938 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i970 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i970  <|@  <|@
f <@~|@floating>@ <|@
tid j942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j927 
y: i941 
=== Succesors ===
=== Usages ===
j965 v1200 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j927 y: i941  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j942 
index: j940 
=== Succesors ===
=== Usages ===
i970 i971 v972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j942 index: j940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i970 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1200 
lastLocationAccess: - 
=== Succesors ===
next: v946 
=== Usages ===
v978 
=== Predecessor ===
v934 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1200 lastLocationAccess: - #next: v946  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i970 
y: i977 
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i970 y: i977  <|@  <|@
f <@*|@fixed>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v978 
=== Succesors ===
trueSuccessor: v945 
falseSuccessor: v943 
=== Usages ===
=== Predecessor ===
i970 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v978 #trueSuccessor: v945 #falseSuccessor: v943  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1115  <|@  <|@
f <@*|@fixed>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v945 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i971 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i971 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1200 
lastLocationAccess: - 
=== Succesors ===
next: v951 
=== Usages ===
v979 
=== Predecessor ===
v947 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1200 lastLocationAccess: - #next: v951  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i971 
y: i916 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i971 y: i916  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v979 
=== Succesors ===
trueSuccessor: v950 
falseSuccessor: v948 
=== Usages ===
=== Predecessor ===
i971 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v979 #trueSuccessor: v950 #falseSuccessor: v948  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1114 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1114  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v950 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1200 
lastLocationAccess: - 
value: i916 
stateAfter: - 
=== Succesors ===
next: j973 
=== Usages ===
=== Predecessor ===
v948 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1200 lastLocationAccess: - value: i916 stateAfter: - #next: j973  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j925 
index: - 
=== Succesors ===
=== Usages ===
j973 v976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j973 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
=== Succesors ===
next: v956 
=== Usages ===
v953 j969 v1199 
=== Predecessor ===
v972 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j973 
y: j764 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j973 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid j965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j942 
y: j940 
=== Succesors ===
=== Usages ===
v960 v975 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j942 y: j940  <|@  <|@
f <@*|@fixed>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v953 
=== Succesors ===
trueSuccessor: v955 
falseSuccessor: v954 
=== Usages ===
=== Predecessor ===
j973 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v953 #trueSuccessor: v955 #falseSuccessor: v954  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j965 
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j965 #next: v1112  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v960 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j974 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j974  <|@  <|@
f <@~|@floating>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j925 
index: - 
=== Succesors ===
=== Usages ===
j974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j974 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1198 
lastLocationAccess: - 
=== Succesors ===
next: v975 
=== Usages ===
v1199 
=== Predecessor ===
v954 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1198 lastLocationAccess: - #next: v975  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j974 
index: j973 
=== Succesors ===
=== Usages ===
v975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j974 index: j973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1199 
lastLocationAccess: - 
value: j965 
stateAfter: - 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
j974 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1199 lastLocationAccess: - value: j965 stateAfter: - #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid j969 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j973 
y: j907 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j973 y: j907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
value: j969 
stateAfter: - 
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - value: j969 stateAfter: - #next: v1113  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v243 v245 v1112 v1113 v1114 v1115 v1116 
=== Succesors ===
next: i1137 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v243 v245 v1112 v1113 v1114 v1115 v1116 #next: i1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1137 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
=== Succesors ===
next: i1138 
=== Usages ===
?265 i273 j1168 v289 i294 
=== Predecessor ===
v244 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - #next: i1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1138 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 7]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: i1139 
=== Usages ===
v546 
=== Predecessor ===
i1137 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: i1139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1139 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 11]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v254 
=== Usages ===
v546 
=== Predecessor ===
i1138 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1138 
y: i1139 
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1138 y: i1139  <|@  <|@
tid ?313 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 588
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?314 
values: a2 - i222 
=== Succesors ===
=== Usages ===
?265 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?314 values: a2 - i222  <|@  <|@
tid ?265 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.putStringAt(int, String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1750
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?313 
values: a2 i1137 a3 
=== Succesors ===
=== Usages ===
?758 ?261 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?313 values: a2 i1137 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9789707094128564
stamp: void
=== Inputs ===
condition: v546 
=== Succesors ===
trueSuccessor: v253 
falseSuccessor: v252 
=== Usages ===
=== Predecessor ===
i1139 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v546 #trueSuccessor: v253 #falseSuccessor: v252  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 17]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v256  <|@  <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.inflate()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?758 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1734
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?265 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
bci: 18
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: void
targetMethod: Direct#AbstractStringBuilder.inflate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v444 
stateDuring: ?758 
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v444 stateDuring: ?758 #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v256 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v258 v260 
=== Succesors ===
next: a1140 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v258 v260 #next: a1140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1140 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1172 
lastLocationAccess: - 
=== Succesors ===
next: i1141 
=== Usages ===
a406 v1178 
=== Predecessor ===
v259 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1172 lastLocationAccess: - #next: i1141  <|@  <|@
tid ?261 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1736
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?265 
=== Succesors ===
=== Usages ===
v830 i1141 i1143 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?265  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1140 
=== Succesors ===
=== Usages ===
i1141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1141 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-105483|0xfffffffffffe63f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?261 
guard: - 
address: v1178 
lastLocationAccess: - 
=== Succesors ===
next: a1142 
=== Usages ===
i424 j873 v302 i294 
=== Predecessor ===
a1140 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?261 guard: - address: v1178 lastLocationAccess: - #next: a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1142 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
lastLocationAccess: - 
=== Succesors ===
next: i1143 
=== Usages ===
a400 v1179 
=== Predecessor ===
i1141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1176 lastLocationAccess: - #next: i1143  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1142 
=== Succesors ===
=== Usages ===
i1143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1143 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-156427|0xfffffffffffd9cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?261 
guard: - 
address: v1179 
lastLocationAccess: - 
=== Succesors ===
next: i1144 
=== Usages ===
i308 i424 
=== Predecessor ===
a1142 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?261 guard: - address: v1179 lastLocationAccess: - #next: i1144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1144 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: i1145 
=== Usages ===
i402 v548 
=== Predecessor ===
i1143 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: i1145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1145 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.getBytes(String.java:4725) [bci: 1]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v271 
=== Usages ===
v548 
=== Predecessor ===
i1144 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1144 
y: i1145 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1144 y: i1145  <|@  <|@
f <@~|@floating>@ <|@
tid a400 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1142 
=== Succesors ===
=== Usages ===
j877 j868 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1142  <|@  <|@
f <@~|@floating>@ <|@
tid a406 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1140 
=== Succesors ===
=== Usages ===
j864 j875 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1140  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9804899170307357
stamp: void
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
i1145 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v270 #falseSuccessor: v269  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1144 
=== Succesors ===
=== Usages ===
i273 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1144  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 16]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1137 
y: i402 
=== Succesors ===
=== Usages ===
v1191 v416 v425 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i1137 y: i402  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i20 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i273 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v416 
=== Succesors ===
trueSuccessor: v694 
falseSuccessor: v695 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v416 #trueSuccessor: v694 #falseSuccessor: v695  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid i834 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -177433
stableDimension: 0
stamp: i32 [-177433]
stampKind: i32
value: int[-177433|0xfffffffffffd4ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v694 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1143 
y: i1141 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i1143 y: i1141  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i273 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i424 y: i273  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v702 
falseSuccessor: v703 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v702 #falseSuccessor: v703  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v841  <|@  <|@
f <@~|@floating>@ <|@
tid i842 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -179481
stableDimension: 0
stamp: i32 [-179481]
stampKind: i32
value: int[-179481|0xfffffffffffd42e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v702 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j864 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j864 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a406 
=== Succesors ===
next: j868 
=== Usages ===
v1190 
=== Predecessor ===
v703 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a406 #next: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a400 
=== Succesors ===
next: v874 
=== Usages ===
v1191 
=== Predecessor ===
j864 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a400 #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j868 
index: i273 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j868 index: i273  <|@  <|@
f <@~|@floating>@ <|@
tid j873 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1141 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1190 v1191 j873 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
j868 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1190 v1191 j873 #next: v304  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1137 
y: i20 
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1137 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v289 
=== Succesors ===
trueSuccessor: v706 
falseSuccessor: v707 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v289 #trueSuccessor: v706 #falseSuccessor: v707  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@~|@floating>@ <|@
tid i836 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -180505
stableDimension: 0
stamp: i32 [-180505]
stampKind: i32
value: int[-180505|0xfffffffffffd3ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v706 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1143 
y: i16 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1143 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1137 
y: i1141 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1137 y: i1141  <|@  <|@
f <@~|@floating>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i308 
y: i294 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i308 y: i294  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v295 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v295 #trueSuccessor: v710 #falseSuccessor: v711  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid i840 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -181529
stableDimension: 0
stamp: i32 [-181529]
stampKind: i32
value: int[-181529|0xfffffffffffd3ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v710 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-181529 - -177433] bits:1...1010xxxxx1011100111
valueDescription: i32
=== Inputs ===
merge: v825 
values: i834 i836 i840 i842 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v825 values: i834 i836 i840 i842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v833 v835 v839 v841 
=== Succesors ===
next: v830 
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v833 v835 v839 v841 #next: v830  <|@  <|@
f <@*|@fixed>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?261 
actionAndReason: i828 
speculation: j764 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?261 actionAndReason: i828 speculation: j764  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j875 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a406 
=== Succesors ===
next: j877 
=== Usages ===
j876 
=== Predecessor ===
v711 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a406 #next: j877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a400 
=== Succesors ===
next: v302 
=== Usages ===
j878 
=== Predecessor ===
j875 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a400 #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid j297 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j876 j309 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j876 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j875 
y: j297 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j875 y: j297  <|@  <|@
f <@~|@floating>@ <|@
tid j1168 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1137 
=== Succesors ===
=== Usages ===
j300 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1137  <|@  <|@
f <@~|@floating>@ <|@
tid j300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j1168 
y: i16 
=== Succesors ===
=== Usages ===
j309 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j1168 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j300 
y: j297 
=== Succesors ===
=== Usages ===
j878 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j300 y: j297  <|@  <|@
f <@~|@floating>@ <|@
tid j878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j309 
y: j877 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j309 y: j877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j876 
dst: j878 
len: i1141 
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
j877 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j876 dst: j878 len: i1141 #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v302 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v304 v306 
=== Succesors ===
next: i1146 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v304 v306 #next: i1146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1146 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
=== Succesors ===
next: v443 
=== Usages ===
i215 
=== Predecessor ===
v305 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 39]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i222 
y: i1146 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i222 y: i1146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 40]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
value: i215 
stateAfter: - 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
i1146 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - value: i215 stateAfter: - #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1189 
lastLocationAccess: - 
=== Succesors ===
next: v635 
=== Usages ===
v1118 
=== Predecessor ===
v132 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1189 lastLocationAccess: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1147 
y: v1117 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1147 y: v1117  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1118 
=== Succesors ===
trueSuccessor: v632 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1118 #trueSuccessor: v632 #falseSuccessor: v634  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1148 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1148 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:610) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
=== Succesors ===
next: v167 
=== Usages ===
i145 i150 ?182 
=== Predecessor ===
v632 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - #next: v167  <|@  <|@
tid ?207 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 629
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?316 
=== Succesors ===
=== Usages ===
?182 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?316  <|@  <|@
tid ?182 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(AbstractStringBuilder)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 611
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?207 
values: a2 a3 i1148 
=== Succesors ===
=== Usages ===
?181 ?753 ?754 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?207 values: a2 a3 i1148  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1132 
y: i1148 
=== Succesors ===
=== Usages ===
i163 v511 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1132 y: i1148  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i145 
y: i162 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i145 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i16 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i163 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9207459892678765
stamp: void
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v166 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
i1148 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v166 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v178  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v166 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i169 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i169  <|@  <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a2 i145 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i145  <|@  <|@
tid ?753 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 243
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?182 
values: a2 a456 a2 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?182 values: a2 a456 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i169 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v511 
stateDuring: ?753 
=== Succesors ===
next: i1149 
=== Usages ===
i172 
=== Predecessor ===
v165 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v511 stateDuring: ?753 #next: i1149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1149 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: a174 
=== Usages ===
i513 
=== Predecessor ===
i169 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: a174  <|@  <|@
f <@~|@floating>@ <|@
tid i513 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1149 
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1149  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i169 
y: i513 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i169 y: i513  <|@  <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a456 i172 
=== Succesors ===
=== Usages ===
a174 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a456 i172  <|@  <|@
tid ?754 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 242
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?182 
values: a2 
=== Succesors ===
=== Usages ===
a174 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?182 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a174 <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v514 
stateDuring: ?754 
=== Succesors ===
next: v1045 
=== Usages ===
a361 a515 a361 a361 a1048 a361 a361 a361 
=== Predecessor ===
i1149 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v514 stateDuring: ?754 #next: v1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1006 
=== Usages ===
=== Predecessor ===
a174 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1006 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1007 
=== Usages ===
v1203 v1205 v1206 
=== Predecessor ===
v1045 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1007 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1176 
=== Succesors ===
next: i1032 
=== Usages ===
v1204 
=== Predecessor ===
j1006 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1176 #next: i1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1006 
index: - 
=== Succesors ===
=== Usages ===
i1032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1006 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1032 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1203 
lastLocationAccess: - 
=== Succesors ===
next: v1011 
=== Usages ===
v1039 
=== Predecessor ===
j1007 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1203 lastLocationAccess: - #next: v1011  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1032 
y: i916 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1032 y: i916  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1039 
=== Succesors ===
trueSuccessor: v1010 
falseSuccessor: v1009 
=== Usages ===
=== Predecessor ===
i1032 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1039 #trueSuccessor: v1010 #falseSuccessor: v1009  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
v1011 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
v1010 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1033 
=== Usages ===
=== Predecessor ===
v1011 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1033  <|@  <|@
f <@~|@floating>@ <|@
tid v1204 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1007 
index: - 
=== Succesors ===
=== Usages ===
a1033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1007 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1033 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1204 
lastLocationAccess: - 
=== Succesors ===
next: v1018 
=== Usages ===
a1034 v1040 
=== Predecessor ===
v1009 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1204 lastLocationAccess: - #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1033 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1033  <|@  <|@
f <@*|@fixed>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1040 
=== Succesors ===
trueSuccessor: v1017 
falseSuccessor: v1013 
=== Usages ===
=== Predecessor ===
a1033 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1040 #trueSuccessor: v1017 #falseSuccessor: v1013  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1016  <|@  <|@
f <@*|@fixed>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
v1017 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1035 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1035  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1006 
index: - 
=== Succesors ===
=== Usages ===
j1035 v1038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1006 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1035 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1205 
lastLocationAccess: - 
=== Succesors ===
next: v1023 
=== Usages ===
v1020 j1031 v1207 
=== Predecessor ===
v1013 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1205 lastLocationAccess: - #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1035 
y: j764 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1035 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid a1034 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1033 
=== Succesors ===
=== Usages ===
j1025 v1028 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1033  <|@  <|@
f <@*|@fixed>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1020 
=== Succesors ===
trueSuccessor: v1022 
falseSuccessor: v1021 
=== Usages ===
=== Predecessor ===
j1035 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1020 #trueSuccessor: v1022 #falseSuccessor: v1021  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1034 
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1034 #next: v1029  <|@  <|@
f <@*|@fixed>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
v1028 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1036 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1036  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1006 
index: - 
=== Succesors ===
=== Usages ===
j1036 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1006 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1036 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1206 
lastLocationAccess: - 
=== Succesors ===
next: j1025 
=== Usages ===
v1207 
=== Predecessor ===
v1021 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1206 lastLocationAccess: - #next: j1025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1034 
=== Succesors ===
next: v1037 
=== Usages ===
v1037 
=== Predecessor ===
j1036 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1034 #next: v1037  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1036 
index: j1035 
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1036 index: j1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1207 
lastLocationAccess: - 
value: j1025 
stateAfter: - 
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
j1025 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1207 lastLocationAccess: - value: j1025 stateAfter: - #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid j1031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1035 
y: j907 
=== Succesors ===
=== Usages ===
v1038 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1035 y: j907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1205 
lastLocationAccess: - 
value: j1031 
stateAfter: - 
=== Succesors ===
next: v1027 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1205 lastLocationAccess: - value: j1031 stateAfter: - #next: v1027  <|@  <|@
f <@*|@fixed>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1014 v1016 v1027 v1029 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1014 v1016 v1027 v1029 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid a515 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a174 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
lastLocationAccess: - 
value: a515 
stateAfter: - 
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1176 lastLocationAccess: - value: a515 stateAfter: - #next: v1101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1047 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1047  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1047 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1048 
=== Usages ===
v1208 v1209 
=== Predecessor ===
v1101 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a1048  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1048 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: a# byte[]
=== Inputs ===
object: a174 
=== Succesors ===
next: j1049 
=== Usages ===
j1050 
=== Predecessor ===
j1047 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a174 #next: j1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: j1050 
=== Usages ===
j1051 j1062 
=== Predecessor ===
a1048 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a2 #next: j1050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1048 
=== Succesors ===
next: v1054 
=== Usages ===
j1051 v1055 
=== Predecessor ===
j1049 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1048 #next: v1054  <|@  <|@
f <@~|@floating>@ <|@
tid j1051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1049 
y: j1050 
=== Succesors ===
=== Usages ===
v1083 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j1049 y: j1050  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
x: j1051 
y: j963 
=== Succesors ===
=== Usages ===
v1054 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j1051 y: j963  <|@  <|@
f <@*|@fixed>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1083 
=== Succesors ===
trueSuccessor: v1053 
falseSuccessor: v1052 
=== Usages ===
=== Predecessor ===
j1050 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1083 #trueSuccessor: v1053 #falseSuccessor: v1052  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v1054 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v1053 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1061 
=== Usages ===
=== Predecessor ===
v1054 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1050 
y: j764 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1050 y: j764  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1055 
=== Succesors ===
trueSuccessor: v1060 
falseSuccessor: v1056 
=== Usages ===
=== Predecessor ===
v1052 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1055 #trueSuccessor: v1060 #falseSuccessor: v1056  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1123 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v1060 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1087 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1087  <|@  <|@
f <@~|@floating>@ <|@
tid j1062 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1049 
y: i941 
=== Succesors ===
=== Usages ===
j1084 v1211 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1049 y: i941  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1062 
index: j940 
=== Succesors ===
=== Usages ===
i1087 i1088 v1089 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1062 index: j940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1087 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1211 
lastLocationAccess: - 
=== Succesors ===
next: v1066 
=== Usages ===
v1094 
=== Predecessor ===
v1056 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1211 lastLocationAccess: - #next: v1066  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1087 
y: i977 
=== Succesors ===
=== Usages ===
v1066 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1087 y: i977  <|@  <|@
f <@*|@fixed>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1094 
=== Succesors ===
trueSuccessor: v1065 
falseSuccessor: v1063 
=== Usages ===
=== Predecessor ===
i1087 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1094 #trueSuccessor: v1065 #falseSuccessor: v1063  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1122 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1122  <|@  <|@
f <@*|@fixed>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v1065 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1088 
=== Usages ===
=== Predecessor ===
v1063 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1088 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1211 
lastLocationAccess: - 
=== Succesors ===
next: v1071 
=== Usages ===
v1095 
=== Predecessor ===
v1067 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1211 lastLocationAccess: - #next: v1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1088 
y: i916 
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1088 y: i916  <|@  <|@
f <@*|@fixed>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1095 
=== Succesors ===
trueSuccessor: v1070 
falseSuccessor: v1068 
=== Usages ===
=== Predecessor ===
i1088 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1095 #trueSuccessor: v1070 #falseSuccessor: v1068  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1121 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v1070 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1089 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1211 
lastLocationAccess: - 
value: i916 
stateAfter: - 
=== Succesors ===
next: j1090 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1211 lastLocationAccess: - value: i916 stateAfter: - #next: j1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j1047 
index: - 
=== Succesors ===
=== Usages ===
j1090 v1093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1047 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1090 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1208 
lastLocationAccess: - 
=== Succesors ===
next: v1076 
=== Usages ===
v1073 j1086 v1210 
=== Predecessor ===
v1089 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1208 lastLocationAccess: - #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1090 
y: j764 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1090 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid j1084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1062 
y: j940 
=== Succesors ===
=== Usages ===
v1080 v1092 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1062 y: j940  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1073 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1074 
=== Usages ===
=== Predecessor ===
j1090 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1073 #trueSuccessor: v1075 #falseSuccessor: v1074  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1084 
=== Succesors ===
next: v1119 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1084 #next: v1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1091 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1091  <|@  <|@
f <@~|@floating>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j1047 
index: - 
=== Succesors ===
=== Usages ===
j1091 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1047 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1091 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1209 
lastLocationAccess: - 
=== Succesors ===
next: v1092 
=== Usages ===
v1210 
=== Predecessor ===
v1074 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1209 lastLocationAccess: - #next: v1092  <|@  <|@
f <@~|@floating>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1091 
index: j1090 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1091 index: j1090  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1210 
lastLocationAccess: - 
value: j1084 
stateAfter: - 
=== Succesors ===
next: v1093 
=== Usages ===
=== Predecessor ===
j1091 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1210 lastLocationAccess: - value: j1084 stateAfter: - #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid j1086 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1090 
y: j907 
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1090 y: j907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1208 
lastLocationAccess: - 
value: j1086 
stateAfter: - 
=== Succesors ===
next: v1120 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1208 lastLocationAccess: - value: j1086 stateAfter: - #next: v1120  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v179 
values: a456 a174 a174 a174 a174 a174 a174 
=== Succesors ===
=== Usages ===
v1183 j999 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v179 values: a456 a174 a174 a174 a174 a174 a174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v178 v180 v1119 v1120 v1121 v1122 v1123 
=== Succesors ===
next: a1150 
=== Usages ===
a361 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v178 v180 v1119 v1120 v1121 v1122 v1123 #next: a1150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1150 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1172 
lastLocationAccess: - 
=== Succesors ===
next: i1151 
=== Usages ===
a472 v1182 
=== Predecessor ===
v179 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1172 lastLocationAccess: - #next: i1151  <|@  <|@
tid ?181 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?182 
=== Succesors ===
=== Usages ===
v811 i1151 i1152 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?182  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1150 
=== Succesors ===
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1151 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-121355|0xfffffffffffe25f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?181 
guard: - 
address: v1182 
lastLocationAccess: - 
=== Succesors ===
next: i1152 
=== Usages ===
v555 
=== Predecessor ===
a1150 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?181 guard: - address: v1182 lastLocationAccess: - #next: i1152  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a361 
index: - 
=== Succesors ===
=== Usages ===
i1152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1152 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-121611|0xfffffffffffe24f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 175]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?181 
guard: - 
address: v1183 
lastLocationAccess: - 
=== Succesors ===
next: i1153 
=== Usages ===
i486 
=== Predecessor ===
i1151 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?181 guard: - address: v1183 lastLocationAccess: - #next: i1153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1153 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: i1154 
=== Usages ===
i465 v551 
=== Predecessor ===
i1152 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: i1154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1154 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getCoder(AbstractStringBuilder.java:1689) [bci: 7]
at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v728 
=== Usages ===
v551 
=== Predecessor ===
i1153 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v728  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1153 
y: i1154 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1153 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v551 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v727 
=== Usages ===
=== Predecessor ===
i1154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v551 #trueSuccessor: v726 #falseSuccessor: v727  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1742) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1155 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1155 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
=== Succesors ===
next: v732 
=== Usages ===
i191 i150 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - #next: v732  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1153 
=== Succesors ===
=== Usages ===
i193 i191 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1153  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 16]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1155 
y: i465 
=== Succesors ===
=== Usages ===
v1202 v478 v487 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i1155 y: i465  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i191 
y: i20 
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i191 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v478 
=== Succesors ===
trueSuccessor: v730 
falseSuccessor: v731 
=== Usages ===
=== Predecessor ===
i1155 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v478 #trueSuccessor: v730 #falseSuccessor: v731  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v732 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@~|@floating>@ <|@
tid i815 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -186649
stableDimension: 0
stamp: i32 [-186649]
stampKind: i32
value: int[-186649|0xfffffffffffd26e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
v730 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1156 
=== Usages ===
=== Predecessor ===
v732 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1156 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 18]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
=== Succesors ===
next: v736 
=== Usages ===
i193 
=== Predecessor ===
v731 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1156 
y: i465 
=== Succesors ===
=== Usages ===
j1004 v480 v555 i486 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i1156 y: i465  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i20 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i193 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v734 
falseSuccessor: v735 
=== Usages ===
=== Predecessor ===
i1156 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v734 #falseSuccessor: v735  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -187673
stableDimension: 0
stamp: i32 [-187673]
stampKind: i32
value: int[-187673|0xfffffffffffd22e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1151 
y: i193 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1151 y: i193  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v738 
falseSuccessor: v739 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v738 #falseSuccessor: v739  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v821  <|@  <|@
f <@~|@floating>@ <|@
tid i822 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -188697
stableDimension: 0
stamp: i32 [-188697]
stampKind: i32
value: int[-188697|0xfffffffffffd1ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
v738 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1152 
y: i193 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i1152 y: i193  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i486 
y: i191 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i486 y: i191  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v742 
falseSuccessor: v743 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v742 #falseSuccessor: v743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v823 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v823  <|@  <|@
f <@~|@floating>@ <|@
tid i824 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -189721
stableDimension: 0
stamp: i32 [-189721]
stampKind: i32
value: int[-189721|0xfffffffffffd1ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
v742 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j997 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j997  <|@  <|@
f <@~|@floating>@ <|@
tid a472 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1150 
=== Succesors ===
=== Usages ===
j997 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a472 
=== Succesors ===
next: j999 
=== Usages ===
v1201 
=== Predecessor ===
v743 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a472 #next: j999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a361 
=== Succesors ===
next: v1005 
=== Usages ===
v1202 
=== Predecessor ===
j997 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a361 #next: v1005  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j997 
index: - 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j997 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j999 
index: i191 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j999 index: i191  <|@  <|@
f <@~|@floating>@ <|@
tid j1004 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i193 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1201 v1202 j1004 
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
j999 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1201 v1202 j1004 #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 51]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1148 
y: i1155 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1148 y: i1155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 52]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
value: i150 
stateAfter: - 
=== Succesors ===
next: i1157 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - value: i150 stateAfter: - #next: i1157  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1157 v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1157 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1184 
lastLocationAccess: - 
=== Succesors ===
next: i1158 
=== Usages ===
i505 
=== Predecessor ===
v501 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1184 lastLocationAccess: - #next: i1158  <|@  <|@
f <@~|@floating>@ <|@
tid v1185 <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1158 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1185 
lastLocationAccess: - 
=== Succesors ===
next: v510 
=== Usages ===
i508 
=== Predecessor ===
i1157 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1185 lastLocationAccess: - #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i1157 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1157  <|@  <|@
f <@~|@floating>@ <|@
tid i508 <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i1158 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1158  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 64]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i505 
y: i508 
=== Succesors ===
=== Usages ===
i509 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i505 y: i508  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 8
stamp: i8 [0 - 1] bits:0000000x
=== Inputs ===
value: i155 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.maybeLatin1
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1184 
lastLocationAccess: - 
value: i509 
stateAfter: - 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
i1158 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1184 lastLocationAccess: - value: i509 stateAfter: - #next: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i817 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -185619
stableDimension: 0
stamp: i32 [-185619]
stampKind: i32
value: int[-185619|0xfffffffffffd2aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
v727 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-189721 - -185619] bits:1...10100xxxx101110x1x1
valueDescription: i32
=== Inputs ===
merge: v806 
values: i815 i817 i820 i822 i824 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v806 values: i815 i817 i820 i822 i824  <|@  <|@
f <@~|@floating>@ <|@
tid j810 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 5780] bits:0...0x0xx0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v806 
values: j764 j818 j764 j764 j764 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v806 values: j764 j818 j764 j764 j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v814 v816 v819 v821 v823 
=== Succesors ===
next: v811 
=== Usages ===
i809 j810 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v814 v816 v819 v821 v823 #next: v811  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?181 
actionAndReason: i809 
speculation: j810 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?181 actionAndReason: i809 speculation: j810  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v784  <|@  <|@
f <@~|@floating>@ <|@
tid j786 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i785 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -115507
stableDimension: 0
stamp: i32 [-115507]
stampKind: i32
value: int[-115507|0xfffffffffffe3ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a322 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a322  <|@  <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<String.valueOf(Object)>
=== Inputs ===
arguments: a3 
=== Succesors ===
=== Usages ===
a322 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3  <|@  <|@
tid ?333 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3195
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?323 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: PrintStream.java
sourceLine: 67
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?333 
values: a2 a3 
=== Succesors ===
=== Usages ===
?750 ?327 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a2 a3  <|@  <|@
tid ?750 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?323 
values: a2 a2 
=== Succesors ===
=== Usages ===
a322 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?323 values: a2 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a322 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# java.lang.String
targetMethod: Direct#String.valueOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v517 
stateDuring: ?750 
=== Succesors ===
next: a326 
=== Usages ===
v518 
=== Predecessor ===
v116 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v517 stateDuring: ?750 #next: a326  <|@  <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<String.valueOf(Object)>
=== Inputs ===
arguments: a322 
=== Succesors ===
=== Usages ===
a326 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a322  <|@  <|@
tid ?327 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?323 
values: a2 
=== Succesors ===
=== Usages ===
?751 ?752 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?323 values: a2  <|@  <|@
tid ?751 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?327 
values: a2 
=== Succesors ===
=== Usages ===
a326 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?327 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a326 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# java.lang.String
targetMethod: Direct#String.valueOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v518 
stateDuring: ?751 
=== Succesors ===
next: v330 
=== Usages ===
v519 
=== Predecessor ===
a322 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v518 stateDuring: ?751 #next: v330  <|@  <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/PrintStream;, resolved>, UnresolvedJavaType<Ljava/lang/String;>]
stamp: void
targetMethod: HotSpotMethod<PrintStream.write(String)>
=== Inputs ===
arguments: a2 a326 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a326  <|@  <|@
tid ?752 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?327 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
bci: 5
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v519 
stateDuring: ?752 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
a326 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v519 stateDuring: ?752 #next: v117  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v330 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v117 v334 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v117 v334 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid j774 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i773 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -30259
stableDimension: 0
stamp: i32 [-30259]
stampKind: i32
value: int[-30259|0xffffffffffff89cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1159 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-133643|0xfffffffffffdf5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1189 
lastLocationAccess: - 
=== Succesors ===
next: v82 
=== Usages ===
v1104 
=== Predecessor ===
v8 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1189 lastLocationAccess: - #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1159 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1159  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}]
keySuccessors: [I@779f08fe
keys: [HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/lang/String;, resolved>]
profileData: PROFILED keyProbabilities: [0.8796205061794431, 0.12037949382055685, 0.0]
stamp: void
=== Inputs ===
value: v1104 
=== Succesors ===
successors: v69 v74 v77 
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v1104 #successors: v69 v74 v77  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i1160 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1160 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
=== Succesors ===
next: v70 
=== Usages ===
i65 
=== Predecessor ===
v69 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
i1160 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a1161 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1161 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1172 
lastLocationAccess: - 
=== Succesors ===
next: i1162 
=== Usages ===
v1187 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1172 lastLocationAccess: - #next: i1162  <|@  <|@
f <@~|@floating>@ <|@
tid v1187 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1161 
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1162 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-135435|0xfffffffffffdeef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1187 
lastLocationAccess: - 
=== Succesors ===
next: i1163 
=== Usages ===
i89 
=== Predecessor ===
a1161 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1187 lastLocationAccess: - #next: i1163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1163 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v75 
=== Usages ===
i535 
=== Predecessor ===
i1162 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid i535 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1163 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1163  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1162 
y: i535 
=== Succesors ===
=== Usages ===
i65 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1162 y: i535  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
i1163 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i65 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v64 
values: i1160 i89 
=== Succesors ===
=== Usages ===
?24 i25 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v64 values: i1160 i89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v70 v75 
=== Succesors ===
next: i1164 
=== Usages ===
i65 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v70 v75 #next: i1164  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1164 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FormatSpecifier.flags
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 18]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1186 
lastLocationAccess: - 
=== Succesors ===
next: v28 
=== Usages ===
v19 i18 
=== Predecessor ===
v64 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1186 lastLocationAccess: - #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 22]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i1164 
y: i16 
=== Succesors ===
=== Usages ===
?24 ?105 ?35 ?358 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1164 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 4]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 22]
stamp: void
=== Inputs ===
x: i1164 
y: i16 
=== Succesors ===
=== Usages ===
v28 v55 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i1164 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stamp: i32
=== Inputs ===
x: i1126 
y: i65 
=== Succesors ===
=== Usages ===
?105 ?35 ?358 v41 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i1126 y: i65  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3200) [bci: 40]
profileData: PROFILED designatedSuccessorProbability: 0.8622565683438553
stamp: void
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
i1164 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v27 #falseSuccessor: v26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1165 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1165  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: isub
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
sourceFile: Formatter.java
sourceLine: 3199
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1126 i65 - a2 a3 i18 
=== Succesors ===
=== Usages ===
v1212 v1165 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1126 i65 - a2 a3 i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-139019|0xfffffffffffde0f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?24 
guard: - 
address: v1188 
lastLocationAccess: - 
=== Succesors ===
next: v659 
=== Usages ===
v1124 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?24 guard: - address: v1188 lastLocationAccess: - #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1165 
y: v1117 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1165 y: v1117  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1124 
=== Succesors ===
trueSuccessor: v656 
falseSuccessor: v658 
=== Usages ===
=== Predecessor ===
v1165 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1124 #trueSuccessor: v656 #falseSuccessor: v658  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: a101 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a101  <|@  <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
referencedType: [null]
returnStamp: a java.lang.AbstractStringBuilder
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.append(CharSequence)>
=== Inputs ===
arguments: a2 a3 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a3  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 45
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3201
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i18 i25 
=== Succesors ===
=== Usages ===
?102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i18 i25  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?105 
values: a2 a3 
=== Succesors ===
=== Usages ===
?757 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?105 values: a2 a3  <|@  <|@
tid ?757 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?102 
values: a2 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?102 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a101 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
polymorphic: false
stamp: a java.lang.AbstractStringBuilder
targetMethod: Direct#AbstractStringBuilder.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v545 
stateDuring: ?757 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v545 stateDuring: ?757 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
a101 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 
=== Succesors ===
next: v1166 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 #next: v1166  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 51
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3203
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i18 i25 
=== Succesors ===
=== Usages ===
v1213 v1166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i18 i25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-137227|0xfffffffffffde7f5]
deoptSpeculation: long[9624|0x2598]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?35 
guard: - 
address: v1188 
lastLocationAccess: - 
=== Succesors ===
next: v667 
=== Usages ===
v1125 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?35 guard: - address: v1188 lastLocationAccess: - #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1166 
y: v1117 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1166 y: v1117  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1125 
=== Succesors ===
trueSuccessor: v664 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1125 #trueSuccessor: v664 #falseSuccessor: v666  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 62]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
?355 v538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
referencedType: [null]
returnStamp: a java.lang.AbstractStringBuilder
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<char>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.append(char)>
=== Inputs ===
arguments: a2 i47 
=== Succesors ===
=== Usages ===
a354 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v664 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v38 
values: i20 i51 
=== Succesors ===
=== Usages ===
i51 v41 ?358 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v38 values: i20 i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v37 
=== Succesors ===
next: v46 
=== Usages ===
i39 v43 v52 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v37 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 58]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i25 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i39 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 58]
profileData: PROFILED designatedSuccessorProbability: 0.6776029688895142
stamp: void
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v45 #falseSuccessor: v43  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: a354 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a354  <|@  <|@
tid ?358 <|@
d <@d|@=== Debug Properties ===
bci: 64
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3204
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i18 i25 i39 
=== Succesors ===
=== Usages ===
?355 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i18 i25 i39  <|@  <|@
tid ?355 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?358 
values: a2 i47 
=== Succesors ===
=== Usages ===
?759 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?358 values: a2 i47  <|@  <|@
tid ?759 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 246
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?355 
values: a2 
=== Succesors ===
=== Usages ===
a354 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?355 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a354 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
polymorphic: false
stamp: a java.lang.AbstractStringBuilder
targetMethod: Direct#AbstractStringBuilder.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v538 
stateDuring: ?759 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v538 stateDuring: ?759 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 70]
stamp: i32
=== Inputs ===
x: i39 
y: i16 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i39 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
stamp: void
=== Inputs ===
loopBegin: v38 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a354 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v38  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3206) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v38 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v38 #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3206) [bci: 77]
profileData: PROFILED designatedSuccessorProbability: 0.862252690404634
stamp: void
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v54 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: a342 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a342  <|@  <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
referencedType: [null]
returnStamp: a java.lang.AbstractStringBuilder
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.append(CharSequence)>
=== Inputs ===
arguments: a2 a3 
=== Succesors ===
=== Usages ===
a342 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a3  <|@  <|@
tid ?346 <|@
d <@d|@=== Debug Properties ===
bci: 82
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3207
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?343 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?343 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?346 
values: a2 a3 
=== Succesors ===
=== Usages ===
?760 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?346 values: a2 a3  <|@  <|@
tid ?760 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?343 
values: a2 
=== Succesors ===
=== Usages ===
a342 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?343 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a342 <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
polymorphic: false
stamp: a java.lang.AbstractStringBuilder
targetMethod: Direct#AbstractStringBuilder.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v542 
stateDuring: ?760 
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v542 stateDuring: ?760 #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
a342 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v59 v61 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v59 v61 #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1213 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1213  <|@  <|@
f <@*|@fixed>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 537
mayConvertToGuard: true
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000002898[index: 324, len: 24, hash: 0x2ac35eae]: GuardMovement@2[HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>, 54, TypeCheckedInliningViolated]}
stamp: void
=== Inputs ===
stateBefore: ?35 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1212 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1212  <|@  <|@
f <@*|@fixed>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 544
mayConvertToGuard: true
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x4d7933db]: FallbackDeopt@8[HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>, 45, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/lang/StringBuilder;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?24 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?24  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i781 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -19507
stableDimension: 0
stamp: i32 [-19507]
stampKind: i32
value: int[-19507|0xffffffffffffb3cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i765 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-115507 - -19507] bits:1...1xx0xxxxxx11001101
valueDescription: i32
=== Inputs ===
merge: v761 
values: i773 i781 i785 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v761 values: i773 i781 i785  <|@  <|@
f <@~|@floating>@ <|@
tid j766 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [20 - 3220] bits:0...0xxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v761 
values: j774 j365 j786 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v761 values: j774 j365 j786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v772 v780 v784 
=== Succesors ===
next: v767 
=== Usages ===
i765 j766 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v772 v780 v784 #next: v767  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i765 
speculation: j766 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i765 speculation: j766  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v5|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v9|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v9|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v20|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SHL (x: v38|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = SUB (x: v43|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v50|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v51|QWORD[*] + v48|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = ADD (x: v63|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v65|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v85|DWORD = MOV [v84|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v86|DWORD = MOV [v83|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v87|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSXB v87|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHL (x: v88|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v90|DWORD, y: v90|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SHL (x: v91|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v92|DWORD, y: v85|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SUB (x: v86|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v90|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV v92|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v90|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v63|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = OR (x: v99|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v101|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v106|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: v108|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v107|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = SHL (x: v66|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHR v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = ADD (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v54|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHL v59|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = ADD (x: v61|QWORD, y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v112|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = SHR (x: v111|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = AND v115|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SUB (x: v3|DWORD, ~y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v117|DWORD, y: v119|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD v119|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = INC v119|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[_] = MOV [v70|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v71|DWORD[_], y: v71|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v72|QWORD, y: v72|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD + v72|QWORD * 1 - 8], y: v73|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v31|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = XOR (x: v1|QWORD[.], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD[.], y: v24|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v33|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v76|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = XOR (x: v1|QWORD[.], y: v69|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v77|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD[.], y: v69|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v78|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = ADD (x: v78|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v79|QWORD, y: v79|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD + v79|QWORD * 1 - 8], y: v80|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v79|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19507|0xffffffffffffb3cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188697|0xfffffffffffd1ee7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180505|0xfffffffffffd3ee7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-187673|0xfffffffffffd22e7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186649|0xfffffffffffd26e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-185619|0xfffffffffffd2aed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-179481|0xfffffffffffd42e7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-177433|0xfffffffffffd4ae7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30259|0xffffffffffff89cd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189721|0xfffffffffffd1ae7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115507|0xfffffffffffe3ccd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-181529|0xfffffffffffd3ae7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1126 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i1126  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.Formatter$FormatSpecifier
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1171 v1186 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1171 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1126 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FormatSpecifier.width
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1171 
lastLocationAccess: - 
=== Succesors ===
next: v10 
=== Usages ===
v7 ?24 i25 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1171 lastLocationAccess: - #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 4]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 5]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1126 
y: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1126 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?247 ?343 ?265 ?24 ?102 ?105 ?35 v1189 v542 ?358 v1185 v1174 v1180 v545 ?182 ?323 ?126 v517 ?208 v1172 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1180 <|@
result [v2|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1148 i1156 i1160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1117 <|@
result meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1118 v1124 v1125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 4]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 22]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i39 v480 v416 v289 v478 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 21]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 i18 v19 v164 v229 j300 i308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1174 <|@
result [v2|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1135 i1139 i1145 i1154 i1163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1172 <|@
result [v2|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a1133 a1140 a1150 a1161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1189 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1130 v1147 v1159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: a java.lang.Appendable
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1188 ?751 ?24 ?760 ?105 ?35 v542 j1049 ?355 ?358 ?316 ?126 ?314 ?755 v1175 ?182 v444 v1176 ?313 ?265 ?756 ?208 v1184 ?753 ?753 v445 v1177 v511 ?754 ?755 ?247 j927 v519 ?323 ?750 ?750 ?327 ?102 ?757 v545 ?343 ?759 v538 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1188 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v1127 v1165 v1166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3194
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v767 v1127 v1159 i1129 v1130 i1162 i1134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 5]
profileData: PROFILED designatedSuccessorProbability: 0.9485652393632811
stamp: void
=== Inputs ===
condition: v7 
=== Succesors ===
trueSuccessor: v9 
falseSuccessor: v8 
=== Usages ===
=== Predecessor ===
i1126 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v7 #trueSuccessor: v9 #falseSuccessor: v8  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1127 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-94219|0xfffffffffffe8ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1188 
lastLocationAccess: - 
=== Succesors ===
next: v123 
=== Usages ===
v851 
=== Predecessor ===
v9 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1188 lastLocationAccess: - #next: v123  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1127 
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1127  <|@  <|@
f <@*|@fixed>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}]
keySuccessors: [I@39bb8bb5
keys: [HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/io/PrintStream;, resolved>]
profileData: PROFILED keyProbabilities: [0.987143010065966, 0.012856989934033987, 0.0]
stamp: void
=== Inputs ===
value: v851 
=== Succesors ===
successors: v111 v116 v119 
=== Usages ===
=== Predecessor ===
v1127 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v851 #successors: v111 v116 v119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v5|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a1128 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1128  <|@  <|@
f <@~|@floating>@ <|@
tid v1176 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a1128 a1142 v450 v516 j880 j1007 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1128 <|@
result v7|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
lastLocationAccess: - 
=== Succesors ===
next: i1129 
=== Usages ===
a456 v1181 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1176 lastLocationAccess: - #next: i1129  <|@  <|@
f <@~|@floating>@ <|@
tid v1181 <|@
result [v7|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1128 
=== Succesors ===
=== Usages ===
i1129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1128  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1129 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-156171|0xfffffffffffd9df5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1181 
lastLocationAccess: - 
=== Succesors ===
next: v1130 
=== Usages ===
i162 
=== Predecessor ===
a1128 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1181 lastLocationAccess: - #next: v1130  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1130 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-173075|0xfffffffffffd5bed]
deoptSpeculation: long[1300|0x514]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1189 
lastLocationAccess: - 
=== Succesors ===
next: i1131 
=== Usages ===
v1170 
=== Predecessor ===
i1129 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1189 lastLocationAccess: - #next: i1131  <|@  <|@
f <@~|@floating>@ <|@
tid v1177 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1131 i1138 i1144 i1136 i1149 i1153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1131 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: i1132 
=== Usages ===
i463 
=== Predecessor ===
v1130 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: i1132  <|@  <|@
f <@~|@floating>@ <|@
tid v1175 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1132 i1137 i1146 v443 v501 i1155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1132 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
=== Succesors ===
next: v134 
=== Usages ===
i212 i145 
=== Predecessor ===
i1131 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid i463 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1131 
=== Succesors ===
=== Usages ===
i162 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1131  <|@  <|@
f <@~|@floating>@ <|@
tid i162 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1129 
y: i463 
=== Succesors ===
=== Usages ===
i163 i228 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1129 y: i463  <|@  <|@
f <@~|@floating>@ <|@
tid v1169 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
stampKind: Klass*(compressed base: 140436756758528 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1170 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1170 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1130 
y: v1169 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1130 y: v1169  <|@  <|@
f <@~|@floating>@ <|@
tid a456 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1128 
=== Succesors ===
=== Usages ===
?755 ?753 v514 a361 v448 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1128  <|@  <|@
f <@~|@floating>@ <|@
tid i977 <|@
result byte[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 2
stableDimension: 0
stamp: i8 [2]
stampKind: i8
value: byte[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v978 v1094 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i941 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:130) [bci: 16]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j942 j1062 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j940 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableStart(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:129) [bci: 3]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 140438306553856
stableDimension: 0
stamp: i64 [140438306553856]
stampKind: i64
value: long[140438306553856|0x7fba57600000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j965 v1200 j1084 v1211 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j963 <|@
result long[-4194304|0xffffffffffc00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -4194304
stableDimension: 0
stamp: i64 [-4194304]
stampKind: i64
value: long[-4194304|0xffffffffffc00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v964 v1083 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j907 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j908 j969 j1031 j1086 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j764 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1055 v1020 v933 v953 v830 v893 j810 j810 j810 j810 v1073 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i916 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v917 v972 v979 v1039 v1089 v1095 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?320 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3195
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?126 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?320 
values: a2 a3 
=== Succesors ===
=== Usages ===
?316 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?320 values: a2 a3  <|@  <|@
tid ?316 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?126 
values: a2 
=== Succesors ===
=== Usages ===
?207 ?315 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?126 values: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:625) [bci: 13]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.7106877721660849
stamp: void
=== Inputs ===
condition: v1170 
=== Succesors ===
trueSuccessor: v133 
falseSuccessor: v132 
=== Usages ===
=== Predecessor ===
i1132 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1170 #trueSuccessor: v133 #falseSuccessor: v132  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v9|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v9|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1133 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1133 <|@
result v15|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1172 
lastLocationAccess: - 
=== Succesors ===
next: i1134 
=== Usages ===
v1173 
=== Predecessor ===
v133 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1172 lastLocationAccess: - #next: i1134  <|@  <|@
f <@~|@floating>@ <|@
tid v1173 <|@
result [v15|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1133 
=== Succesors ===
=== Usages ===
i1134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1133  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1134 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-95499|0xfffffffffffe8af5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1173 
lastLocationAccess: - 
=== Succesors ===
next: i1135 
=== Usages ===
i222 
=== Predecessor ===
a1133 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1173 lastLocationAccess: - #next: i1135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1135 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v232 
=== Usages ===
i380 
=== Predecessor ===
i1134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v232  <|@  <|@
f <@~|@floating>@ <|@
tid i380 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1135 
=== Succesors ===
=== Usages ===
i222 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1135  <|@  <|@
f <@~|@floating>@ <|@
tid i222 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:586) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1134 
y: i380 
=== Succesors ===
=== Usages ===
i212 i215 ?313 ?247 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1134 y: i380  <|@  <|@
f <@~|@floating>@ <|@
tid i212 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i222 
y: i1132 
=== Succesors ===
=== Usages ===
i228 v445 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i222 y: i1132  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i212 
y: i162 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i212 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i228 
y: i16 
=== Succesors ===
=== Usages ===
v232 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i228 y: i16  <|@  <|@
tid ?315 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 626
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?316 
=== Succesors ===
=== Usages ===
?208 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?316  <|@  <|@
tid ?208 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?315 
values: a2 a3 
=== Succesors ===
=== Usages ===
?314 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?315 values: a2 a3  <|@  <|@
tid ?314 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 179
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?208 
values: a2 
=== Succesors ===
=== Usages ===
?313 ?247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?208 values: a2  <|@  <|@
f <@*|@fixed>@ <|@
tid v232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9207459892678765
stamp: void
=== Inputs ===
condition: v229 
=== Succesors ===
trueSuccessor: v231 
falseSuccessor: v230 
=== Usages ===
=== Predecessor ===
i1135 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v229 #trueSuccessor: v231 #falseSuccessor: v230  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v20|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v231 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i234 
=== Usages ===
=== Predecessor ===
v232 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i234  <|@  <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a2 i212 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i212  <|@  <|@
tid ?247 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 587
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?314 
values: a2 a3 i222 
=== Succesors ===
=== Usages ===
?755 ?756 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?314 values: a2 a3 i222  <|@  <|@
tid ?755 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 243
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?247 
values: a2 a456 a2 
=== Succesors ===
=== Usages ===
i234 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?247 values: a2 a456 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i234 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v445 
stateDuring: ?755 
=== Succesors ===
next: i1136 
=== Usages ===
i237 
=== Predecessor ===
v230 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v445 stateDuring: ?755 #next: i1136  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1136 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: a239 
=== Usages ===
i447 
=== Predecessor ===
i234 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: a239  <|@  <|@
f <@~|@floating>@ <|@
tid i447 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1136 
=== Succesors ===
=== Usages ===
i237 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1136  <|@  <|@
f <@~|@floating>@ <|@
tid i237 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i234 
y: i447 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i234 y: i447  <|@  <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a456 i237 
=== Succesors ===
=== Usages ===
a239 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a456 i237  <|@  <|@
tid ?756 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 242
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?247 
values: a2 
=== Succesors ===
=== Usages ===
a239 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?247 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a239 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v448 
stateDuring: ?756 
=== Succesors ===
next: v923 
=== Usages ===
a926 a449 
=== Predecessor ===
i1136 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v448 stateDuring: ?756 #next: v923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j879 
=== Usages ===
=== Predecessor ===
a239 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j879  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j879 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j880 
=== Usages ===
v1192 v1194 v1195 
=== Predecessor ===
v923 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j880  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j880 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1176 
=== Succesors ===
next: i909 
=== Usages ===
v1193 
=== Predecessor ===
j879 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1176 #next: i909  <|@  <|@
f <@~|@floating>@ <|@
tid v1192 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j879 
index: - 
=== Succesors ===
=== Usages ===
i909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j879 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i909 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1192 
lastLocationAccess: - 
=== Succesors ===
next: v884 
=== Usages ===
v917 
=== Predecessor ===
j880 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1192 lastLocationAccess: - #next: v884  <|@  <|@
f <@~|@floating>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i909 
y: i916 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i909 y: i916  <|@  <|@
f <@*|@fixed>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v917 
=== Succesors ===
trueSuccessor: v883 
falseSuccessor: v882 
=== Usages ===
=== Predecessor ===
i909 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v917 #trueSuccessor: v883 #falseSuccessor: v882  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v887 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v887  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
v883 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a910 
=== Usages ===
=== Predecessor ===
v884 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a910  <|@  <|@
f <@~|@floating>@ <|@
tid v1193 <|@
result [v25|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j880 
index: - 
=== Succesors ===
=== Usages ===
a910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j880 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a910 <|@
result v26|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1193 
lastLocationAccess: - 
=== Succesors ===
next: v891 
=== Usages ===
a911 v918 
=== Predecessor ===
v882 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1193 lastLocationAccess: - #next: v891  <|@  <|@
f <@~|@floating>@ <|@
tid v918 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a910 
=== Succesors ===
=== Usages ===
v891 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a910  <|@  <|@
f <@*|@fixed>@ <|@
tid v891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v918 
=== Succesors ===
trueSuccessor: v890 
falseSuccessor: v886 
=== Usages ===
=== Predecessor ===
a910 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v918 #trueSuccessor: v890 #falseSuccessor: v886  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v890 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
v890 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j912 
=== Usages ===
=== Predecessor ===
v891 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j912  <|@  <|@
f <@~|@floating>@ <|@
tid v1194 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j879 
index: - 
=== Succesors ===
=== Usages ===
j912 v915 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j879 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j912 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1194 
lastLocationAccess: - 
=== Succesors ===
next: v896 
=== Usages ===
v893 j908 v1196 
=== Predecessor ===
v886 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1194 lastLocationAccess: - #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v893 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j912 
y: j764 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j912 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid a911 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a910 
=== Succesors ===
=== Usages ===
j898 v901 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a910  <|@  <|@
f <@*|@fixed>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v893 
=== Succesors ===
trueSuccessor: v895 
falseSuccessor: v894 
=== Usages ===
=== Predecessor ===
j912 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v893 #trueSuccessor: v895 #falseSuccessor: v894  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a911 
=== Succesors ===
next: v902 
=== Usages ===
=== Predecessor ===
v895 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a911 #next: v902  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j913 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j913  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j879 
index: - 
=== Succesors ===
=== Usages ===
j913 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j879 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j913 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1195 
lastLocationAccess: - 
=== Succesors ===
next: j898 
=== Usages ===
v1196 
=== Predecessor ===
v894 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1195 lastLocationAccess: - #next: j898  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j898 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a911 
=== Succesors ===
next: v914 
=== Usages ===
v914 
=== Predecessor ===
j913 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a911 #next: v914  <|@  <|@
f <@~|@floating>@ <|@
tid v1196 <|@
result [v29|QWORD + v27|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j913 
index: j912 
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j913 index: j912  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1196 
lastLocationAccess: - 
value: j898 
stateAfter: - 
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
j898 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1196 lastLocationAccess: - value: j898 stateAfter: - #next: v915  <|@  <|@
f <@~|@floating>@ <|@
tid j908 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j912 
y: j907 
=== Succesors ===
=== Usages ===
v915 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j912 y: j907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1194 
lastLocationAccess: - 
value: j908 
stateAfter: - 
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1194 lastLocationAccess: - value: j908 stateAfter: - #next: v900  <|@  <|@
f <@*|@fixed>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
v915 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v887 v889 v900 v902 
=== Succesors ===
next: v450 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v887 v889 v900 v902 #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid a449 <|@
result v31|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a239 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
lastLocationAccess: - 
value: a449 
stateAfter: - 
=== Succesors ===
next: v985 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1176 lastLocationAccess: - value: a449 stateAfter: - #next: v985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j925 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j925  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j925 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a926 
=== Usages ===
v1197 v1198 
=== Predecessor ===
v985 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a926  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a926 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: a# byte[]
=== Inputs ===
object: a239 
=== Succesors ===
next: j927 
=== Usages ===
j928 
=== Predecessor ===
j925 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a239 #next: j927  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j927 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: j928 
=== Usages ===
j929 j942 
=== Predecessor ===
a926 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a2 #next: j928  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j928 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a926 
=== Succesors ===
next: v932 
=== Usages ===
j929 v933 
=== Predecessor ===
j927 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a926 #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid j929 <|@
result v32|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j927 
y: j928 
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j927 y: j928  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
x: j929 
y: j963 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j929 y: j963  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v964 
=== Succesors ===
trueSuccessor: v931 
falseSuccessor: v930 
=== Usages ===
=== Predecessor ===
j928 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v964 #trueSuccessor: v931 #falseSuccessor: v930  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v31|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = XOR (x: v1|QWORD[.], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v931 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v939 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v939  <|@  <|@
f <@~|@floating>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j928 
y: j764 
=== Succesors ===
=== Usages ===
v939 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j928 y: j764  <|@  <|@
f <@*|@fixed>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v933 
=== Succesors ===
trueSuccessor: v938 
falseSuccessor: v934 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v933 #trueSuccessor: v938 #falseSuccessor: v934  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD[.], y: v24|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1116 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1116  <|@  <|@
f <@*|@fixed>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v938 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i970 
=== Usages ===
=== Predecessor ===
v939 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i970  <|@  <|@
f <@~|@floating>@ <|@
tid j942 <|@
result v33|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j927 
y: i941 
=== Succesors ===
=== Usages ===
j965 v1200 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j927 y: i941  <|@  <|@
f <@~|@floating>@ <|@
tid v1200 <|@
result [v33|QWORD[*] + v14|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j942 
index: j940 
=== Succesors ===
=== Usages ===
i970 i971 v972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j942 index: j940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i970 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1200 
lastLocationAccess: - 
=== Succesors ===
next: v946 
=== Usages ===
v978 
=== Predecessor ===
v934 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1200 lastLocationAccess: - #next: v946  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i970 
y: i977 
=== Succesors ===
=== Usages ===
v946 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i970 y: i977  <|@  <|@
f <@*|@fixed>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v978 
=== Succesors ===
trueSuccessor: v945 
falseSuccessor: v943 
=== Usages ===
=== Predecessor ===
i970 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v978 #trueSuccessor: v945 #falseSuccessor: v943  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1115 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1115  <|@  <|@
f <@*|@fixed>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v945 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v947  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i971 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i971  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i971 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1200 
lastLocationAccess: - 
=== Succesors ===
next: v951 
=== Usages ===
v979 
=== Predecessor ===
v947 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1200 lastLocationAccess: - #next: v951  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i971 
y: i916 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i971 y: i916  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v979 
=== Succesors ===
trueSuccessor: v950 
falseSuccessor: v948 
=== Usages ===
=== Predecessor ===
i971 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v979 #trueSuccessor: v950 #falseSuccessor: v948  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1114 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1114  <|@  <|@
f <@*|@fixed>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v950 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v972  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1200 
lastLocationAccess: - 
value: i916 
stateAfter: - 
=== Succesors ===
next: j973 
=== Usages ===
=== Predecessor ===
v948 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1200 lastLocationAccess: - value: i916 stateAfter: - #next: j973  <|@  <|@
f <@~|@floating>@ <|@
tid v1197 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j925 
index: - 
=== Succesors ===
=== Usages ===
j973 v976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j973 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
=== Succesors ===
next: v956 
=== Usages ===
v953 j969 v1199 
=== Predecessor ===
v972 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - #next: v956  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j973 
y: j764 
=== Succesors ===
=== Usages ===
v956 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j973 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid j965 <|@
result v35|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j942 
y: j940 
=== Succesors ===
=== Usages ===
v960 v975 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j942 y: j940  <|@  <|@
f <@*|@fixed>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v953 
=== Succesors ===
trueSuccessor: v955 
falseSuccessor: v954 
=== Usages ===
=== Predecessor ===
j973 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v953 #trueSuccessor: v955 #falseSuccessor: v954  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v33|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v960 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v960  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j965 
=== Succesors ===
next: v1112 
=== Usages ===
=== Predecessor ===
v955 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j965 #next: v1112  <|@  <|@
f <@*|@fixed>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v960 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j974 
=== Usages ===
=== Predecessor ===
v956 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j974  <|@  <|@
f <@~|@floating>@ <|@
tid v1198 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j925 
index: - 
=== Succesors ===
=== Usages ===
j974 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j925 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j974 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1198 
lastLocationAccess: - 
=== Succesors ===
next: v975 
=== Usages ===
v1199 
=== Predecessor ===
v954 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1198 lastLocationAccess: - #next: v975  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
result [v36|QWORD + v34|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j974 
index: j973 
=== Succesors ===
=== Usages ===
v975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j974 index: j973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1199 
lastLocationAccess: - 
value: j965 
stateAfter: - 
=== Succesors ===
next: v976 
=== Usages ===
=== Predecessor ===
j974 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1199 lastLocationAccess: - value: j965 stateAfter: - #next: v976  <|@  <|@
f <@~|@floating>@ <|@
tid j969 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j973 
y: j907 
=== Succesors ===
=== Usages ===
v976 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j973 y: j907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1197 
lastLocationAccess: - 
value: j969 
stateAfter: - 
=== Succesors ===
next: v1113 
=== Usages ===
=== Predecessor ===
v975 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1197 lastLocationAccess: - value: j969 stateAfter: - #next: v1113  <|@  <|@
f <@*|@fixed>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v243 v245 v1112 v1113 v1114 v1115 v1116 
=== Succesors ===
next: i1137 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v243 v245 v1112 v1113 v1114 v1115 v1116 #next: i1137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1137 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
=== Succesors ===
next: i1138 
=== Usages ===
?265 i273 j1168 v289 i294 
=== Predecessor ===
v244 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - #next: i1138  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1138 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 7]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: i1139 
=== Usages ===
v546 
=== Predecessor ===
i1137 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: i1139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1139 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 11]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v254 
=== Usages ===
v546 
=== Predecessor ===
i1138 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v254  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1138 
y: i1139 
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1138 y: i1139  <|@  <|@
tid ?313 <|@
d <@d|@=== Debug Properties ===
bci: 30
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 588
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?314 
values: a2 - i222 
=== Succesors ===
=== Usages ===
?265 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?314 values: a2 - i222  <|@  <|@
tid ?265 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.putStringAt(int, String)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1750
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?313 
values: a2 i1137 a3 
=== Succesors ===
=== Usages ===
?758 ?261 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?313 values: a2 i1137 a3  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1733) [bci: 14]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9789707094128564
stamp: void
=== Inputs ===
condition: v546 
=== Succesors ===
trueSuccessor: v253 
falseSuccessor: v252 
=== Usages ===
=== Predecessor ===
i1139 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v546 #trueSuccessor: v253 #falseSuccessor: v252  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v258 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v258  <|@  <|@
f <@*|@fixed>@ <|@
tid v258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v253 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 17]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v256 
=== Usages ===
=== Predecessor ===
v254 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v256  <|@  <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.inflate()>
=== Inputs ===
arguments: a2 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2  <|@  <|@
tid ?758 <|@
d <@d|@=== Debug Properties ===
bci: 18
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1734
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?265 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
bci: 18
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: void
targetMethod: Direct#AbstractStringBuilder.inflate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v444 
stateDuring: ?758 
=== Succesors ===
next: v260 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v444 stateDuring: ?758 #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v259 
=== Predecessor ===
v256 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v258 v260 
=== Succesors ===
next: a1140 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v258 v260 #next: a1140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1140 <|@
result v40|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1172 
lastLocationAccess: - 
=== Succesors ===
next: i1141 
=== Usages ===
a406 v1178 
=== Predecessor ===
v259 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1172 lastLocationAccess: - #next: i1141  <|@  <|@
tid ?261 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.inflateIfNeededFor(String)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 1736
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?265 
=== Succesors ===
=== Usages ===
v830 i1141 i1143 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?265  <|@  <|@
f <@~|@floating>@ <|@
tid v1178 <|@
result [v40|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1140 
=== Succesors ===
=== Usages ===
i1141 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1140  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1141 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-105483|0xfffffffffffe63f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?261 
guard: - 
address: v1178 
lastLocationAccess: - 
=== Succesors ===
next: a1142 
=== Usages ===
i424 j873 v302 i294 
=== Predecessor ===
a1140 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?261 guard: - address: v1178 lastLocationAccess: - #next: a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1142 <|@
result v42|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
lastLocationAccess: - 
=== Succesors ===
next: i1143 
=== Usages ===
a400 v1179 
=== Predecessor ===
i1141 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1176 lastLocationAccess: - #next: i1143  <|@  <|@
f <@~|@floating>@ <|@
tid v1179 <|@
result [v42|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1142 
=== Succesors ===
=== Usages ===
i1143 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1143 <|@
result v43|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-156427|0xfffffffffffd9cf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?261 
guard: - 
address: v1179 
lastLocationAccess: - 
=== Succesors ===
next: i1144 
=== Usages ===
i308 i424 
=== Predecessor ===
a1142 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?261 guard: - address: v1179 lastLocationAccess: - #next: i1144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1144 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: i1145 
=== Usages ===
i402 v548 
=== Predecessor ===
i1143 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: i1145  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1145 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.getBytes(String.java:4725) [bci: 1]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v271 
=== Usages ===
v548 
=== Predecessor ===
i1144 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1144 
y: i1145 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1144 y: i1145  <|@  <|@
f <@~|@floating>@ <|@
tid a400 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1142 
=== Succesors ===
=== Usages ===
j877 j868 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1142  <|@  <|@
f <@~|@floating>@ <|@
tid a406 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 9]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1140 
=== Succesors ===
=== Usages ===
j864 j875 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1140  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4725) [bci: 5]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9804899170307357
stamp: void
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
i1145 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v270 #falseSuccessor: v269  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 8]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v696  <|@  <|@
f <@~|@floating>@ <|@
tid i402 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 12]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1144 
=== Succesors ===
=== Usages ===
i273 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1144  <|@  <|@
f <@~|@floating>@ <|@
tid i273 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4726) [bci: 16]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1137 
y: i402 
=== Succesors ===
=== Usages ===
v1191 v416 v425 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i1137 y: i402  <|@  <|@
f <@~|@floating>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i20 
=== Succesors ===
=== Usages ===
v696 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i273 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v416 
=== Succesors ===
trueSuccessor: v694 
falseSuccessor: v695 
=== Usages ===
=== Predecessor ===
v270 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v416 #trueSuccessor: v694 #falseSuccessor: v695  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SHL (x: v38|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v833 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v833  <|@  <|@
f <@~|@floating>@ <|@
tid i834 <|@
result int[-177433|0xfffffffffffd4ae7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -177433
stableDimension: 0
stamp: i32 [-177433]
stampKind: i32
value: int[-177433|0xfffffffffffd4ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v833 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v694 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-177433|0xfffffffffffd4ae7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v696 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid i424 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-2147483647 - 2147483647]
=== Inputs ===
x: i1143 
y: i1141 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i1143 y: i1141  <|@  <|@
f <@~|@floating>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i424 
y: i273 
=== Succesors ===
=== Usages ===
v704 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i424 y: i273  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v425 
=== Succesors ===
trueSuccessor: v702 
falseSuccessor: v703 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v425 #trueSuccessor: v702 #falseSuccessor: v703  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = SUB (x: v43|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v841 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v841  <|@  <|@
f <@~|@floating>@ <|@
tid i842 <|@
result int[-179481|0xfffffffffffd42e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -179481
stableDimension: 0
stamp: i32 [-179481]
stampKind: i32
value: int[-179481|0xfffffffffffd42e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v841 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v702 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-179481|0xfffffffffffd42e7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v703 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j864 
=== Usages ===
=== Predecessor ===
v704 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j864  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j864 <|@
result v50|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a406 
=== Succesors ===
next: j868 
=== Usages ===
v1190 
=== Predecessor ===
v703 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a406 #next: j868  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j868 <|@
result v51|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a400 
=== Succesors ===
next: v874 
=== Usages ===
v1191 
=== Predecessor ===
j864 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a400 #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid v1190 <|@
result [v50|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j864 
index: - 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j864 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1191 <|@
result [v51|QWORD[*] + v48|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j868 
index: i273 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j868 index: i273  <|@  <|@
f <@~|@floating>@ <|@
tid j873 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1141 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1141  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1190 v1191 j873 
=== Succesors ===
next: v304 
=== Usages ===
=== Predecessor ===
j868 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1190 v1191 j873 #next: v304  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v874 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v50|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v51|QWORD[*] + v48|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4728) [bci: 28]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1137 
y: i20 
=== Succesors ===
=== Usages ===
v708 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1137 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v289 
=== Succesors ===
trueSuccessor: v706 
falseSuccessor: v707 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v289 #trueSuccessor: v706 #falseSuccessor: v707  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@~|@floating>@ <|@
tid i836 <|@
result int[-180505|0xfffffffffffd3ee7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -180505
stableDimension: 0
stamp: i32 [-180505]
stampKind: i32
value: int[-180505|0xfffffffffffd3ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v706 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180505|0xfffffffffffd3ee7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v712 
=== Usages ===
=== Predecessor ===
v708 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1143 
y: i16 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1143 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1137 
y: i1141 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1137 y: i1141  <|@  <|@
f <@~|@floating>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i308 
y: i294 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i308 y: i294  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v295 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v295 #trueSuccessor: v710 #falseSuccessor: v711  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHR v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = ADD (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v54|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid i840 <|@
result int[-181529|0xfffffffffffd3ae7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -181529
stableDimension: 0
stamp: i32 [-181529]
stampKind: i32
value: int[-181529|0xfffffffffffd3ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
v710 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-181529|0xfffffffffffd3ae7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i828 <|@
result v55|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-181529 - -177433] bits:1...1010xxxxx1011100111
valueDescription: i32
=== Inputs ===
merge: v825 
values: i834 i836 i840 i842 
=== Succesors ===
=== Usages ===
v830 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v825 values: i834 i836 i840 i842  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v833 v835 v839 v841 
=== Succesors ===
next: v830 
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v833 v835 v839 v841 #next: v830  <|@  <|@
f <@*|@fixed>@ <|@
tid v830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4726) [bci: 22]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?261 
actionAndReason: i828 
speculation: j764 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?261 actionAndReason: i828 speculation: j764  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j875 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j875  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j875 <|@
result v56|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a406 
=== Succesors ===
next: j877 
=== Usages ===
j876 
=== Predecessor ===
v711 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a406 #next: j877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j877 <|@
result v57|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a400 
=== Succesors ===
next: v302 
=== Usages ===
j878 
=== Predecessor ===
j875 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a400 #next: v302  <|@  <|@
f <@~|@floating>@ <|@
tid j297 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j876 j309 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j876 <|@
result v58|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j875 
y: j297 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j875 y: j297  <|@  <|@
f <@~|@floating>@ <|@
tid j1168 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1137 
=== Succesors ===
=== Usages ===
j300 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1137  <|@  <|@
f <@~|@floating>@ <|@
tid j300 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 8589934590] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j1168 
y: i16 
=== Succesors ===
=== Usages ===
j309 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j1168 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [16 - 8589934606] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
x: j300 
y: j297 
=== Succesors ===
=== Usages ===
j878 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j300 y: j297  <|@  <|@
f <@~|@floating>@ <|@
tid j878 <|@
result v62|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j309 
y: j877 
=== Succesors ===
=== Usages ===
v302 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j309 y: j877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
killedLocations: [Array: byte]
locationIdentity: Array: byte
nodeSourcePosition: at java.lang.StringLatin1.inflate(byte[], int, byte[], int, int) [bci: -1]
at java.lang.String.getBytes(String.java:4728) [bci: 40]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
runtimeCheckedCPUFeatures: [null]
stamp: void
=== Inputs ===
stateAfter: - 
lastLocationAccess: - 
src: j876 
dst: j878 
len: i1141 
=== Succesors ===
next: v306 
=== Usages ===
=== Predecessor ===
j877 >@ <|@
instruction <@StringLatin1Inflate|@jdk.graal.compiler.replacements.StringLatin1InflateNode>@ stateAfter: - lastLocationAccess: - src: j876 dst: j878 len: i1141 #next: v306  <|@  <|@
f <@*|@fixed>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
v302 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHL v59|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = ADD (x: v61|QWORD, y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.String.getBytes(String.java:4730) [bci: 43]
at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1751) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v304 v306 
=== Succesors ===
next: i1146 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v304 v306 #next: i1146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1146 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
=== Succesors ===
next: v443 
=== Usages ===
i215 
=== Predecessor ===
v305 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - #next: v443  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 39]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i222 
y: i1146 
=== Succesors ===
=== Usages ===
v443 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i222 y: i1146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:589) [bci: 40]
at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
value: i215 
stateAfter: - 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
i1146 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - value: i215 stateAfter: - #next: v112  <|@  <|@
f <@*|@fixed>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v443 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 25]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1147 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1147  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1147 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1189 
lastLocationAccess: - 
=== Succesors ===
next: v635 
=== Usages ===
v1118 
=== Predecessor ===
v132 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1189 lastLocationAccess: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1147 
y: v1117 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1147 y: v1117  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1118 
=== Succesors ===
trueSuccessor: v632 
falseSuccessor: v634 
=== Usages ===
=== Predecessor ===
v1147 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1118 #trueSuccessor: v632 #falseSuccessor: v634  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1148 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1148 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:610) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
=== Succesors ===
next: v167 
=== Usages ===
i145 i150 ?182 
=== Predecessor ===
v632 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - #next: v167  <|@  <|@
tid ?207 <|@
d <@d|@=== Debug Properties ===
bci: 37
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 629
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?316 
=== Succesors ===
=== Usages ===
?182 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?316  <|@  <|@
tid ?182 <|@
d <@d|@=== Debug Properties ===
bci: 21
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(AbstractStringBuilder)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 611
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?207 
values: a2 a3 i1148 
=== Succesors ===
=== Usages ===
?181 ?753 ?754 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?207 values: a2 a3 i1148  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1132 
y: i1148 
=== Succesors ===
=== Usages ===
i163 v511 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1132 y: i1148  <|@  <|@
f <@~|@floating>@ <|@
tid i163 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i145 
y: i162 
=== Succesors ===
=== Usages ===
v164 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i145 y: i162  <|@  <|@
f <@~|@floating>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i16 
=== Succesors ===
=== Usages ===
v167 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i163 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9207459892678765
stamp: void
=== Inputs ===
condition: v164 
=== Succesors ===
trueSuccessor: v166 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
i1148 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v164 #trueSuccessor: v166 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = ADD (x: v63|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v65|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v178 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v178  <|@  <|@
f <@*|@fixed>@ <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v166 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i169 
=== Usages ===
=== Predecessor ===
v167 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i169  <|@  <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a2 i145 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i145  <|@  <|@
tid ?753 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 243
stackSize: 2
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?182 
values: a2 a456 a2 
=== Succesors ===
=== Usages ===
i169 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?182 values: a2 a456 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i169 <|@
result v66|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v511 
stateDuring: ?753 
=== Succesors ===
next: i1149 
=== Usages ===
i172 
=== Predecessor ===
v165 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v511 stateDuring: ?753 #next: i1149  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1149 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: a174 
=== Usages ===
i513 
=== Predecessor ===
i169 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: a174  <|@  <|@
f <@~|@floating>@ <|@
tid i513 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 28]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1149 
=== Succesors ===
=== Usages ===
i172 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1149  <|@  <|@
f <@~|@floating>@ <|@
tid i172 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i169 
y: i513 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i169 y: i513  <|@  <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# byte[]
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<Arrays.copyOf(byte[], int)>
=== Inputs ===
arguments: a456 i172 
=== Succesors ===
=== Usages ===
a174 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a456 i172  <|@  <|@
tid ?754 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 242
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?182 
values: a2 
=== Succesors ===
=== Usages ===
a174 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?182 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a174 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# byte[]
targetMethod: Direct#Arrays.copyOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v514 
stateDuring: ?754 
=== Succesors ===
next: v1045 
=== Usages ===
a361 a515 a361 a361 a1048 a361 a361 a361 
=== Predecessor ===
i1149 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v514 stateDuring: ?754 #next: v1045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1045 <|@
d <@d|@=== Debug Properties ===
locations: [GC-SATB-Queue-Log, GC-SATB-Marking-Active, GC-SATB-Queue-Index, GC-SATB-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1006 
=== Usages ===
=== Predecessor ===
a174 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1006  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1006 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:127) [bci: 10]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1007 
=== Usages ===
v1203 v1205 v1206 
=== Predecessor ===
v1045 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1007 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:129) [bci: 21]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v1176 
=== Succesors ===
next: i1032 
=== Usages ===
v1204 
=== Predecessor ===
j1006 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: v1176 #next: i1032  <|@  <|@
f <@~|@floating>@ <|@
tid v1203 <|@
result [r15|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: j1006 
index: - 
=== Succesors ===
=== Usages ===
i1032 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1006 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1032 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Marking-Active
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:130) [bci: 35]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1203 
lastLocationAccess: - 
=== Succesors ===
next: v1011 
=== Usages ===
v1039 
=== Predecessor ===
j1007 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1203 lastLocationAccess: - #next: v1011  <|@  <|@
f <@~|@floating>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 206]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1032 
y: i916 
=== Succesors ===
=== Usages ===
v1011 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1032 y: i916  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:146) [bci: 217]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1039 
=== Succesors ===
trueSuccessor: v1010 
falseSuccessor: v1009 
=== Usages ===
=== Predecessor ===
i1032 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1039 #trueSuccessor: v1010 #falseSuccessor: v1009  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = SHL (x: v66|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1014 
=== Usages ===
=== Predecessor ===
v1011 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1014  <|@  <|@
f <@*|@fixed>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
v1010 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:150) [bci: 220]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1033 
=== Usages ===
=== Predecessor ===
v1011 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1033  <|@  <|@
f <@~|@floating>@ <|@
tid v1204 <|@
result [v70|QWORD[.+]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1007 
index: - 
=== Succesors ===
=== Usages ===
a1033 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1007 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1033 <|@
result v71|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1204 
lastLocationAccess: - 
=== Succesors ===
next: v1018 
=== Usages ===
a1034 v1040 
=== Predecessor ===
v1009 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1204 lastLocationAccess: - #next: v1018  <|@  <|@
f <@~|@floating>@ <|@
tid v1040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 296]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a1033 
=== Succesors ===
=== Usages ===
v1018 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a1033  <|@  <|@
f <@*|@fixed>@ <|@
tid v1018 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:162) [bci: 307]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1040 
=== Succesors ===
trueSuccessor: v1017 
falseSuccessor: v1013 
=== Usages ===
=== Predecessor ===
a1033 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1040 #trueSuccessor: v1017 #falseSuccessor: v1013  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[_] = MOV [v70|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v71|DWORD[_], y: v71|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1017 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1016 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1016  <|@  <|@
f <@*|@fixed>@ <|@
tid v1016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
v1017 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:163) [bci: 310]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1035 
=== Usages ===
=== Predecessor ===
v1018 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1035  <|@  <|@
f <@~|@floating>@ <|@
tid v1205 <|@
result [r15|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: j1006 
index: - 
=== Succesors ===
=== Usages ===
j1035 v1038 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1006 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1035 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:166) [bci: 327]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1205 
lastLocationAccess: - 
=== Succesors ===
next: v1023 
=== Usages ===
v1020 j1031 v1207 
=== Predecessor ===
v1013 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1205 lastLocationAccess: - #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 341]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1035 
y: j764 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1035 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid a1034 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:151) [bci: 234]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a1033 
=== Succesors ===
=== Usages ===
j1025 v1028 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1033  <|@  <|@
f <@*|@fixed>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:167) [bci: 347]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1020 
=== Succesors ===
trueSuccessor: v1022 
falseSuccessor: v1021 
=== Usages ===
=== Predecessor ===
j1035 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1020 #trueSuccessor: v1022 #falseSuccessor: v1021  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v72|QWORD, y: v72|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 410]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_pre(Object)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-SATB-Queue-Index, GC-SATB-Queue-Buffer, GC-SATB-Queue-Log], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_pre
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreBarrierStub(G1WriteBarrierSnippets.java:409) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:175) [bci: 413]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: a1034 
=== Succesors ===
next: v1029 
=== Usages ===
=== Predecessor ===
v1022 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: a1034 #next: v1029  <|@  <|@
f <@*|@fixed>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
v1028 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 350]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1036 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1036  <|@  <|@
f <@~|@floating>@ <|@
tid v1206 <|@
result [r15|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: j1006 
index: - 
=== Succesors ===
=== Usages ===
j1036 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1006 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1036 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-SATB-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:168) [bci: 359]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1206 
lastLocationAccess: - 
=== Succesors ===
next: j1025 
=== Usages ===
v1207 
=== Predecessor ===
v1021 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1206 lastLocationAccess: - #next: j1025  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1025 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 384]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1034 
=== Succesors ===
next: v1037 
=== Usages ===
v1037 
=== Predecessor ===
j1036 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1034 #next: v1037  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
result [v74|QWORD + v72|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1036 
index: j1035 
=== Succesors ===
=== Usages ===
v1037 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1036 index: j1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1037 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Log
location: GC-SATB-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:172) [bci: 390]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1207 
lastLocationAccess: - 
value: j1025 
stateAfter: - 
=== Succesors ===
next: v1038 
=== Usages ===
=== Predecessor ===
j1025 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1207 lastLocationAccess: - value: j1025 stateAfter: - #next: v1038  <|@  <|@
f <@~|@floating>@ <|@
tid j1031 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:169) [bci: 373]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1035 
y: j907 
=== Succesors ===
=== Usages ===
v1038 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1035 y: j907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-SATB-Queue-Index
location: GC-SATB-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:173) [bci: 404]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1205 
lastLocationAccess: - 
value: j1031 
stateAfter: - 
=== Succesors ===
next: v1027 
=== Usages ===
=== Predecessor ===
v1037 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1205 lastLocationAccess: - value: j1031 stateAfter: - #next: v1027  <|@  <|@
f <@*|@fixed>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD + v72|QWORD * 1 - 8], y: v73|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.satbBarrier(G1WriteBarrierSnippets.java:179) [bci: 416]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(G1WriteBarrierSnippets.java:114) [bci: 12] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PreWriteBarrier(AddressNode$Address, Object, Object, boolean, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1014 v1016 v1027 v1029 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1014 v1016 v1027 v1029 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid a515 <|@
result v76|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Compress
stamp: n# byte[]
=== Inputs ===
value: a174 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1176 
lastLocationAccess: - 
value: a515 
stateAfter: - 
=== Succesors ===
next: v1101 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1176 lastLocationAccess: - value: a515 stateAfter: - #next: v1101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
locations: [GC-Card, GC-Card-Queue-Log, GC-Card-Queue-Index, GC-Card-Queue-Buffer]
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1047 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j1047  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1047 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:763) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.getThread(HotSpotG1WriteBarrierSnippets.java:79) [bci: 4]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:184) [bci: 1] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: a1048 
=== Usages ===
v1208 v1209 
=== Predecessor ===
v1101 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: a1048  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1048 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:185) [bci: 7] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: a# byte[]
=== Inputs ===
object: a174 
=== Succesors ===
next: j1049 
=== Usages ===
j1050 
=== Predecessor ===
j1047 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a174 #next: j1049  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1049 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:197) [bci: 56] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2 
=== Succesors ===
next: j1050 
=== Usages ===
j1051 j1062 
=== Predecessor ===
a1048 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a2 #next: j1050  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1050 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:208) [bci: 150] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1048 
=== Succesors ===
next: v1054 
=== Usages ===
j1051 v1055 
=== Predecessor ===
j1049 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: a1048 #next: v1054  <|@  <|@
f <@~|@floating>@ <|@
tid j1051 <|@
result v77|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:212) [bci: 165] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1049 
y: j1050 
=== Succesors ===
=== Usages ===
v1083 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: j1049 y: j1050  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 193] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
x: j1051 
y: j963 
=== Succesors ===
=== Usages ===
v1054 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j1051 y: j963  <|@  <|@
f <@*|@fixed>@ <|@
tid v1054 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:215) [bci: 201] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1083 
=== Succesors ===
trueSuccessor: v1053 
falseSuccessor: v1052 
=== Usages ===
=== Predecessor ===
j1050 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1083 #trueSuccessor: v1053 #falseSuccessor: v1052  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v76|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = XOR (x: v1|QWORD[.], y: v69|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v77|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v1054 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v1053 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:216) [bci: 204] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1061 
=== Usages ===
=== Predecessor ===
v1054 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid v1055 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 218] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1050 
y: j764 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1050 y: j764  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:218) [bci: 226] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1055 
=== Succesors ===
trueSuccessor: v1060 
falseSuccessor: v1056 
=== Usages ===
=== Predecessor ===
v1052 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1055 #trueSuccessor: v1060 #falseSuccessor: v1056  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD[.], y: v69|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1123 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1123  <|@  <|@
f <@*|@fixed>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v1060 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 229] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1087 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1087  <|@  <|@
f <@~|@floating>@ <|@
tid j1062 <|@
result v78|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 23]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 36028797018963967] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1049 
y: i941 
=== Succesors ===
=== Usages ===
j1084 v1211 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1049 y: i941  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
result [v78|QWORD[*] + v14|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j1062 
index: j940 
=== Succesors ===
=== Usages ===
i1087 i1088 v1089 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1062 index: j940  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1087 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:223) [bci: 243] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1211 
lastLocationAccess: - 
=== Succesors ===
next: v1066 
=== Usages ===
v1094 
=== Predecessor ===
v1056 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1211 lastLocationAccess: - #next: v1066  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 265] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1087 
y: i977 
=== Succesors ===
=== Usages ===
v1066 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1087 y: i977  <|@  <|@
f <@*|@fixed>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:227) [bci: 276] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1094 
=== Succesors ===
trueSuccessor: v1065 
falseSuccessor: v1063 
=== Usages ===
=== Predecessor ===
i1087 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1094 #trueSuccessor: v1065 #falseSuccessor: v1063  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1122 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1122  <|@  <|@
f <@*|@fixed>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v1065 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 279] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1066 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_LOAD
fence: STORE_LOAD
location: GC-Card
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:228) [bci: 285] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1088 
=== Usages ===
=== Predecessor ===
v1063 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: i1088  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1088 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:229) [bci: 294] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1211 
lastLocationAccess: - 
=== Succesors ===
next: v1071 
=== Usages ===
v1095 
=== Predecessor ===
v1067 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1211 lastLocationAccess: - #next: v1071  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 308] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1088 
y: i916 
=== Succesors ===
=== Usages ===
v1071 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1088 y: i916  <|@  <|@
f <@*|@fixed>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:230) [bci: 319] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.9
stamp: void
=== Inputs ===
condition: v1095 
=== Succesors ===
trueSuccessor: v1070 
falseSuccessor: v1068 
=== Usages ===
=== Predecessor ===
i1088 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1095 #trueSuccessor: v1070 #falseSuccessor: v1068  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v14|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1121 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1121  <|@  <|@
f <@*|@fixed>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v1070 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:231) [bci: 322] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1089 
=== Usages ===
=== Predecessor ===
v1071 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1089  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card
location: GC-Card
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:232) [bci: 358] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1211 
lastLocationAccess: - 
value: i916 
stateAfter: - 
=== Succesors ===
next: j1090 
=== Usages ===
=== Predecessor ===
v1068 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1211 lastLocationAccess: - value: i916 stateAfter: - #next: j1090  <|@  <|@
f <@~|@floating>@ <|@
tid v1208 <|@
result [r15|QWORD + 72] <|@
d <@d|@=== Debug Properties ===
displacement: 72
stamp: void*
stride: S1
=== Inputs ===
base: j1047 
index: - 
=== Succesors ===
=== Usages ===
j1090 v1093 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1047 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1090 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:237) [bci: 378] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1208 
lastLocationAccess: - 
=== Succesors ===
next: v1076 
=== Usages ===
v1073 j1086 v1210 
=== Predecessor ===
v1089 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1208 lastLocationAccess: - #next: v1076  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 392] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1090 
y: j764 
=== Succesors ===
=== Usages ===
v1076 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j1090 y: j764  <|@  <|@
f <@~|@floating>@ <|@
tid j1084 <|@
result v80|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.cardTableAddress(HotSpotG1WriteBarrierSnippets.java:131) [bci: 28]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:221) [bci: 232] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [140438306553856 - 36169235325517823] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j1062 
y: j940 
=== Succesors ===
=== Usages ===
v1080 v1092 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1062 y: j940  <|@  <|@
f <@*|@fixed>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:238) [bci: 398] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v1073 
=== Succesors ===
trueSuccessor: v1075 
falseSuccessor: v1074 
=== Usages ===
=== Predecessor ===
j1090 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1073 #trueSuccessor: v1075 #falseSuccessor: v1074  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v78|QWORD[*] + v14|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = ADD (x: v78|QWORD[*], y: v14|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v79|QWORD, y: v79|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 458] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1080 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1080  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{write_barrier_post(Word)void, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[GC-Card-Queue-Index, GC-Card-Queue-Buffer, GC-Card-Queue-Log, GC-Card], transition=LEAF_NO_VZERO}
descriptorName: write_barrier_post
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(ForeignCallDescriptor, Word) [bci: -1]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostBarrierStub(G1WriteBarrierSnippets.java:413) [bci: 5]
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:247) [bci: 461] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: j1084 
=== Succesors ===
next: v1119 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: j1084 #next: v1119  <|@  <|@
f <@*|@fixed>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v1080 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 401] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1091 
=== Usages ===
=== Predecessor ===
v1076 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j1091  <|@  <|@
f <@~|@floating>@ <|@
tid v1209 <|@
result [r15|QWORD + 88] <|@
d <@d|@=== Debug Properties ===
displacement: 88
stamp: void*
stride: S1
=== Inputs ===
base: j1047 
index: - 
=== Succesors ===
=== Usages ===
j1091 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1047 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1091 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: GC-Card-Queue-Buffer
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:239) [bci: 410] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1209 
lastLocationAccess: - 
=== Succesors ===
next: v1092 
=== Usages ===
v1210 
=== Predecessor ===
v1074 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1209 lastLocationAccess: - #next: v1092  <|@  <|@
f <@~|@floating>@ <|@
tid v1210 <|@
result [v81|QWORD + v79|QWORD * 1 - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
stamp: void*
stride: S1
=== Inputs ===
base: j1091 
index: j1090 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j1091 index: j1090  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Log
location: GC-Card-Queue-Log
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:244) [bci: 438] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1210 
lastLocationAccess: - 
value: j1084 
stateAfter: - 
=== Succesors ===
next: v1093 
=== Usages ===
=== Predecessor ===
j1091 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1210 lastLocationAccess: - value: j1084 stateAfter: - #next: v1093  <|@  <|@
f <@~|@floating>@ <|@
tid j1086 <|@
result v82|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:240) [bci: 424] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
x: j1090 
y: j907 
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j1090 y: j907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: GC-Card-Queue-Index
location: GC-Card-Queue-Index
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:245) [bci: 452] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1208 
lastLocationAccess: - 
value: j1086 
stateAfter: - 
=== Succesors ===
next: v1120 
=== Usages ===
=== Predecessor ===
v1092 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1208 lastLocationAccess: - value: j1086 stateAfter: - #next: v1120  <|@  <|@
f <@*|@fixed>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(G1WriteBarrierSnippets.java:253) [bci: 464] Substitution
at jdk.graal.compiler.replacements.gc.G1WriteBarrierSnippets.g1PostWriteBarrier(AddressNode$Address, Object, Object, boolean, int, G1WriteBarrierSnippets$Counters) [bci: -1] Substitution
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
v1093 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD + v79|QWORD * 1 - 8], y: v80|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v79|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a361 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: a# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v179 
values: a456 a174 a174 a174 a174 a174 a174 
=== Succesors ===
=== Usages ===
v1183 j999 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v179 values: a456 a174 a174 a174 a174 a174 a174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v178 v180 v1119 v1120 v1121 v1122 v1123 
=== Succesors ===
next: a1150 
=== Usages ===
a361 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v178 v180 v1119 v1120 v1121 v1122 v1123 #next: a1150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1150 <|@
result v84|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1172 
lastLocationAccess: - 
=== Succesors ===
next: i1151 
=== Usages ===
a472 v1182 
=== Predecessor ===
v179 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1172 lastLocationAccess: - #next: i1151  <|@  <|@
tid ?181 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?182 
=== Succesors ===
=== Usages ===
v811 i1151 i1152 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?182  <|@  <|@
f <@~|@floating>@ <|@
tid v1182 <|@
result [v84|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1150 
=== Succesors ===
=== Usages ===
i1151 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1151 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-121355|0xfffffffffffe25f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?181 
guard: - 
address: v1182 
lastLocationAccess: - 
=== Succesors ===
next: i1152 
=== Usages ===
v555 
=== Predecessor ===
a1150 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?181 guard: - address: v1182 lastLocationAccess: - #next: i1152  <|@  <|@
f <@~|@floating>@ <|@
tid v1183 <|@
result [v83|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a361 
index: - 
=== Succesors ===
=== Usages ===
i1152 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1152 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-121611|0xfffffffffffe24f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 175]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?181 
guard: - 
address: v1183 
lastLocationAccess: - 
=== Succesors ===
next: i1153 
=== Usages ===
i486 
=== Predecessor ===
i1151 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?181 guard: - address: v1183 lastLocationAccess: - #next: i1153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1153 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1177 
lastLocationAccess: - 
=== Succesors ===
next: i1154 
=== Usages ===
i465 v551 
=== Predecessor ===
i1152 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1177 lastLocationAccess: - #next: i1154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1154 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getCoder(AbstractStringBuilder.java:1689) [bci: 7]
at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 11]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v728 
=== Usages ===
v551 
=== Predecessor ===
i1153 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v728  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1153 
y: i1154 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1153 y: i1154  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v551 
=== Succesors ===
trueSuccessor: v726 
falseSuccessor: v727 
=== Usages ===
=== Predecessor ===
i1154 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v551 #trueSuccessor: v726 #falseSuccessor: v727  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v85|DWORD = MOV [v84|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v86|DWORD = MOV [v83|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v87|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1742) [bci: 21]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1155 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1155 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
=== Succesors ===
next: v732 
=== Usages ===
i191 i150 
=== Predecessor ===
v726 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - #next: v732  <|@  <|@
f <@~|@floating>@ <|@
tid i465 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1153 
=== Succesors ===
=== Usages ===
i193 i191 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1153  <|@  <|@
f <@~|@floating>@ <|@
tid i191 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 16]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1155 
y: i465 
=== Succesors ===
=== Usages ===
v1202 v478 v487 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i1155 y: i465  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 45]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i191 
y: i20 
=== Succesors ===
=== Usages ===
v732 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i191 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v732 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v478 
=== Succesors ===
trueSuccessor: v730 
falseSuccessor: v731 
=== Usages ===
=== Predecessor ===
i1155 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v478 #trueSuccessor: v730 #falseSuccessor: v731  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSXB v87|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHL (x: v88|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v90|DWORD, y: v90|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v730 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:400) [bci: 56]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v814 
=== Usages ===
=== Predecessor ===
v732 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v814  <|@  <|@
f <@~|@floating>@ <|@
tid i815 <|@
result int[-186649|0xfffffffffffd26e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -186649
stableDimension: 0
stamp: i32 [-186649]
stampKind: i32
value: int[-186649|0xfffffffffffd26e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v814 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
v730 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186649|0xfffffffffffd26e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v731 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:404) [bci: 76]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1156 
=== Usages ===
=== Predecessor ===
v732 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1156 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 18]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
=== Succesors ===
next: v736 
=== Usages ===
i193 
=== Predecessor ===
v731 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid i193 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 22]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1156 
y: i465 
=== Succesors ===
=== Usages ===
j1004 v480 v555 i486 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i1156 y: i465  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i193 
y: i20 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i193 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v734 
falseSuccessor: v735 
=== Usages ===
=== Predecessor ===
i1156 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v734 #falseSuccessor: v735  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SHL (x: v91|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v819 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid i820 <|@
result int[-187673|0xfffffffffffd22e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -187673
stableDimension: 0
stamp: i32 [-187673]
stampKind: i32
value: int[-187673|0xfffffffffffd22e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-187673|0xfffffffffffd22e7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1151 
y: i193 
=== Succesors ===
=== Usages ===
v740 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1151 y: i193  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v555 
=== Succesors ===
trueSuccessor: v738 
falseSuccessor: v739 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v555 #trueSuccessor: v738 #falseSuccessor: v739  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v92|DWORD, y: v85|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v821 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v821  <|@  <|@
f <@~|@floating>@ <|@
tid i822 <|@
result int[-188697|0xfffffffffffd1ee7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -188697
stableDimension: 0
stamp: i32 [-188697]
stampKind: i32
value: int[-188697|0xfffffffffffd1ee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
v738 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188697|0xfffffffffffd1ee7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v744 
=== Usages ===
=== Predecessor ===
v740 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v744  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 180]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1152 
y: i193 
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i1152 y: i193  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i486 
y: i191 
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i486 y: i191  <|@  <|@
f <@*|@fixed>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v742 
falseSuccessor: v743 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v742 #falseSuccessor: v743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SUB (x: v86|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v90|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v742 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v823 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v823  <|@  <|@
f <@~|@floating>@ <|@
tid i824 <|@
result int[-189721|0xfffffffffffd1ae7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -189721
stableDimension: 0
stamp: i32 [-189721]
stampKind: i32
value: int[-189721|0xfffffffffffd1ae7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
v742 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189721|0xfffffffffffd1ae7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: j997 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j997  <|@  <|@
f <@~|@floating>@ <|@
tid a472 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a1150 
=== Succesors ===
=== Usages ===
j997 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j997 <|@
result v95|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a472 
=== Succesors ===
next: j999 
=== Usages ===
v1201 
=== Predecessor ===
v743 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a472 #next: j999  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j999 <|@
result v96|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64
=== Inputs ===
object: a361 
=== Succesors ===
next: v1005 
=== Usages ===
v1202 
=== Predecessor ===
j997 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a361 #next: v1005  <|@  <|@
f <@~|@floating>@ <|@
tid v1201 <|@
result [v95|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j997 
index: - 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j997 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1202 <|@
result [v96|QWORD[*] + v90|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j999 
index: i191 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j999 index: i191  <|@  <|@
f <@~|@floating>@ <|@
tid j1004 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i193 
=== Succesors ===
=== Usages ===
v1005 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v1201 v1202 j1004 
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
j999 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v1201 v1202 j1004 #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 51]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32
=== Inputs ===
x: i1148 
y: i1155 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1148 y: i1155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:614) [bci: 52]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1175 
lastLocationAccess: - 
value: i150 
stateAfter: - 
=== Succesors ===
next: i1157 
=== Usages ===
=== Predecessor ===
v1005 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1175 lastLocationAccess: - value: i150 stateAfter: - #next: i1157  <|@  <|@
f <@~|@floating>@ <|@
tid v1184 <|@
result [v1|QWORD[.] + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1157 v510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1157 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1184 
lastLocationAccess: - 
=== Succesors ===
next: i1158 
=== Usages ===
i505 
=== Predecessor ===
v501 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1184 lastLocationAccess: - #next: i1158  <|@  <|@
f <@~|@floating>@ <|@
tid v1185 <|@
result [v2|QWORD[.] + 17] <|@
d <@d|@=== Debug Properties ===
displacement: 17
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1158 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8 [0 - 1] bits:0000000x
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i8 [0 - 1] bits:0000000x
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1185 
lastLocationAccess: - 
=== Succesors ===
next: v510 
=== Usages ===
i508 
=== Predecessor ===
i1157 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1185 lastLocationAccess: - #next: v510  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 57]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i1157 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1157  <|@  <|@
f <@~|@floating>@ <|@
tid i508 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
inputAlwaysPositive: false
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 61]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 32
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
value: i1158 
=== Succesors ===
=== Usages ===
i155 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1158  <|@  <|@
f <@~|@floating>@ <|@
tid i155 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 64]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i505 
y: i508 
=== Succesors ===
=== Usages ===
i509 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i505 y: i508  <|@  <|@
f <@~|@floating>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
resultBits: 8
stamp: i8 [0 - 1] bits:0000000x
=== Inputs ===
value: i155 
=== Succesors ===
=== Usages ===
v510 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.maybeLatin1
location: AbstractStringBuilder.maybeLatin1
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:615) [bci: 65]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1184 
lastLocationAccess: - 
value: i509 
stateAfter: - 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
i1158 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1184 lastLocationAccess: - value: i509 stateAfter: - #next: v334  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV v92|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v90|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v63|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = OR (x: v99|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v101|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v727 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1739) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:612) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v816 
=== Usages ===
=== Predecessor ===
v728 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v816  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
result long[5780|0x1694] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 5780
stableDimension: 0
stamp: i64 [5780]
stampKind: i64
value: long[5780|0x1694]
=== Inputs ===
=== Succesors ===
=== Usages ===
j810 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i817 <|@
result int[-185619|0xfffffffffffd2aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -185619
stableDimension: 0
stamp: i32 [-185619]
stampKind: i32
value: int[-185619|0xfffffffffffd2aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
v727 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-185619|0xfffffffffffd2aed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i809 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-189721 - -185619] bits:1...10100xxxx101110x1x1
valueDescription: i32
=== Inputs ===
merge: v806 
values: i815 i817 i820 i822 i824 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v806 values: i815 i817 i820 i822 i824  <|@  <|@
f <@~|@floating>@ <|@
tid j810 <|@
result v103|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [0 - 5780] bits:0...0x0xx0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v806 
values: j764 j818 j764 j764 j764 
=== Succesors ===
=== Usages ===
v811 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v806 values: j764 j818 j764 j764 j764  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v814 v816 v819 v821 v823 
=== Succesors ===
next: v811 
=== Usages ===
i809 j810 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v814 v816 v819 v821 v823 #next: v811  <|@  <|@
f <@*|@fixed>@ <|@
tid v811 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.AbstractStringBuilder.getBytes(AbstractStringBuilder.java:1669) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:613) [bci: 42]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?181 
actionAndReason: i809 
speculation: j810 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?181 actionAndReason: i809 speculation: j810  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:628) [bci: 26]
at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v784 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v784  <|@  <|@
f <@~|@floating>@ <|@
tid j786 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i785 <|@
result int[-115507|0xfffffffffffe3ccd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -115507
stableDimension: 0
stamp: i32 [-115507]
stampKind: i32
value: int[-115507|0xfffffffffffe3ccd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
v634 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115507|0xfffffffffffe3ccd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a322 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a322  <|@  <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<String.valueOf(Object)>
=== Inputs ===
arguments: a3 
=== Succesors ===
=== Usages ===
a322 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3  <|@  <|@
tid ?333 <|@
d <@d|@=== Debug Properties ===
bci: 10
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3195
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?323 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?323 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: PrintStream.java
sourceLine: 67
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?333 
values: a2 a3 
=== Succesors ===
=== Usages ===
?750 ?327 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a2 a3  <|@  <|@
tid ?750 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?323 
values: a2 a2 
=== Succesors ===
=== Usages ===
a322 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?323 values: a2 a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a322 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# java.lang.String
targetMethod: Direct#String.valueOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v517 
stateDuring: ?750 
=== Succesors ===
next: a326 
=== Usages ===
v518 
=== Predecessor ===
v116 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v517 stateDuring: ?750 #next: a326  <|@  <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: a# java.lang.String
signature: [UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<String.valueOf(Object)>
=== Inputs ===
arguments: a322 
=== Succesors ===
=== Usages ===
a326 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a322  <|@  <|@
tid ?327 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
sourceFile: PrintStream.java
sourceLine: 1465
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?323 
values: a2 
=== Succesors ===
=== Usages ===
?751 ?752 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?323 values: a2  <|@  <|@
tid ?751 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?327 
values: a2 
=== Succesors ===
=== Usages ===
a326 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?327 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a326 <|@
result v105|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: a# java.lang.String
targetMethod: Direct#String.valueOf
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v518 
stateDuring: ?751 
=== Succesors ===
next: v330 
=== Usages ===
v519 
=== Predecessor ===
a322 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v518 stateDuring: ?751 #next: v330  <|@  <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/io/PrintStream;, resolved>, UnresolvedJavaType<Ljava/lang/String;>]
stamp: void
targetMethod: HotSpotMethod<PrintStream.write(String)>
=== Inputs ===
arguments: a2 a326 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a326  <|@  <|@
tid ?752 <|@
d <@d|@=== Debug Properties ===
bci: 5
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<PrintStream.print(String)>
localsSize: 2
locksSize: 0
sourceFile: PrintStream.java
sourceLine: 1002
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?327 
=== Succesors ===
=== Usages ===
v330 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?327  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
bci: 5
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
at java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.write
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v519 
stateDuring: ?752 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
a326 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v519 stateDuring: ?752 #next: v117  <|@  <|@
f <@*|@fixed>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
v330 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v112 v117 v334 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v112 v117 v334 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3196) [bci: 16]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v772 
=== Usages ===
=== Predecessor ===
v123 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v772  <|@  <|@
f <@~|@floating>@ <|@
tid j774 <|@
result long[3220|0xc94] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i773 <|@
result int[-30259|0xffffffffffff89cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -30259
stableDimension: 0
stamp: i32 [-30259]
stampKind: i32
value: int[-30259|0xffffffffffff89cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30259|0xffffffffffff89cd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1159 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1159 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-133643|0xfffffffffffdf5f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1189 
lastLocationAccess: - 
=== Succesors ===
next: v82 
=== Usages ===
v1104 
=== Predecessor ===
v8 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1189 lastLocationAccess: - #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v1159 
=== Succesors ===
=== Usages ===
v82 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v1159  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}]
keySuccessors: [I@779f08fe
keys: [HotSpotType<Ljava/lang/StringBuilder;, resolved>, HotSpotType<Ljava/lang/String;, resolved>]
profileData: PROFILED keyProbabilities: [0.8796205061794431, 0.12037949382055685, 0.0]
stamp: void
=== Inputs ===
value: v1104 
=== Succesors ===
successors: v69 v74 v77 
=== Usages ===
=== Predecessor ===
v1159 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v1104 #successors: v69 v74 v77  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v106|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: v108|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v107|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i1160 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i1160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1160 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.length(AbstractStringBuilder.java:195) [bci: 1]
at java.lang.StringBuilder.length(StringBuilder.java:91) [bci: 1]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1180 
lastLocationAccess: - 
=== Succesors ===
next: v70 
=== Usages ===
i65 
=== Predecessor ===
v69 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1180 lastLocationAccess: - #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
i1160 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a1161 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1161 <|@
result v110|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1172 
lastLocationAccess: - 
=== Succesors ===
next: i1162 
=== Usages ===
v1187 
=== Predecessor ===
v74 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1172 lastLocationAccess: - #next: i1162  <|@  <|@
f <@~|@floating>@ <|@
tid v1187 <|@
result [v110|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1161 
=== Succesors ===
=== Usages ===
i1162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1162 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-135435|0xfffffffffffdeef5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1187 
lastLocationAccess: - 
=== Succesors ===
next: i1163 
=== Usages ===
i89 
=== Predecessor ===
a1161 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1187 lastLocationAccess: - #next: i1163  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1163 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1174 
lastLocationAccess: - 
=== Succesors ===
next: v75 
=== Usages ===
i535 
=== Predecessor ===
i1162 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1174 lastLocationAccess: - #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid i535 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1163 
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1163  <|@  <|@
f <@~|@floating>@ <|@
tid i89 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1162 
y: i535 
=== Succesors ===
=== Usages ===
i65 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1162 y: i535  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
i1163 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v112|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = SHR (x: v111|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i65 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v64 
values: i1160 i89 
=== Succesors ===
=== Usages ===
?24 i25 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v64 values: i1160 i89  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v70 v75 
=== Succesors ===
next: i1164 
=== Usages ===
i65 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v70 v75 #next: i1164  <|@  <|@
f <@~|@floating>@ <|@
tid v1186 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1164 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1164 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter$FormatSpecifier.flags
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 18]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1186 
lastLocationAccess: - 
=== Succesors ===
next: v28 
=== Usages ===
v19 i18 
=== Predecessor ===
v64 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1186 lastLocationAccess: - #next: v28  <|@  <|@
f <@~|@floating>@ <|@
tid i18 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 22]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
x: i1164 
y: i16 
=== Succesors ===
=== Usages ===
?24 ?105 ?35 ?358 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i1164 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$Flags.contains(Formatter.java:4647) [bci: 4]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3198) [bci: 22]
stamp: void
=== Inputs ===
x: i1164 
y: i16 
=== Succesors ===
=== Usages ===
v28 v55 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i1164 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stamp: i32
=== Inputs ===
x: i1126 
y: i65 
=== Succesors ===
=== Usages ===
?105 ?35 ?358 v41 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i1126 y: i65  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3200) [bci: 40]
profileData: PROFILED designatedSuccessorProbability: 0.8622565683438553
stamp: void
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v27 
falseSuccessor: v26 
=== Usages ===
=== Predecessor ===
i1164 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v27 #falseSuccessor: v26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = AND v115|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SUB (x: v3|DWORD, ~y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
next: v32 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
v27 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1165 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1165  <|@  <|@
tid ?24 <|@
d <@d|@=== Debug Properties ===
bci: 36
bytecode: isub
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 31]
sourceFile: Formatter.java
sourceLine: 3199
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i1126 i65 - a2 a3 i18 
=== Succesors ===
=== Usages ===
v1212 v1165 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i1126 i65 - a2 a3 i18  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1165 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-139019|0xfffffffffffde0f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?24 
guard: - 
address: v1188 
lastLocationAccess: - 
=== Succesors ===
next: v659 
=== Usages ===
v1124 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?24 guard: - address: v1188 lastLocationAccess: - #next: v659  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1165 
y: v1117 
=== Succesors ===
=== Usages ===
v659 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1165 y: v1117  <|@  <|@
f <@*|@fixed>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1124 
=== Succesors ===
trueSuccessor: v656 
falseSuccessor: v658 
=== Usages ===
=== Predecessor ===
v1165 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1124 #trueSuccessor: v656 #falseSuccessor: v658  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: a101 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a101  <|@  <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
referencedType: [null]
returnStamp: a java.lang.AbstractStringBuilder
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.append(CharSequence)>
=== Inputs ===
arguments: a2 a3 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a3  <|@  <|@
tid ?105 <|@
d <@d|@=== Debug Properties ===
bci: 45
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3201
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i18 i25 
=== Succesors ===
=== Usages ===
?102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i18 i25  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?105 
values: a2 a3 
=== Succesors ===
=== Usages ===
?757 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?105 values: a2 a3  <|@  <|@
tid ?757 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?102 
values: a2 
=== Succesors ===
=== Usages ===
a101 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?102 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a101 <|@
result v118|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
polymorphic: false
stamp: a java.lang.AbstractStringBuilder
targetMethod: Direct#AbstractStringBuilder.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v545 
stateDuring: ?757 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v656 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v545 stateDuring: ?757 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v33 
=== Predecessor ===
a101 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v32 v34 
=== Succesors ===
next: v1166 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v32 v34 #next: v1166  <|@  <|@
tid ?35 <|@
d <@d|@=== Debug Properties ===
bci: 51
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3203
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i18 i25 
=== Succesors ===
=== Usages ===
v1213 v1166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i18 i25  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-137227|0xfffffffffffde7f5]
deoptSpeculation: long[9624|0x2598]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?35 
guard: - 
address: v1188 
lastLocationAccess: - 
=== Succesors ===
next: v667 
=== Usages ===
v1125 
=== Predecessor ===
v33 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?35 guard: - address: v1188 lastLocationAccess: - #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1166 
y: v1117 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1166 y: v1117  <|@  <|@
f <@*|@fixed>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1125 
=== Succesors ===
trueSuccessor: v664 
falseSuccessor: v666 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1125 #trueSuccessor: v664 #falseSuccessor: v666  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 62]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
?355 v538 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
referencedType: [null]
returnStamp: a java.lang.AbstractStringBuilder
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, HotSpotResolvedPrimitiveType<char>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.append(char)>
=== Inputs ===
arguments: a2 i47 
=== Succesors ===
=== Usages ===
a354 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
v664 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i39 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v38 
values: i20 i51 
=== Succesors ===
=== Usages ===
i51 v41 ?358 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v38 values: i20 i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v37 
=== Succesors ===
next: v46 
=== Usages ===
i39 v43 v52 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v37 #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 58]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i39 
y: i25 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i39 y: i25  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 58]
profileData: PROFILED designatedSuccessorProbability: 0.6776029688895142
stamp: void
=== Inputs ===
condition: v41 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v43 
=== Usages ===
=== Predecessor ===
v38 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v41 #trueSuccessor: v45 #falseSuccessor: v43  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v117|DWORD, y: v119|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 61]
stamp: void
=== Inputs ===
=== Succesors ===
next: a354 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a354  <|@  <|@
tid ?358 <|@
d <@d|@=== Debug Properties ===
bci: 64
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3204
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - a2 a3 i18 i25 i39 
=== Succesors ===
=== Usages ===
?355 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - a2 a3 i18 i25 i39  <|@  <|@
tid ?355 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?358 
values: a2 i47 
=== Succesors ===
=== Usages ===
?759 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?358 values: a2 i47  <|@  <|@
tid ?759 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 246
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?355 
values: a2 
=== Succesors ===
=== Usages ===
a354 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?355 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a354 <|@
result v120|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
polymorphic: false
stamp: a java.lang.AbstractStringBuilder
targetMethod: Direct#AbstractStringBuilder.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v538 
stateDuring: ?759 
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v538 stateDuring: ?759 #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 70]
stamp: i32
=== Inputs ===
x: i39 
y: i16 
=== Succesors ===
=== Usages ===
i39 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i39 y: i16  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 54]
stamp: void
=== Inputs ===
loopBegin: v38 
=== Succesors ===
=== Usages ===
=== Predecessor ===
a354 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD v119|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = INC v119|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3206) [bci: 76]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v38 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v38 #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3206) [bci: 77]
profileData: PROFILED designatedSuccessorProbability: 0.862252690404634
stamp: void
=== Inputs ===
condition: v19 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v19 #trueSuccessor: v54 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
next: a342 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a342  <|@  <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
referencedType: [null]
returnStamp: a java.lang.AbstractStringBuilder
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>, UnresolvedJavaType<Ljava/lang/CharSequence;>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.append(CharSequence)>
=== Inputs ===
arguments: a2 a3 
=== Succesors ===
=== Usages ===
a342 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2 a3  <|@  <|@
tid ?346 <|@
d <@d|@=== Debug Properties ===
bci: 82
bytecode: invokeinterface
code: ResolvedJavaMethodBytecode<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>
localsSize: 6
locksSize: 0
sourceFile: Formatter.java
sourceLine: 3207
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?343 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?343 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?346 
values: a2 a3 
=== Succesors ===
=== Usages ===
?760 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?346 values: a2 a3  <|@  <|@
tid ?760 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(CharSequence)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 209
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?343 
values: a2 
=== Succesors ===
=== Usages ===
a342 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?343 values: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a342 <|@
result v122|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 2
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
polymorphic: false
stamp: a java.lang.AbstractStringBuilder
targetMethod: Direct#AbstractStringBuilder.append
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v542 
stateDuring: ?760 
=== Succesors ===
next: v61 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v542 stateDuring: ?760 #next: v61  <|@  <|@
f <@*|@fixed>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
a342 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v59  <|@  <|@
f <@*|@fixed>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v59 v61 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v59 v61 #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3209) [bci: 88]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1213 
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1213  <|@  <|@
f <@*|@fixed>@ <|@
tid v1213 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 537
mayConvertToGuard: true
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000002898[index: 324, len: 24, hash: 0x2ac35eae]: GuardMovement@2[HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>, 54, TypeCheckedInliningViolated]}
stamp: void
=== Inputs ===
stateBefore: ?35 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v666 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1212 
=== Usages ===
=== Predecessor ===
v659 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1212  <|@  <|@
f <@*|@fixed>@ <|@
tid v1212 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 544
mayConvertToGuard: true
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
reason: TypeCheckedInliningViolated
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x4d7933db]: FallbackDeopt@8[HotSpotMethod<Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)>, 45, FALSE, jdk.graal.compiler.phases.common.inlining.InliningUtil$ReceiverTypeSpeculationContext, HotSpotType<Ljava/lang/StringBuilder;, resolved>]}
stamp: void
=== Inputs ===
stateBefore: ?24 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v658 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?24  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v780 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid j365 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j766 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i781 <|@
result int[-19507|0xffffffffffffb3cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
rawvalue: -19507
stableDimension: 0
stamp: i32 [-19507]
stampKind: i32
value: int[-19507|0xffffffffffffb3cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i765 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v761 
=== Predecessor ===
v77 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19507|0xffffffffffffb3cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i765 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i32 [-115507 - -19507] bits:1...1xx0xxxxxx11001101
valueDescription: i32
=== Inputs ===
merge: v761 
values: i773 i781 i785 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v761 values: i773 i781 i785  <|@  <|@
f <@~|@floating>@ <|@
tid j766 <|@
result v124|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: i64 [20 - 3220] bits:0...0xxxxx0010100
valueDescription: i64
=== Inputs ===
merge: v761 
values: j774 j365 j786 
=== Succesors ===
=== Usages ===
v767 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v761 values: j774 j365 j786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v772 v780 v784 
=== Succesors ===
next: v767 
=== Usages ===
i765 j766 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v772 v780 v784 #next: v767  <|@  <|@
f <@*|@fixed>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?4 
actionAndReason: i765 
speculation: j766 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v761 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?4 actionAndReason: i765 speculation: j766  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v5|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v9|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v9|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v20|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SHL (x: v38|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = SUB (x: v43|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v50|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v51|QWORD[*] + v48|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = ADD (x: v63|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v65|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v85|DWORD = MOV [v84|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v86|DWORD = MOV [v83|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v87|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSXB v87|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHL (x: v88|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v90|DWORD, y: v90|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SHL (x: v91|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v92|DWORD, y: v85|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SUB (x: v86|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v90|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV v92|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v90|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v63|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = OR (x: v99|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v101|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v106|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: v108|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v107|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = SHL (x: v66|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHR v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = ADD (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v54|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHL v59|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = ADD (x: v61|QWORD, y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v112|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = SHR (x: v111|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = AND v115|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SUB (x: v3|DWORD, ~y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v117|DWORD, y: v119|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD v119|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = INC v119|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[_] = MOV [v70|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v71|DWORD[_], y: v71|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v72|QWORD, y: v72|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD + v72|QWORD * 1 - 8], y: v73|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v31|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = XOR (x: v1|QWORD[.], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD[.], y: v24|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD[*] + v126|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v33|QWORD[*], y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v76|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = XOR (x: v1|QWORD[.], y: v69|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v77|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD[.], y: v69|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v78|QWORD[*] + v125|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = ADD (x: v78|QWORD[*], y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v79|QWORD, y: v79|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD + v79|QWORD * 1 - 8], y: v80|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v79|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19507|0xffffffffffffb3cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188697|0xfffffffffffd1ee7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180505|0xfffffffffffd3ee7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-187673|0xfffffffffffd22e7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186649|0xfffffffffffd26e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-185619|0xfffffffffffd2aed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-179481|0xfffffffffffd42e7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-177433|0xfffffffffffd4ae7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30259|0xffffffffffff89cd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189721|0xfffffffffffd1ae7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115507|0xfffffffffffe3ccd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-181529|0xfffffffffffd3ae7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v5|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v9|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v9|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v20|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SHL (x: v38|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = SUB (x: v43|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v50|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v51|QWORD[*] + v48|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = ADD (x: v63|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v65|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v85|DWORD = MOV [v84|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v86|DWORD = MOV [v83|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v87|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSXB v87|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHL (x: v88|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v90|DWORD, y: v90|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SHL (x: v91|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v92|DWORD, y: v85|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SUB (x: v86|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v90|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV v92|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v90|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v63|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = OR (x: v99|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v101|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v106|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: v108|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v107|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = SHL (x: v66|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHR v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = ADD (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v54|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHL v59|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = ADD (x: v61|QWORD, y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v112|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = SHR (x: v111|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = AND v115|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SUB (x: v3|DWORD, ~y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v117|DWORD, y: v119|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD v119|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = INC v119|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[_] = MOV [v70|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v71|DWORD[_], y: v71|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v72|QWORD, y: v72|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD + v72|QWORD * 1 - 8], y: v73|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v31|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = XOR (x: v1|QWORD[.], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD[.], y: v24|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD[*] + v126|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v33|QWORD[*], y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v76|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = XOR (x: v1|QWORD[.], y: v69|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v77|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD[.], y: v69|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v78|QWORD[*] + v125|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = ADD (x: v78|QWORD[*], y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v79|QWORD, y: v79|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD + v79|QWORD * 1 - 8], y: v80|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v79|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19507|0xffffffffffffb3cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188697|0xfffffffffffd1ee7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180505|0xfffffffffffd3ee7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-187673|0xfffffffffffd22e7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186649|0xfffffffffffd26e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-185619|0xfffffffffffd2aed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-179481|0xfffffffffffd42e7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-177433|0xfffffffffffd4ae7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30259|0xffffffffffff89cd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189721|0xfffffffffffd1ae7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115507|0xfffffffffffe3ccd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-181529|0xfffffffffffd3ae7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v5|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v9|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v9|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v20|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SHL (x: v38|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = SUB (x: v43|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v50|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v51|QWORD[*] + v48|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = ADD (x: v63|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v65|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v85|DWORD = MOV [v84|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v86|DWORD = MOV [v83|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v87|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSXB v87|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHL (x: v88|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v90|DWORD, y: v90|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SHL (x: v91|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v92|DWORD, y: v85|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SUB (x: v86|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v90|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV v92|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v90|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v63|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = OR (x: v99|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v101|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v106|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: v108|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v107|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = SHL (x: v66|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHR v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = ADD (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v54|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHL v59|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = ADD (x: v61|QWORD, y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v112|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = SHR (x: v111|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = AND v115|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SUB (x: v3|DWORD, ~y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v117|DWORD, y: v119|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD v119|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = INC v119|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[_] = MOV [v70|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v71|DWORD[_], y: v71|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v72|QWORD, y: v72|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD + v72|QWORD * 1 - 8], y: v73|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v31|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = XOR (x: v1|QWORD[.], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD[.], y: v24|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD[*] + v126|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v33|QWORD[*], y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v76|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = XOR (x: v1|QWORD[.], y: v69|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v77|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD[.], y: v69|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v78|QWORD[*] + v125|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = ADD (x: v78|QWORD[*], y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v79|QWORD, y: v79|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD + v79|QWORD * 1 - 8], y: v80|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v79|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19507|0xffffffffffffb3cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188697|0xfffffffffffd1ee7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180505|0xfffffffffffd3ee7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-187673|0xfffffffffffd22e7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186649|0xfffffffffffd26e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-185619|0xfffffffffffd2aed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-179481|0xfffffffffffd42e7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-177433|0xfffffffffffd4ae7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30259|0xffffffffffff89cd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189721|0xfffffffffffd1ae7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115507|0xfffffffffffe3ccd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-181529|0xfffffffffffd3ae7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v5|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v9|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SHR (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v9|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = ADD (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v20|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v44|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v47|DWORD = MOVSXB v44|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = SHL (x: v38|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = SUB (x: v43|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v50|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v51|QWORD[*] + v48|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = ADD (x: v63|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v65|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [v83|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v84|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v85|DWORD = MOV [v84|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v86|DWORD = MOV [v83|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v87|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = MOVSXB v87|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = SHL (x: v88|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v90|DWORD, y: v90|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = SHL (x: v91|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v92|DWORD, y: v85|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = SUB (x: v86|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v90|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOV v92|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v90|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = ADD (x: v63|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|DWORD = OR (x: v99|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v101|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v106|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v107|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: v108|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v107|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = SHL (x: v66|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v38|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = SHR v43|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = ADD (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v54|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[*] = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHL v59|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = ADD (x: v61|QWORD, y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v110|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v112|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = SHR (x: v111|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v113|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [v114|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = AND v115|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = SUB (x: v3|DWORD, ~y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction v118|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v117|DWORD, y: v119|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD v119|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr   -1  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = INC v119|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr   -1  <|@ instruction v122|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[_] = MOV [v70|QWORD[.+]] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v71|DWORD[_], y: v71|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v72|QWORD, y: v72|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v74|QWORD + v72|QWORD * 1 - 8], y: v73|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 40], y: v75|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v31|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = XOR (x: v1|QWORD[.], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v24|QWORD[.], y: v24|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD[*] + v126|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[*] = ADD (x: v33|QWORD[*], y: v126|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v76|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[*] = XOR (x: v1|QWORD[.], y: v69|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v77|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v69|QWORD[.], y: v69|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v125|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v78|QWORD[*] + v125|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[*] = ADD (x: v78|QWORD[*], y: v125|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v79|QWORD, y: v79|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v81|QWORD + v79|QWORD * 1 - 8], y: v80|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|QWORD = LEA [v79|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 72], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-19507|0xffffffffffffb3cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-188697|0xfffffffffffd1ee7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-180505|0xfffffffffffd3ee7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-187673|0xfffffffffffd22e7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-186649|0xfffffffffffd26e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-185619|0xfffffffffffd2aed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-179481|0xfffffffffffd42e7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-177433|0xfffffffffffd4ae7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-30259|0xffffffffffff89cd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-189721|0xfffffffffffd1ae7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-115507|0xfffffffffffe3ccd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-181529|0xfffffffffffd3ae7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v55|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   22  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   24  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v5|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction v7|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v9|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v10|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   36  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v12|DWORD = SHR (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH v9|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v15|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v17|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction v18|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v19|DWORD = ADD (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH v20|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction v38|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction v39|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v40|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   86  <|@ instruction v42|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction v44|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: v44|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction v47|DWORD = MOVSXB v44|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v48|DWORD = SHL (x: v38|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v49|DWORD = SUB (x: v43|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction v50|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction v51|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction v52|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = LEA [v50|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = LEA [v51|QWORD[*] + v48|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction v63|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction v64|DWORD = ADD (x: v63|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH v65|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  156  <|@ instruction [v83|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction v84|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v85|DWORD = MOV [v84|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v86|DWORD = MOV [v83|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  164  <|@ instruction v87|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v87|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v88|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction v89|DWORD = MOVSXB v87|DWORD size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction v90|DWORD = SHL (x: v88|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v90|DWORD, y: v90|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction v91|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction v92|DWORD = SHL (x: v91|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: v92|DWORD, y: v85|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v93|DWORD = SUB (x: v86|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: v90|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction v95|QWORD[*] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction v96|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction v97|QWORD = MOV v92|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v90|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  218  <|@ instruction v98|DWORD = ADD (x: v63|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v98|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction v99|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  224  <|@ instruction v100|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  226  <|@ instruction v101|DWORD = OR (x: v99|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v101|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  244  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction v22|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction v23|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  258  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v106|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction v108|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction v107|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: v108|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v107|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction v109|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[v109|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  290  <|@ instruction v66|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction v67|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v68|DWORD = SHL (x: v66|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  304  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: v38|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction v53|DWORD = SHR v43|DWORD size: DWORD <|@ <|@
      nr  328  <|@ instruction v54|DWORD = ADD (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v54|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v56|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction v57|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v58|QWORD[*] = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction v59|QWORD = MOV v38|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction v60|QWORD = SHL v59|QWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction v62|QWORD[*] = ADD (x: v61|QWORD, y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  364  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  370  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction v110|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  386  <|@ instruction v112|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE v112|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction v113|DWORD = SHR (x: v111|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[v113|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  394  <|@ instruction [v114|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction v116|DWORD = AND v115|DWORD y: 1 size: DWORD <|@ <|@
      nr  400  <|@ instruction v117|DWORD = SUB (x: v3|DWORD, ~y: v114|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  420  <|@ instruction v118|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  432  <|@ instruction [v119|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: v117|DWORD, y: v119|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD v119|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  444  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction v121|DWORD = INC v119|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[v121|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  462  <|@ instruction v122|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v25|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  478  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  486  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr  496  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction v70|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  506  <|@ instruction v71|DWORD[_] = MOV [v70|QWORD[.+]] size: DWORD <|@ <|@
      nr  508  <|@ instruction TESTBRANCH (x: v71|DWORD[_], y: v71|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction v72|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  514  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v72|QWORD, y: v72|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction v74|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [v74|QWORD + v72|QWORD * 1 - 8], y: v73|QWORD[.]) size: QWORD <|@ <|@
      nr  524  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [r15|QWORD + 40], y: v75|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction v31|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v31|DWORD[_]) size: DWORD <|@ <|@
      nr  548  <|@ instruction v32|QWORD[*] = XOR (x: v1|QWORD[.], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr  550  <|@ instruction TESTCONSTBRANCH v32|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: v24|QWORD[.], y: v24|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction v126|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  560  <|@ instruction v33|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  562  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MOVB [v33|QWORD[*] + v126|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  590  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  592  <|@ instruction v35|QWORD[*] = ADD (x: v33|QWORD[*], y: v126|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr  602  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction v76|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  624  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v76|DWORD[_]) size: DWORD <|@ <|@
      nr  626  <|@ instruction v77|QWORD[*] = XOR (x: v1|QWORD[.], y: v69|QWORD[.]) size: QWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH v77|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction TESTBRANCH (x: v69|QWORD[.], y: v69|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction v125|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  638  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction MOVB [v78|QWORD[*] + v125|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  668  <|@ instruction v79|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  670  <|@ instruction v80|QWORD[*] = ADD (x: v78|QWORD[*], y: v125|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: v79|QWORD, y: v79|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction v81|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  678  <|@ instruction MOV (x: [v81|QWORD + v79|QWORD * 1 - 8], y: v80|QWORD[*]) size: QWORD <|@ <|@
      nr  680  <|@ instruction v82|QWORD = LEA [v79|QWORD - 8] size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [r15|QWORD + 72], y: v82|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  700  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction JUMP ~[int[-19507|0xffffffffffffb3cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction JUMP ~[int[-188697|0xfffffffffffd1ee7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[int[-180505|0xfffffffffffd3ee7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  718  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction JUMP ~[int[-187673|0xfffffffffffd22e7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[int[-186649|0xfffffffffffd26e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction JUMP ~[int[-185619|0xfffffffffffd2aed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[int[-179481|0xfffffffffffd42e7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction JUMP ~[int[-177433|0xfffffffffffd4ae7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[int[-30259|0xffffffffffff89cd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction JUMP ~[int[-189721|0xfffffffffffd1ae7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  758  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[int[-115507|0xfffffffffffe3ccd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  770  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  772  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction JUMP ~[int[-181529|0xfffffffffffd3ae7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  782  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v55|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   22  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   24  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v5|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction v7|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v9|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v10|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   36  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v12|DWORD = SHR (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH v9|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v15|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v17|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction v18|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v19|DWORD = ADD (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH v20|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction v38|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction v39|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v40|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   86  <|@ instruction v42|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction v44|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: v44|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction v47|DWORD = MOVSXB v44|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v48|DWORD = SHL (x: v38|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v49|DWORD = SUB (x: v43|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction v50|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction v51|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction v52|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = LEA [v50|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = LEA [v51|QWORD[*] + v48|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction v63|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction v64|DWORD = ADD (x: v63|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH v65|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  156  <|@ instruction [v83|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction v84|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v85|DWORD = MOV [v84|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v86|DWORD = MOV [v83|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  164  <|@ instruction v87|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v87|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v88|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction v89|DWORD = MOVSXB v87|DWORD size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction v90|DWORD = SHL (x: v88|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v90|DWORD, y: v90|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction v91|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction v92|DWORD = SHL (x: v91|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: v92|DWORD, y: v85|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v93|DWORD = SUB (x: v86|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: v90|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction v95|QWORD[*] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction v96|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction v97|QWORD = MOV v92|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v90|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  218  <|@ instruction v98|DWORD = ADD (x: v63|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr  220  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v98|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction v99|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  224  <|@ instruction v100|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  226  <|@ instruction v101|DWORD = OR (x: v99|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v101|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  244  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction v22|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction v23|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  258  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v106|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction v108|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction v107|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: v108|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v107|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction v109|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[v109|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  290  <|@ instruction v66|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  292  <|@ instruction v67|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v68|DWORD = SHL (x: v66|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  304  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: v38|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction v53|DWORD = SHR v43|DWORD size: DWORD <|@ <|@
      nr  328  <|@ instruction v54|DWORD = ADD (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v54|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v56|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction v57|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v58|QWORD[*] = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction v59|QWORD = MOV v38|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction v60|QWORD = SHL v59|QWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction v62|QWORD[*] = ADD (x: v61|QWORD, y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  364  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  370  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction v110|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  386  <|@ instruction v112|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE v112|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction v113|DWORD = SHR (x: v111|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[v113|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  394  <|@ instruction [v114|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction v116|DWORD = AND v115|DWORD y: 1 size: DWORD <|@ <|@
      nr  400  <|@ instruction v117|DWORD = SUB (x: v3|DWORD, ~y: v114|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  420  <|@ instruction v118|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  432  <|@ instruction [v119|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: v117|DWORD, y: v119|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD v119|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  444  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction v121|DWORD = INC v119|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[v121|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  462  <|@ instruction v122|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v25|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  478  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  486  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr  496  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction v70|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  506  <|@ instruction v71|DWORD[_] = MOV [v70|QWORD[.+]] size: DWORD <|@ <|@
      nr  508  <|@ instruction TESTBRANCH (x: v71|DWORD[_], y: v71|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction v72|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  514  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v72|QWORD, y: v72|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction v74|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [v74|QWORD + v72|QWORD * 1 - 8], y: v73|QWORD[.]) size: QWORD <|@ <|@
      nr  524  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [r15|QWORD + 40], y: v75|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction v31|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v31|DWORD[_]) size: DWORD <|@ <|@
      nr  548  <|@ instruction v32|QWORD[*] = XOR (x: v1|QWORD[.], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr  550  <|@ instruction TESTCONSTBRANCH v32|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: v24|QWORD[.], y: v24|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction v126|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  560  <|@ instruction v33|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  562  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MOVB [v33|QWORD[*] + v126|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  590  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  592  <|@ instruction v35|QWORD[*] = ADD (x: v33|QWORD[*], y: v126|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr  602  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction v76|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  624  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v76|DWORD[_]) size: DWORD <|@ <|@
      nr  626  <|@ instruction v77|QWORD[*] = XOR (x: v1|QWORD[.], y: v69|QWORD[.]) size: QWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH v77|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction TESTBRANCH (x: v69|QWORD[.], y: v69|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction v125|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  638  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction MOVB [v78|QWORD[*] + v125|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  668  <|@ instruction v79|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  670  <|@ instruction v80|QWORD[*] = ADD (x: v78|QWORD[*], y: v125|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: v79|QWORD, y: v79|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction v81|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  678  <|@ instruction MOV (x: [v81|QWORD + v79|QWORD * 1 - 8], y: v80|QWORD[*]) size: QWORD <|@ <|@
      nr  680  <|@ instruction v82|QWORD = LEA [v79|QWORD - 8] size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [r15|QWORD + 72], y: v82|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  700  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction JUMP ~[int[-19507|0xffffffffffffb3cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction JUMP ~[int[-188697|0xfffffffffffd1ee7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[int[-180505|0xfffffffffffd3ee7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  718  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction JUMP ~[int[-187673|0xfffffffffffd22e7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[int[-186649|0xfffffffffffd26e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction JUMP ~[int[-185619|0xfffffffffffd2aed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[int[-179481|0xfffffffffffd42e7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction JUMP ~[int[-177433|0xfffffffffffd4ae7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[int[-30259|0xffffffffffff89cd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction JUMP ~[int[-189721|0xfffffffffffd1ae7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  758  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[int[-115507|0xfffffffffffe3ccd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  770  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  772  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction JUMP ~[int[-181529|0xfffffffffffd3ae7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  782  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v55|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[128, 129[[216, 217[[242, 244[[256, 258[[288, 290[[302, 304[[316, 317[[362, 364[[368, 370[[376, 377[[418, 420[[442, 444[[460, 462[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v10|d [0, 10[[38, 41[[54, 57[[102, 105[[128, 129[[174, 177[[184, 187[[216, 217[[242, 243[[248, 251[[256, 257[[288, 289[[294, 297[[302, 303[[316, 317[[352, 354[[362, 363[[368, 369[[376, 377[[388, 391[[418, 419[[442, 443[[460, 461[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v52|q [0, 8[[126, 129[[214, 217[[240, 243[[254, 257[[286, 289[[300, 303[[316, 317[[350, 355[[362, 363[[368, 369[[374, 377[[416, 419[[440, 443[[458, 461[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 6[[124, 129[[212, 217[[238, 243[[252, 257[[284, 289[[298, 303[[314, 317[[348, 355[[360, 363[[366, 369[[372, 377[[414, 419[[438, 443[[456, 461[[536, 538[[614, 616[[688, 690[[696, 698[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[122, 129[[210, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[354, 355[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[354, 355[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[354, 355[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [6, 51[[138, 142[[266, 282[[380, 396[[702, 706[[742, 746[[766, 777[6 MustHaveRegister 12 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [8, 134[[138, 228[[236, 377[[380, 461[[474, 721[[722, 753[[754, 765[[766, 777[[778, 789[8 MustHaveRegister 18 MustHaveRegister 28 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister 86 MustHaveRegister 90 MustHaveRegister 134 MustHaveRegister 164 MustHaveRegister 170 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 228 MustHaveRegister 238 ShouldHaveRegister 246 MustHaveRegister 284 ShouldHaveRegister 292 MustHaveRegister 314 ShouldHaveRegister 372 ShouldHaveRegister 410 MustHaveRegister 414 ShouldHaveRegister 426 MustHaveRegister 438 ShouldHaveRegister 449 LiveAtLoopEnd 456 ShouldHaveRegister 476 MustHaveRegister 504 MustHaveRegister 546 MustHaveRegister 548 ShouldHaveRegister 560 MustHaveRegister 624 MustHaveRegister 626 ShouldHaveRegister 638 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|- [10, 114[[138, 224[[236, 332[[358, 377[[380, 461[[474, 721[[722, 753[[754, 765[[766, 777[[778, 789[10 MustHaveRegister 32 MustHaveRegister 48 MustHaveRegister 52 MustHaveRegister 74 MustHaveRegister 82 MustHaveRegister 96 MustHaveRegister 140 MustHaveRegister 144 MustHaveRegister 158 MustHaveRegister 166 MustHaveRegister 182 MustHaveRegister 224 MustHaveRegister 268 MustHaveRegister 278 MustHaveRegister 360 ShouldHaveRegister 382 MustHaveRegister 386 MustHaveRegister 416 ShouldHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [12, 16[[266, 282[[380, 404[[408, 412[[714, 721[12 MustHaveRegister 14 ShouldHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [18, 22[18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v4|d [22, 25[22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [20, 23[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [28, 42[28 MustHaveRegister 30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [30, 40[30 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [32, 44[32 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [34, 38[34 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [36, 58[[138, 146[36 MustHaveRegister 58 ShouldHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v8|d [40, 61[[138, 149[40 MustHaveRegister 60 ShouldHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q v7|d [42, 64[[138, 155[[236, 252[[282, 298[42 MustHaveRegister 154 ShouldHaveRegister 252 ShouldHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [50, 56[50 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d -1 [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v16|d [56, 134[[236, 266[[312, 358[[474, 502[[530, 608[[686, 694[[710, 714[[734, 742[[778, 789[56 MustHaveRegister 58 ShouldHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v11|d [58, 64[[236, 240[58 MustHaveRegister 60 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v19|d [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d rax|q [244, 250[244 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [246, 248[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v21|d [250, 254[250 MustHaveRegister 254 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q rax|q [258, 266[[474, 502[[530, 554[258 MustHaveRegister 544 MustHaveRegister 548 ShouldHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d -1 [478, 486[478 MustHaveRegister 480 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [484, 496[484 MustHaveRegister 488 MustHaveRegister 494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v26|d [486, 494[[534, 536[486 MustHaveRegister 494 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q -1 [496, 498[496 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v24|q [544, 546[544 MustHaveRegister 546 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v1|q [548, 550[548 MustHaveRegister 550 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v1|q [560, 564[[576, 582[[586, 592[560 MustHaveRegister 562 MustHaveRegister 580 MustHaveRegister 588 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [590, 602[590 MustHaveRegister 594 MustHaveRegister 600 MustHaveRegister 602 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v33|q [592, 600[[686, 688[592 MustHaveRegister 600 MustHaveRegister 688 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [598, 600[598 MustHaveRegister 600 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [602, 604[602 MustHaveRegister 604 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d -1 [70, 114[[312, 340[[710, 714[[734, 742[[778, 789[70 MustHaveRegister 104 ShouldHaveRegister 322 MustHaveRegister 328 ShouldHaveRegister 340 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d -1 [82, 94[82 MustHaveRegister 84 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d -1 [84, 120[[320, 352[84 MustHaveRegister 110 ShouldHaveRegister 120 ShouldHaveRegister 328 ShouldHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[v42|d]" v42|d -1 [86, 92[86 MustHaveRegister 88 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [88, 110[[320, 326[88 MustHaveRegister 110 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [90, 100[90 MustHaveRegister 96 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v42|d [92, 118[[320, 336[92 MustHaveRegister 118 ShouldHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v40|d [94, 116[[320, 334[94 MustHaveRegister 116 ShouldHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[v47|d]" v47|d -1 [100, 102[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d v38|d [104, 124[104 MustHaveRegister 106 MustHaveRegister 112 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d v43|d [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v46|q [116, 122[116 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v45|q [118, 124[118 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q -1 [120, 126[120 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d v43|d [326, 330[326 MustHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[v54|d]" v54|d v38|d [328, 330[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[v55|d]" v55|d -1 [782, 784[784 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v46|q [334, 338[334 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v45|q [336, 346[336 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [338, 348[338 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [340, 342[340 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v59|q [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q -1 [344, 346[344 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q v61|q [346, 350[346 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d -1 [144, 218[[282, 312[[502, 530[[608, 686[[694, 702[[706, 710[[722, 734[[754, 765[144 MustHaveRegister 146 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d v63|d [146, 152[[282, 286[146 MustHaveRegister 148 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d v64|d [148, 150[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[v66|d]" v66|d rax|q [290, 296[290 MustHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v67|d DWORD "[v67|d]" v67|d -1 [292, 294[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[v68|d]" v68|d v66|d [296, 300[296 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q rax|q [304, 312[[502, 530[[608, 645[[646, 649[[650, 653[[654, 663[[664, 685[[694, 701[304 MustHaveRegister 622 MustHaveRegister 626 ShouldHaveRegister 632 MustHaveRegister 644 ShouldHaveRegister 648 ShouldHaveRegister 652 ShouldHaveRegister 662 ShouldHaveRegister 684 ShouldHaveRegister 700 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q -1 [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[v71|d]" v71|d -1 [506, 514[506 MustHaveRegister 508 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q -1 [512, 524[512 MustHaveRegister 516 MustHaveRegister 522 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q v71|d [514, 522[[612, 614[514 MustHaveRegister 522 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q -1 [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[v76|d]" v76|d v69|q [622, 624[622 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q v1|q [626, 628[626 MustHaveRegister 628 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q v1|q [638, 642[[654, 660[[664, 670[638 MustHaveRegister 640 MustHaveRegister 658 MustHaveRegister 666 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [668, 680[668 MustHaveRegister 672 MustHaveRegister 678 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q v78|q [670, 678[[694, 696[670 MustHaveRegister 678 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q -1 [676, 678[676 MustHaveRegister 678 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q -1 [680, 682[680 MustHaveRegister 682 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q v13|q [156, 206[162 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[v84|d]" v84|d -1 [158, 202[158 MustHaveRegister 160 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[v85|d]" v85|d -1 [160, 192[160 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d -1 [162, 196[162 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[v87|d]" v87|d -1 [164, 172[164 MustHaveRegister 166 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[v88|d]" v88|d -1 [170, 218[170 MustHaveRegister 176 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d -1 [172, 184[172 MustHaveRegister 174 ShouldHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[v90|d]" v90|d v88|d [176, 212[176 MustHaveRegister 178 MustHaveRegister 198 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[v91|d]" v91|d -1 [182, 186[182 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[v92|d]" v92|d v91|d [186, 208[186 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 196 ShouldHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[v93|d]" v93|d v86|d [196, 198[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[v94|q]" v94|q v84|d [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[v95|q]" v95|q v94|q [204, 210[204 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[v96|q]" v96|q v83|q [206, 212[206 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[v97|q]" v97|q -1 [208, 214[208 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[v98|d]" v98|d v63|d [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v99|d DWORD "[v99|d]" v99|d -1 [222, 226[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[v100|d]" v100|d -1 [224, 226[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[v101|d]" v101|d v99|d [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[v102|d]" v102|d -1 [758, 760[760 MustHaveRegister  "NoSpillStore"
  v103|q QWORD "[v103|q]" v103|q -1 [758, 762[762 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[v104|q]" v104|q rax|q [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v105|q QWORD "[v105|q]" v105|q rax|q [370, 374[370 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d -1 [268, 272[268 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[v107|q]" v107|q v106|d [272, 275[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[v108|q]" v108|q -1 [270, 273[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v109|d DWORD "[v109|d]" v109|d v114|d [278, 281[278 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[v110|d]" v110|d -1 [382, 384[382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v111|d DWORD "[v111|d]" v111|d -1 [384, 390[384 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[v112|d]" v112|d -1 [386, 388[386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[v113|d]" v113|d v111|d [390, 393[390 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[v114|d]" v114|d v109|d [394, 404[[408, 412[[714, 721[400 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[v115|d]" v115|d -1 [396, 452[396 MustHaveRegister 398 MustHaveRegister 402 ShouldHaveRegister 452 ShouldHaveRegister  "NoSpillStore"
  v116|d DWORD "[v116|d]" v116|d v115|d [398, 450[[714, 721[[746, 753[398 MustHaveRegister  "NoSpillStore"
  v117|d DWORD "[v117|d]" v117|d v3|d [400, 450[[746, 753[400 MustHaveRegister 434 MustHaveRegister 449 LiveAtLoopEnd  "NoSpillStore"
  v118|q QWORD "[v118|q]" v118|q rax|q [420, 421[420 MustHaveRegister  "NoSpillStore"
  v119|d DWORD "[v119|d]" v119|d v121|d [432, 446[434 ShouldHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v120|q QWORD "[v120|q]" v120|q rax|q [444, 445[444 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[v121|d]" v121|d v119|d [446, 449[446 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[v122|q]" v122|q rax|q [462, 463[462 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[v123|d]" v123|d -1 [770, 772[772 MustHaveRegister  "NoSpillStore"
  v124|q QWORD "[v124|q]" v124|q -1 [770, 774[774 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[v125|q]" v125|q -1 [636, 642[[654, 660[[664, 670[636 MustHaveRegister 640 MustHaveRegister 658 MustHaveRegister 666 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[v126|q]" v126|q -1 [558, 564[[576, 582[[586, 592[558 MustHaveRegister 562 MustHaveRegister 580 MustHaveRegister 588 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[128, 129[[216, 217[[242, 244[[256, 258[[288, 290[[302, 304[[316, 317[[362, 364[[368, 370[[376, 377[[418, 420[[442, 444[[460, 462[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v10|d [0, 10[[38, 41[[54, 57[[102, 105[[128, 129[[174, 177[[184, 187[[216, 217[[242, 243[[248, 251[[256, 257[[288, 289[[294, 297[[302, 303[[316, 317[[352, 354[[362, 363[[368, 369[[376, 377[[388, 391[[418, 419[[442, 443[[460, 461[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v52|q [0, 8[[126, 129[[214, 217[[240, 243[[254, 257[[286, 289[[300, 303[[316, 317[[350, 355[[362, 363[[368, 369[[374, 377[[416, 419[[440, 443[[458, 461[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 6[[124, 129[[212, 217[[238, 243[[252, 257[[284, 289[[298, 303[[314, 317[[348, 355[[360, 363[[366, 369[[372, 377[[414, 419[[438, 443[[456, 461[[536, 538[[614, 616[[688, 690[[696, 698[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[122, 129[[210, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[354, 355[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[354, 355[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[354, 355[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 51[[138, 142[[266, 282[[380, 396[[702, 706[[742, 746[[766, 777[6 MustHaveRegister 12 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 114[8 MustHaveRegister 18 MustHaveRegister 28 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister 86 MustHaveRegister 90 MustHaveRegister  "SpillInDominator"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 37[10 MustHaveRegister 32 MustHaveRegister  "SpillInDominator"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 16[[266, 282[[380, 404[[408, 412[[714, 721[12 MustHaveRegister 14 ShouldHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdi|d]" v4|d -1 [18, 22[18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rdi|q]" v5|q v4|d [22, 25[22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [20, 23[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [28, 42[28 MustHaveRegister 30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [30, 40[30 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d -1 [32, 44[32 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d -1 [34, 38[34 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d -1 [36, 58[[138, 146[36 MustHaveRegister 58 ShouldHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d v8|d [40, 61[[138, 149[40 MustHaveRegister 60 ShouldHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q v7|d [42, 64[[138, 155[42 MustHaveRegister 154 ShouldHaveRegister  "SpillInDominator"
  v15|d DWORD "[rcx|d]" v15|d -1 [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r11|d]" v16|d -1 [50, 56[50 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rcx|d]" v17|d -1 [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r11|d]" v18|d v16|d [56, 114[56 MustHaveRegister 58 ShouldHaveRegister  "SpillInDominator"
  v19|d DWORD "[r9|d]" v19|d v11|d [58, 64[[236, 240[58 MustHaveRegister 60 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rcx|d]" v20|d v19|d [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d rax|q [244, 250[244 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [246, 248[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v21|d [250, 254[250 MustHaveRegister 254 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q rax|q [258, 266[[474, 502[[530, 554[258 MustHaveRegister 544 MustHaveRegister 548 ShouldHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rsi|d]" v26|d -1 [478, 486[478 MustHaveRegister 480 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[r10|q]" v27|q -1 [484, 496[484 MustHaveRegister 488 MustHaveRegister 494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v26|d [486, 494[[534, 536[486 MustHaveRegister 494 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[r8|q]" v29|q -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q -1 [496, 498[496 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rsi|d]" v31|d v24|q [544, 546[544 MustHaveRegister 546 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v1|q [548, 550[548 MustHaveRegister 550 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q v1|q [560, 564[[576, 582[[586, 592[560 MustHaveRegister 562 MustHaveRegister 580 MustHaveRegister 588 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q -1 [590, 602[590 MustHaveRegister 594 MustHaveRegister 600 MustHaveRegister 602 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdx|q]" v35|q v33|q [592, 600[[686, 688[592 MustHaveRegister 600 MustHaveRegister 688 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q -1 [598, 600[598 MustHaveRegister 600 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [602, 604[602 MustHaveRegister 604 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d -1 [70, 114[70 MustHaveRegister 104 ShouldHaveRegister  "OneSpillStore"
  v39|d DWORD "[rcx|d]" v39|d -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rcx|d]" v40|d -1 [82, 94[82 MustHaveRegister 84 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r8|d]" v41|d -1 [84, 120[[320, 352[84 MustHaveRegister 110 ShouldHaveRegister 120 ShouldHaveRegister 328 ShouldHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdi|d]" v42|d -1 [86, 92[86 MustHaveRegister 88 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r9|d]" v43|d -1 [88, 110[[320, 326[88 MustHaveRegister 110 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rsi|d]" v44|d -1 [90, 100[90 MustHaveRegister 96 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q v42|d [92, 118[[320, 336[92 MustHaveRegister 118 ShouldHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v40|d [94, 116[[320, 334[94 MustHaveRegister 116 ShouldHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d -1 [100, 102[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[rsi|d]" v48|d v38|d [104, 124[104 MustHaveRegister 106 MustHaveRegister 112 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r9|d]" v49|d v43|d [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q v46|q [116, 122[116 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[r10|q]" v51|q v45|q [118, 124[118 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q -1 [120, 126[120 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r9|d]" v53|d v43|d [326, 330[326 MustHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rsi|d]" v54|d v38|d [328, 330[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[r8|d]" v55|d -1 [782, 784[784 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rax|q]" v56|q v46|q [334, 338[334 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdi|q]" v57|q v45|q [336, 346[336 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [338, 348[338 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdx|q]" v59|q -1 [340, 342[340 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q v59|q [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdx|q]" v61|q -1 [344, 346[344 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q v61|q [346, 350[346 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r11|d]" v63|d -1 [144, 200[144 MustHaveRegister 146 ShouldHaveRegister  "OneSpillStore"
  v64|d DWORD "[r8|d]" v64|d v63|d [146, 152[[282, 286[146 MustHaveRegister 148 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rcx|d]" v65|d v64|d [148, 150[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[rax|d]" v66|d rax|q [290, 296[290 MustHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v67|d DWORD "[rcx|d]" v67|d -1 [292, 294[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rax|d]" v68|d v66|d [296, 300[296 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rax|q]" v69|q rax|q [304, 312[[502, 530[[608, 645[[646, 649[[650, 653[[654, 663[[664, 685[[694, 701[304 MustHaveRegister 622 MustHaveRegister 626 ShouldHaveRegister 632 MustHaveRegister 644 ShouldHaveRegister 648 ShouldHaveRegister 652 ShouldHaveRegister 662 ShouldHaveRegister 684 ShouldHaveRegister 700 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[rsi|d]" v71|d -1 [506, 514[506 MustHaveRegister 508 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r10|q]" v72|q -1 [512, 524[512 MustHaveRegister 516 MustHaveRegister 522 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v71|d [514, 522[[612, 614[514 MustHaveRegister 522 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[r8|q]" v74|q -1 [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rsi|q]" v75|q -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rsi|d]" v76|d v69|q [622, 624[622 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rdx|q]" v77|q v1|q [626, 628[626 MustHaveRegister 628 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdx|q]" v78|q v1|q [638, 642[[654, 660[[664, 670[638 MustHaveRegister 640 MustHaveRegister 658 MustHaveRegister 666 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[r10|q]" v79|q -1 [668, 680[668 MustHaveRegister 672 MustHaveRegister 678 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rdx|q]" v80|q v78|q [670, 678[[694, 696[670 MustHaveRegister 678 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[rsi|q]" v81|q -1 [676, 678[676 MustHaveRegister 678 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rsi|q]" v82|q -1 [680, 682[680 MustHaveRegister 682 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q v13|q [156, 206[162 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[rsi|d]" v84|d -1 [158, 202[158 MustHaveRegister 160 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r10|d]" v85|d -1 [160, 192[160 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[r8|d]" v86|d -1 [162, 196[162 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[rcx|d]" v87|d -1 [164, 172[164 MustHaveRegister 166 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[r9|d]" v88|d -1 [170, 200[170 MustHaveRegister 176 ShouldHaveRegister  "OneSpillStore"
  v89|d DWORD "[rax|d]" v89|d -1 [172, 184[172 MustHaveRegister 174 ShouldHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[rbp|d]" v90|d v88|d [176, 212[176 MustHaveRegister 178 MustHaveRegister 198 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[r13|d]" v91|d -1 [182, 186[182 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[r13|d]" v92|d v91|d [186, 208[186 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 196 ShouldHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[r8|d]" v93|d v86|d [196, 198[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[rsi|q]" v94|q v84|d [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rsi|q]" v95|q v94|q [204, 210[204 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[r10|q]" v96|q v83|q [206, 212[206 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[r8|q]" v97|q -1 [208, 214[208 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[r11|d]" v98|d v63|d [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v99|d DWORD "[rsi|d]" v99|d -1 [222, 226[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[r10|d]" v100|d -1 [224, 226[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[rsi|d]" v101|d v99|d [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[r10|d]" v102|d -1 [758, 760[760 MustHaveRegister  "NoSpillStore"
  v103|q QWORD "[r8|q]" v103|q -1 [758, 762[762 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rax|q]" v104|q rax|q [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v105|q QWORD "[rax|q]" v105|q rax|q [370, 374[370 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[rdx|d]" v106|d -1 [268, 272[268 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdx|q]" v107|q v106|d [272, 275[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[r11|q]" v108|q -1 [270, 273[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v109|d DWORD "[rdx|d]" v109|d v114|d [278, 281[278 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[rdx|d]" v110|d -1 [382, 384[382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v111|d DWORD "[rdx|d]" v111|d -1 [384, 390[384 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[r11|d]" v112|d -1 [386, 388[386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[rdx|d]" v113|d v111|d [390, 393[390 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[rdx|d]" v114|d v109|d [394, 404[[408, 412[[714, 721[400 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[r11|d]" v115|d -1 [396, 412[396 MustHaveRegister 398 MustHaveRegister 402 ShouldHaveRegister  "OneSpillStore"
  v116|d DWORD "[r9|d]" v116|d v115|d [398, 412[398 MustHaveRegister  "OneSpillStore"
  v117|d DWORD "[rcx|d]" v117|d v3|d [400, 412[400 MustHaveRegister  "SpillInDominator"
  v118|q QWORD "[rax|q]" v118|q rax|q [420, 421[420 MustHaveRegister  "NoSpillStore"
  v119|d DWORD "[r10|d]" v119|d v121|d [432, 436[434 ShouldHaveRegister  "OneSpillStore"
  v120|q QWORD "[rax|q]" v120|q rax|q [444, 445[444 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[r10|d]" v121|d v119|d [446, 449[446 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[rax|q]" v122|q rax|q [462, 463[462 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[r10|d]" v123|d -1 [770, 772[772 MustHaveRegister  "NoSpillStore"
  v124|q QWORD "[r8|q]" v124|q -1 [770, 774[774 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rsi|q]" v125|q -1 [636, 642[[654, 660[[664, 670[636 MustHaveRegister 640 MustHaveRegister 658 MustHaveRegister 666 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q -1 [558, 564[[576, 582[[586, 592[558 MustHaveRegister 562 MustHaveRegister 580 MustHaveRegister 588 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[vstack:0|q]" v1|q v1|q [114, 125[ "SpillInDominator"
  v128|q QWORD "[rbx|q]" v2|q v2|q [37, 114[[138, 200[48 MustHaveRegister 52 MustHaveRegister 74 MustHaveRegister 82 MustHaveRegister 96 MustHaveRegister 140 MustHaveRegister 144 MustHaveRegister 158 MustHaveRegister 166 MustHaveRegister 182 MustHaveRegister  "SpillInDominator"
  v129|q QWORD "[vstack:6|q]" v2|q v2|q [200, 215[ "SpillInDominator"
  v130|q QWORD "[vstack:7|q]" v13|q v13|q [236, 241[ "SpillInDominator"
  v131|d DWORD "[vstack:1|d]" v18|d v18|d [114, 127[ "SpillInDominator"
  v132|d DWORD "[vstack:8|d]" v38|d v38|d [312, 315[ "OneSpillStore"
  v133|d DWORD "[vstack:1|d]" v18|d v18|d [127, 132[ "SpillInDominator"
  v134|q QWORD "[vstack:0|q]" v1|q v1|q [125, 132[ "SpillInDominator"
  v135|q QWORD "[rdx|q]" v1|q v1|q [132, 134[[138, 200[134 MustHaveRegister 164 MustHaveRegister 170 MustHaveRegister  "SpillInDominator"
  v136|d DWORD "[r11|d]" v18|d v18|d [132, 134[134 MustHaveRegister  "SpillInDominator"
  v137|d DWORD "[vstack:1|d]" v18|d v18|d [236, 241[ "SpillInDominator"
  v138|q QWORD "[vstack:0|q]" v1|q v1|q [200, 213[ "SpillInDominator"
  v139|d DWORD "[vstack:4|d]" v63|d v63|d [200, 215[ "OneSpillStore"
  v140|d DWORD "[vstack:5|d]" v88|d v88|d [200, 215[ "OneSpillStore"
  v141|d DWORD "[vstack:5|d]" v88|d v88|d [215, 218[218 ShouldHaveRegister  "OneSpillStore"
  v142|d DWORD "[vstack:4|d]" v63|d v63|d [215, 218[[282, 312[[502, 530[[608, 686[[694, 702[[706, 710[[722, 734[[754, 758[218 ShouldHaveRegister  "OneSpillStore"
  v143|q QWORD "[vstack:0|q]" v1|q v1|q [213, 219[ "SpillInDominator"
  v144|q QWORD "[vstack:6|q]" v2|q v2|q [215, 223[ "SpillInDominator"
  v145|q QWORD "[rdx|q]" v1|q v1|q [219, 228[[236, 239[220 MustHaveRegister 222 MustHaveRegister 228 MustHaveRegister 238 ShouldHaveRegister  "SpillInDominator"
  v146|d DWORD "[r9|d]" v63|d v63|d [758, 765[ "OneSpillStore"
  v147|q QWORD "[rcx|q]" v2|q v2|q [223, 224[224 MustHaveRegister  "SpillInDominator"
  v148|q QWORD "[vstack:0|q]" v1|q v1|q [239, 245[ "SpillInDominator"
  v149|q QWORD "[vstack:6|q]" v2|q v2|q [236, 241[ "SpillInDominator"
  v150|q QWORD "[vstack:7|q]" v13|q v13|q [241, 252[252 ShouldHaveRegister  "SpillInDominator"
  v151|q QWORD "[vstack:6|q]" v2|q v2|q [241, 266[ "SpillInDominator"
  v152|d DWORD "[vstack:1|d]" v18|d v18|d [241, 266[[312, 358[[474, 502[[530, 608[[686, 694[[710, 714[[734, 742[[778, 782[ "SpillInDominator"
  v153|q QWORD "[rdx|q]" v1|q v1|q [245, 253[246 MustHaveRegister  "SpillInDominator"
  v154|q QWORD "[vstack:7|q]" v13|q v13|q [282, 287[ "SpillInDominator"
  v155|q QWORD "[rcx|q]" v2|q v2|q [266, 282[268 MustHaveRegister 278 MustHaveRegister  "SpillInDominator"
  v156|d DWORD "[r9|d]" v18|d v18|d [782, 789[ "SpillInDominator"
  v157|q QWORD "[vstack:0|q]" v1|q v1|q [253, 282[ "SpillInDominator"
  v158|q QWORD "[rdx|q]" v1|q v1|q [282, 285[284 ShouldHaveRegister  "SpillInDominator"
  v159|q QWORD "[vstack:6|q]" v2|q v2|q [282, 287[ "SpillInDominator"
  v160|q QWORD "[vstack:0|q]" v1|q v1|q [285, 291[ "SpillInDominator"
  v161|q QWORD "[vstack:7|q]" v13|q v13|q [287, 298[298 ShouldHaveRegister  "SpillInDominator"
  v162|q QWORD "[vstack:6|q]" v2|q v2|q [287, 332[[358, 377[360 ShouldHaveRegister  "SpillInDominator"
  v163|q QWORD "[rdx|q]" v1|q v1|q [291, 299[292 MustHaveRegister  "SpillInDominator"
  v164|q QWORD "[rcx|q]" v2|q v2|q [380, 387[382 MustHaveRegister 386 MustHaveRegister  "SpillInDominator"
  v165|q QWORD "[vstack:0|q]" v1|q v1|q [299, 377[[380, 408[314 ShouldHaveRegister 372 ShouldHaveRegister  "SpillInDominator"
  v166|q QWORD "[rbx|q]" v1|q v1|q [408, 417[410 MustHaveRegister 414 ShouldHaveRegister  "SpillInDominator"
  v167|d DWORD "[vstack:8|d]" v38|d v38|d [315, 320[ "OneSpillStore"
  v168|d DWORD "[r10|d]" v38|d v38|d [320, 340[[710, 714[[734, 742[[778, 789[322 MustHaveRegister 328 ShouldHaveRegister 340 ShouldHaveRegister  "OneSpillStore"
  v169|q QWORD "[r8|q]" v2|q v2|q [387, 417[416 ShouldHaveRegister  "SpillInDominator"
  v170|q QWORD "[vstack:6|q]" v2|q v2|q [417, 461[[474, 721[[722, 753[[754, 765[[766, 777[[778, 782[458 ShouldHaveRegister  "SpillInDominator"
  v171|d DWORD "[vstack:10|d]" v115|d v115|d [412, 417[ "OneSpillStore"
  v172|d DWORD "[vstack:11|d]" v116|d v116|d [412, 417[ "OneSpillStore"
  v173|d DWORD "[vstack:9|d]" v117|d v117|d [412, 417[ "SpillInDominator"
  v174|q QWORD "[vstack:0|q]" v1|q v1|q [417, 424[ "SpillInDominator"
  v175|d DWORD "[vstack:9|d]" v117|d v117|d [417, 432[ "SpillInDominator"
  v176|d DWORD "[vstack:10|d]" v115|d v115|d [417, 450[ "OneSpillStore"
  v177|d DWORD "[vstack:11|d]" v116|d v116|d [417, 450[[714, 721[ "OneSpillStore"
  v178|q QWORD "[rdx|q]" v1|q v1|q [424, 439[426 MustHaveRegister 438 ShouldHaveRegister  "SpillInDominator"
  v179|d DWORD "[rcx|d]" v117|d v117|d [432, 436[434 MustHaveRegister  "SpillInDominator"
  v180|d DWORD "[r11|d]" v115|d v115|d [450, 452[452 ShouldHaveRegister  "OneSpillStore"
  v181|q QWORD "[rcx|q]" v2|q v2|q [782, 789[ "SpillInDominator"
  v182|d DWORD "[r9|d]" v116|d v116|d [746, 753[ "OneSpillStore"
  v183|q QWORD "[vstack:0|q]" v1|q v1|q [439, 461[449 LiveAtLoopEnd 456 ShouldHaveRegister  "SpillInDominator"
  v184|d DWORD "[vstack:9|d]" v117|d v117|d [436, 441[ "SpillInDominator"
  v185|d DWORD "[vstack:12|d]" v119|d v119|d [436, 441[ "OneSpillStore"
  v186|d DWORD "[vstack:12|d]" v119|d v119|d [441, 446[446 ShouldHaveRegister  "OneSpillStore"
  v187|d DWORD "[vstack:9|d]" v117|d v117|d [441, 450[449 LiveAtLoopEnd  "SpillInDominator"
  v188|q QWORD "[r11|q]" v1|q v1|q [474, 721[[722, 753[[754, 765[[766, 777[[778, 789[476 MustHaveRegister 504 MustHaveRegister 546 MustHaveRegister 548 ShouldHaveRegister 560 MustHaveRegister 624 MustHaveRegister 626 ShouldHaveRegister 638 MustHaveRegister  "SpillInDominator"
  v189|d DWORD "[rcx|d]" v117|d v117|d [746, 753[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   22  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   24  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v5|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction v7|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v9|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v10|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   36  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v12|DWORD = SHR (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH v9|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v15|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v17|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction v18|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v19|DWORD = ADD (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH v20|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction v38|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction v39|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v40|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   86  <|@ instruction v42|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction v44|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: v44|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction v47|DWORD = MOVSXB v44|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v48|DWORD = SHL (x: v38|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v49|DWORD = SUB (x: v43|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction v50|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction v51|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction v52|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = LEA [v50|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = LEA [v51|QWORD[*] + v48|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = STACKMOVE (input: v127|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = STACKMOVE (input: v131|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction v63|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction v64|DWORD = ADD (x: v63|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH v65|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  156  <|@ instruction [v83|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction v84|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v85|DWORD = MOV [v84|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v86|DWORD = MOV [v83|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  164  <|@ instruction v87|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v87|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v88|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction v89|DWORD = MOVSXB v87|DWORD size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction v90|DWORD = SHL (x: v88|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v90|DWORD, y: v90|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction v91|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction v92|DWORD = SHL (x: v91|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: v92|DWORD, y: v85|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v93|DWORD = SUB (x: v86|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: v90|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction v95|QWORD[*] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction v96|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction v97|QWORD = MOV v92|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v90|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = STACKMOVE (input: v138|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = STACKMOVE (input: v129|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = STACKMOVE (input: v140|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = STACKMOVE (input: v139|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  216  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  218  <|@ instruction v98|DWORD = ADD (x: v63|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v98|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction v99|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction v100|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  226  <|@ instruction v101|DWORD = OR (x: v99|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v101|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = STACKMOVE (input: v137|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = STACKMOVE (input: v149|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = STACKMOVE (input: v130|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  244  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE v148|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction v22|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction v23|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE v153|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  258  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v106|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction v108|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction v107|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: v108|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v107|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction v109|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[v109|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE v158|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = STACKMOVE (input: v159|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = STACKMOVE (input: v154|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  290  <|@ instruction v66|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction v67|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v68|DWORD = SHL (x: v66|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  304  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = STACKMOVE (input: v132|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: v38|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction v53|DWORD = SHR v43|DWORD size: DWORD <|@ <|@
      nr  328  <|@ instruction v54|DWORD = ADD (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v54|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v56|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction v57|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v58|QWORD[*] = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction v59|QWORD = MOV v38|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction v60|QWORD = SHL v59|QWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction v62|QWORD[*] = ADD (x: v61|QWORD, y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  364  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  370  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction v110|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  386  <|@ instruction v112|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE v112|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction v113|DWORD = SHR (x: v111|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[v113|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  394  <|@ instruction [v114|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction v116|DWORD = AND v115|DWORD y: 1 size: DWORD <|@ <|@
      nr  400  <|@ instruction v117|DWORD = SUB (x: v3|DWORD, ~y: v114|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = STACKMOVE (input: v172|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = STACKMOVE (input: v171|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = STACKMOVE (input: v173|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  420  <|@ instruction v118|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  432  <|@ instruction [v119|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: v117|DWORD, y: v119|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = MOVE v178|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = STACKMOVE (input: v184|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = STACKMOVE (input: v185|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD v119|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  444  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction v121|DWORD = INC v119|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[v121|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  462  <|@ instruction v122|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v25|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  478  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  486  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr  496  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction v70|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  506  <|@ instruction v71|DWORD[_] = MOV [v70|QWORD[.+]] size: DWORD <|@ <|@
      nr  508  <|@ instruction TESTBRANCH (x: v71|DWORD[_], y: v71|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction v72|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  514  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v72|QWORD, y: v72|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction v74|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [v74|QWORD + v72|QWORD * 1 - 8], y: v73|QWORD[.]) size: QWORD <|@ <|@
      nr  524  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [r15|QWORD + 40], y: v75|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction v31|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v31|DWORD[_]) size: DWORD <|@ <|@
      nr  548  <|@ instruction v32|QWORD[*] = XOR (x: v1|QWORD[.], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr  550  <|@ instruction TESTCONSTBRANCH v32|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: v24|QWORD[.], y: v24|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction v126|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  560  <|@ instruction v33|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  562  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MOVB [v33|QWORD[*] + v126|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  590  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  592  <|@ instruction v35|QWORD[*] = ADD (x: v33|QWORD[*], y: v126|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr  602  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction v76|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  624  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v76|DWORD[_]) size: DWORD <|@ <|@
      nr  626  <|@ instruction v77|QWORD[*] = XOR (x: v1|QWORD[.], y: v69|QWORD[.]) size: QWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH v77|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction TESTBRANCH (x: v69|QWORD[.], y: v69|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction v125|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  638  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction MOVB [v78|QWORD[*] + v125|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  668  <|@ instruction v79|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  670  <|@ instruction v80|QWORD[*] = ADD (x: v78|QWORD[*], y: v125|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: v79|QWORD, y: v79|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction v81|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  678  <|@ instruction MOV (x: [v81|QWORD + v79|QWORD * 1 - 8], y: v80|QWORD[*]) size: QWORD <|@ <|@
      nr  680  <|@ instruction v82|QWORD = LEA [v79|QWORD - 8] size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [r15|QWORD + 72], y: v82|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  700  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction JUMP ~[int[-19507|0xffffffffffffb3cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction JUMP ~[int[-188697|0xfffffffffffd1ee7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[int[-180505|0xfffffffffffd3ee7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  718  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction JUMP ~[int[-187673|0xfffffffffffd22e7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[int[-186649|0xfffffffffffd26e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction JUMP ~[int[-185619|0xfffffffffffd2aed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[int[-179481|0xfffffffffffd42e7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction JUMP ~[int[-177433|0xfffffffffffd4ae7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[int[-30259|0xffffffffffff89cd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction JUMP ~[int[-189721|0xfffffffffffd1ae7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  758  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[int[-115507|0xfffffffffffe3ccd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  770  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  772  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction JUMP ~[int[-181529|0xfffffffffffd3ae7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  782  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v55|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[128, 129[[216, 217[[242, 244[[256, 258[[288, 290[[302, 304[[316, 317[[362, 364[[368, 370[[376, 377[[418, 420[[442, 444[[460, 462[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v10|d [0, 10[[38, 41[[54, 57[[102, 105[[128, 129[[174, 177[[184, 187[[216, 217[[242, 243[[248, 251[[256, 257[[288, 289[[294, 297[[302, 303[[316, 317[[352, 354[[362, 363[[368, 369[[376, 377[[388, 391[[418, 419[[442, 443[[460, 461[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v52|q [0, 8[[126, 129[[214, 217[[240, 243[[254, 257[[286, 289[[300, 303[[316, 317[[350, 355[[362, 363[[368, 369[[374, 377[[416, 419[[440, 443[[458, 461[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 6[[124, 129[[212, 217[[238, 243[[252, 257[[284, 289[[298, 303[[314, 317[[348, 355[[360, 363[[366, 369[[372, 377[[414, 419[[438, 443[[456, 461[[536, 538[[614, 616[[688, 690[[696, 698[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[122, 129[[210, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[354, 355[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[354, 355[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[354, 355[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 51[[138, 142[[266, 282[[380, 396[[702, 706[[742, 746[[766, 777[6 MustHaveRegister 12 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 114[8 MustHaveRegister 18 MustHaveRegister 28 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister 86 MustHaveRegister 90 MustHaveRegister  "StoreAtDefinition"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 37[10 MustHaveRegister 32 MustHaveRegister  "StoreAtDefinition"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 16[[266, 282[[380, 404[[408, 412[[714, 721[12 MustHaveRegister 14 ShouldHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdi|d]" v4|d -1 [18, 22[18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rdi|q]" v5|q v4|d [22, 25[22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [20, 23[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [28, 42[28 MustHaveRegister 30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [30, 40[30 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d -1 [32, 44[32 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d -1 [34, 38[34 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d -1 [36, 58[[138, 146[36 MustHaveRegister 58 ShouldHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d v8|d [40, 61[[138, 149[40 MustHaveRegister 60 ShouldHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q v7|d [42, 64[[138, 155[42 MustHaveRegister 154 ShouldHaveRegister  "StoreAtDefinition"
  v15|d DWORD "[rcx|d]" v15|d -1 [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r11|d]" v16|d -1 [50, 56[50 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rcx|d]" v17|d -1 [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r11|d]" v18|d v16|d [56, 114[56 MustHaveRegister 58 ShouldHaveRegister  "StoreAtDefinition"
  v19|d DWORD "[r9|d]" v19|d v11|d [58, 64[[236, 240[58 MustHaveRegister 60 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rcx|d]" v20|d v19|d [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d rax|q [244, 250[244 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [246, 248[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v21|d [250, 254[250 MustHaveRegister 254 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q rax|q [258, 266[[474, 502[[530, 554[258 MustHaveRegister 544 MustHaveRegister 548 ShouldHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rsi|d]" v26|d -1 [478, 486[478 MustHaveRegister 480 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[r10|q]" v27|q -1 [484, 496[484 MustHaveRegister 488 MustHaveRegister 494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v26|d [486, 494[[534, 536[486 MustHaveRegister 494 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[r8|q]" v29|q -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q -1 [496, 498[496 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rsi|d]" v31|d v24|q [544, 546[544 MustHaveRegister 546 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v1|q [548, 550[548 MustHaveRegister 550 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q v1|q [560, 564[[576, 582[[586, 592[560 MustHaveRegister 562 MustHaveRegister 580 MustHaveRegister 588 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q -1 [590, 602[590 MustHaveRegister 594 MustHaveRegister 600 MustHaveRegister 602 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdx|q]" v35|q v33|q [592, 600[[686, 688[592 MustHaveRegister 600 MustHaveRegister 688 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q -1 [598, 600[598 MustHaveRegister 600 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [602, 604[602 MustHaveRegister 604 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d -1 [70, 114[70 MustHaveRegister 104 ShouldHaveRegister  "OneSpillStore"
  v39|d DWORD "[rcx|d]" v39|d -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rcx|d]" v40|d -1 [82, 94[82 MustHaveRegister 84 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r8|d]" v41|d -1 [84, 120[[320, 352[84 MustHaveRegister 110 ShouldHaveRegister 120 ShouldHaveRegister 328 ShouldHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdi|d]" v42|d -1 [86, 92[86 MustHaveRegister 88 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r9|d]" v43|d -1 [88, 110[[320, 326[88 MustHaveRegister 110 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rsi|d]" v44|d -1 [90, 100[90 MustHaveRegister 96 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q v42|d [92, 118[[320, 336[92 MustHaveRegister 118 ShouldHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v40|d [94, 116[[320, 334[94 MustHaveRegister 116 ShouldHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d -1 [100, 102[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[rsi|d]" v48|d v38|d [104, 124[104 MustHaveRegister 106 MustHaveRegister 112 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r9|d]" v49|d v43|d [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q v46|q [116, 122[116 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[r10|q]" v51|q v45|q [118, 124[118 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q -1 [120, 126[120 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r9|d]" v53|d v43|d [326, 330[326 MustHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rsi|d]" v54|d v38|d [328, 330[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[r8|d]" v55|d -1 [782, 784[784 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rax|q]" v56|q v46|q [334, 338[334 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdi|q]" v57|q v45|q [336, 346[336 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [338, 348[338 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdx|q]" v59|q -1 [340, 342[340 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q v59|q [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdx|q]" v61|q -1 [344, 346[344 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q v61|q [346, 350[346 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r11|d]" v63|d -1 [144, 200[144 MustHaveRegister 146 ShouldHaveRegister  "OneSpillStore"
  v64|d DWORD "[r8|d]" v64|d v63|d [146, 152[[282, 286[146 MustHaveRegister 148 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rcx|d]" v65|d v64|d [148, 150[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[rax|d]" v66|d rax|q [290, 296[290 MustHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v67|d DWORD "[rcx|d]" v67|d -1 [292, 294[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rax|d]" v68|d v66|d [296, 300[296 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rax|q]" v69|q rax|q [304, 312[[502, 530[[608, 645[[646, 649[[650, 653[[654, 663[[664, 685[[694, 701[304 MustHaveRegister 622 MustHaveRegister 626 ShouldHaveRegister 632 MustHaveRegister 644 ShouldHaveRegister 648 ShouldHaveRegister 652 ShouldHaveRegister 662 ShouldHaveRegister 684 ShouldHaveRegister 700 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[rsi|d]" v71|d -1 [506, 514[506 MustHaveRegister 508 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r10|q]" v72|q -1 [512, 524[512 MustHaveRegister 516 MustHaveRegister 522 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v71|d [514, 522[[612, 614[514 MustHaveRegister 522 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[r8|q]" v74|q -1 [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rsi|q]" v75|q -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rsi|d]" v76|d v69|q [622, 624[622 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rdx|q]" v77|q v1|q [626, 628[626 MustHaveRegister 628 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdx|q]" v78|q v1|q [638, 642[[654, 660[[664, 670[638 MustHaveRegister 640 MustHaveRegister 658 MustHaveRegister 666 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[r10|q]" v79|q -1 [668, 680[668 MustHaveRegister 672 MustHaveRegister 678 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rdx|q]" v80|q v78|q [670, 678[[694, 696[670 MustHaveRegister 678 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[rsi|q]" v81|q -1 [676, 678[676 MustHaveRegister 678 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rsi|q]" v82|q -1 [680, 682[680 MustHaveRegister 682 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q v13|q [156, 206[162 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[rsi|d]" v84|d -1 [158, 202[158 MustHaveRegister 160 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r10|d]" v85|d -1 [160, 192[160 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[r8|d]" v86|d -1 [162, 196[162 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[rcx|d]" v87|d -1 [164, 172[164 MustHaveRegister 166 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[r9|d]" v88|d -1 [170, 200[170 MustHaveRegister 176 ShouldHaveRegister  "OneSpillStore"
  v89|d DWORD "[rax|d]" v89|d -1 [172, 184[172 MustHaveRegister 174 ShouldHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[rbp|d]" v90|d v88|d [176, 212[176 MustHaveRegister 178 MustHaveRegister 198 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[r13|d]" v91|d -1 [182, 186[182 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[r13|d]" v92|d v91|d [186, 208[186 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 196 ShouldHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[r8|d]" v93|d v86|d [196, 198[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[rsi|q]" v94|q v84|d [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rsi|q]" v95|q v94|q [204, 210[204 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[r10|q]" v96|q v83|q [206, 212[206 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[r8|q]" v97|q -1 [208, 214[208 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[r11|d]" v98|d v63|d [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v99|d DWORD "[rsi|d]" v99|d -1 [222, 226[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[r10|d]" v100|d -1 [224, 226[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[rsi|d]" v101|d v99|d [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[r10|d]" v102|d -1 [758, 760[760 MustHaveRegister  "NoSpillStore"
  v103|q QWORD "[r8|q]" v103|q -1 [758, 762[762 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rax|q]" v104|q rax|q [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v105|q QWORD "[rax|q]" v105|q rax|q [370, 374[370 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[rdx|d]" v106|d -1 [268, 272[268 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdx|q]" v107|q v106|d [272, 275[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[r11|q]" v108|q -1 [270, 273[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v109|d DWORD "[rdx|d]" v109|d v114|d [278, 281[278 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[rdx|d]" v110|d -1 [382, 384[382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v111|d DWORD "[rdx|d]" v111|d -1 [384, 390[384 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[r11|d]" v112|d -1 [386, 388[386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[rdx|d]" v113|d v111|d [390, 393[390 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[rdx|d]" v114|d v109|d [394, 404[[408, 412[[714, 721[400 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[r11|d]" v115|d -1 [396, 412[396 MustHaveRegister 398 MustHaveRegister 402 ShouldHaveRegister  "OneSpillStore"
  v116|d DWORD "[r9|d]" v116|d v115|d [398, 412[398 MustHaveRegister  "OneSpillStore"
  v117|d DWORD "[rcx|d]" v117|d v3|d [400, 412[400 MustHaveRegister  "StoreAtDefinition"
  v118|q QWORD "[rax|q]" v118|q rax|q [420, 421[420 MustHaveRegister  "NoSpillStore"
  v119|d DWORD "[r10|d]" v119|d v121|d [432, 436[434 ShouldHaveRegister  "OneSpillStore"
  v120|q QWORD "[rax|q]" v120|q rax|q [444, 445[444 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[r10|d]" v121|d v119|d [446, 449[446 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[rax|q]" v122|q rax|q [462, 463[462 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[r10|d]" v123|d -1 [770, 772[772 MustHaveRegister  "NoSpillStore"
  v124|q QWORD "[r8|q]" v124|q -1 [770, 774[774 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rsi|q]" v125|q -1 [636, 642[[654, 660[[664, 670[636 MustHaveRegister 640 MustHaveRegister 658 MustHaveRegister 666 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q -1 [558, 564[[576, 582[[586, 592[558 MustHaveRegister 562 MustHaveRegister 580 MustHaveRegister 588 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[vstack:0|q]" v1|q v1|q [114, 125[ "StoreAtDefinition"
  v128|q QWORD "[rbx|q]" v2|q v2|q [37, 114[[138, 200[48 MustHaveRegister 52 MustHaveRegister 74 MustHaveRegister 82 MustHaveRegister 96 MustHaveRegister 140 MustHaveRegister 144 MustHaveRegister 158 MustHaveRegister 166 MustHaveRegister 182 MustHaveRegister  "StoreAtDefinition"
  v129|q QWORD "[vstack:6|q]" v2|q v2|q [200, 215[ "StoreAtDefinition"
  v130|q QWORD "[vstack:7|q]" v13|q v13|q [236, 241[ "StoreAtDefinition"
  v131|d DWORD "[vstack:1|d]" v18|d v18|d [114, 127[ "StoreAtDefinition"
  v132|d DWORD "[vstack:8|d]" v38|d v38|d [312, 315[ "OneSpillStore"
  v133|d DWORD "[vstack:1|d]" v18|d v18|d [127, 132[ "StoreAtDefinition"
  v134|q QWORD "[vstack:0|q]" v1|q v1|q [125, 132[ "StoreAtDefinition"
  v135|q QWORD "[rdx|q]" v1|q v1|q [132, 134[[138, 200[134 MustHaveRegister 164 MustHaveRegister 170 MustHaveRegister  "StoreAtDefinition"
  v136|d DWORD "[r11|d]" v18|d v18|d [132, 134[134 MustHaveRegister  "StoreAtDefinition"
  v137|d DWORD "[vstack:1|d]" v18|d v18|d [236, 241[ "StoreAtDefinition"
  v138|q QWORD "[vstack:0|q]" v1|q v1|q [200, 213[ "StoreAtDefinition"
  v139|d DWORD "[vstack:4|d]" v63|d v63|d [200, 215[ "OneSpillStore"
  v140|d DWORD "[vstack:5|d]" v88|d v88|d [200, 215[ "OneSpillStore"
  v141|d DWORD "[vstack:5|d]" v88|d v88|d [215, 218[218 ShouldHaveRegister  "OneSpillStore"
  v142|d DWORD "[vstack:4|d]" v63|d v63|d [215, 218[[282, 312[[502, 530[[608, 686[[694, 702[[706, 710[[722, 734[[754, 758[218 ShouldHaveRegister  "OneSpillStore"
  v143|q QWORD "[vstack:0|q]" v1|q v1|q [213, 219[ "StoreAtDefinition"
  v144|q QWORD "[vstack:6|q]" v2|q v2|q [215, 223[ "StoreAtDefinition"
  v145|q QWORD "[rdx|q]" v1|q v1|q [219, 228[[236, 239[220 MustHaveRegister 222 MustHaveRegister 228 MustHaveRegister 238 ShouldHaveRegister  "StoreAtDefinition"
  v146|d DWORD "[r9|d]" v63|d v63|d [758, 765[ "OneSpillStore"
  v147|q QWORD "[rcx|q]" v2|q v2|q [223, 224[224 MustHaveRegister  "StoreAtDefinition"
  v148|q QWORD "[vstack:0|q]" v1|q v1|q [239, 245[ "StoreAtDefinition"
  v149|q QWORD "[vstack:6|q]" v2|q v2|q [236, 241[ "StoreAtDefinition"
  v150|q QWORD "[vstack:7|q]" v13|q v13|q [241, 252[252 ShouldHaveRegister  "StoreAtDefinition"
  v151|q QWORD "[vstack:6|q]" v2|q v2|q [241, 266[ "StoreAtDefinition"
  v152|d DWORD "[vstack:1|d]" v18|d v18|d [241, 266[[312, 358[[474, 502[[530, 608[[686, 694[[710, 714[[734, 742[[778, 782[ "StoreAtDefinition"
  v153|q QWORD "[rdx|q]" v1|q v1|q [245, 253[246 MustHaveRegister  "StoreAtDefinition"
  v154|q QWORD "[vstack:7|q]" v13|q v13|q [282, 287[ "StoreAtDefinition"
  v155|q QWORD "[rcx|q]" v2|q v2|q [266, 282[268 MustHaveRegister 278 MustHaveRegister  "StoreAtDefinition"
  v156|d DWORD "[r9|d]" v18|d v18|d [782, 789[ "StoreAtDefinition"
  v157|q QWORD "[vstack:0|q]" v1|q v1|q [253, 282[ "StoreAtDefinition"
  v158|q QWORD "[rdx|q]" v1|q v1|q [282, 285[284 ShouldHaveRegister  "StoreAtDefinition"
  v159|q QWORD "[vstack:6|q]" v2|q v2|q [282, 287[ "StoreAtDefinition"
  v160|q QWORD "[vstack:0|q]" v1|q v1|q [285, 291[ "StoreAtDefinition"
  v161|q QWORD "[vstack:7|q]" v13|q v13|q [287, 298[298 ShouldHaveRegister  "StoreAtDefinition"
  v162|q QWORD "[vstack:6|q]" v2|q v2|q [287, 332[[358, 377[360 ShouldHaveRegister  "StoreAtDefinition"
  v163|q QWORD "[rdx|q]" v1|q v1|q [291, 299[292 MustHaveRegister  "StoreAtDefinition"
  v164|q QWORD "[rcx|q]" v2|q v2|q [380, 387[382 MustHaveRegister 386 MustHaveRegister  "StoreAtDefinition"
  v165|q QWORD "[vstack:0|q]" v1|q v1|q [299, 377[[380, 408[314 ShouldHaveRegister 372 ShouldHaveRegister  "StoreAtDefinition"
  v166|q QWORD "[rbx|q]" v1|q v1|q [408, 417[410 MustHaveRegister 414 ShouldHaveRegister  "StoreAtDefinition"
  v167|d DWORD "[vstack:8|d]" v38|d v38|d [315, 320[ "OneSpillStore"
  v168|d DWORD "[r10|d]" v38|d v38|d [320, 340[[710, 714[[734, 742[[778, 789[322 MustHaveRegister 328 ShouldHaveRegister 340 ShouldHaveRegister  "OneSpillStore"
  v169|q QWORD "[r8|q]" v2|q v2|q [387, 417[416 ShouldHaveRegister  "StoreAtDefinition"
  v170|q QWORD "[vstack:6|q]" v2|q v2|q [417, 461[[474, 721[[722, 753[[754, 765[[766, 777[[778, 782[458 ShouldHaveRegister  "StoreAtDefinition"
  v171|d DWORD "[vstack:10|d]" v115|d v115|d [412, 417[ "OneSpillStore"
  v172|d DWORD "[vstack:11|d]" v116|d v116|d [412, 417[ "OneSpillStore"
  v173|d DWORD "[vstack:9|d]" v117|d v117|d [412, 417[ "StoreAtDefinition"
  v174|q QWORD "[vstack:0|q]" v1|q v1|q [417, 424[ "StoreAtDefinition"
  v175|d DWORD "[vstack:9|d]" v117|d v117|d [417, 432[ "StoreAtDefinition"
  v176|d DWORD "[vstack:10|d]" v115|d v115|d [417, 450[ "OneSpillStore"
  v177|d DWORD "[vstack:11|d]" v116|d v116|d [417, 450[[714, 721[ "OneSpillStore"
  v178|q QWORD "[rdx|q]" v1|q v1|q [424, 439[426 MustHaveRegister 438 ShouldHaveRegister  "StoreAtDefinition"
  v179|d DWORD "[rcx|d]" v117|d v117|d [432, 436[434 MustHaveRegister  "StoreAtDefinition"
  v180|d DWORD "[r11|d]" v115|d v115|d [450, 452[452 ShouldHaveRegister  "OneSpillStore"
  v181|q QWORD "[rcx|q]" v2|q v2|q [782, 789[ "StoreAtDefinition"
  v182|d DWORD "[r9|d]" v116|d v116|d [746, 753[ "OneSpillStore"
  v183|q QWORD "[vstack:0|q]" v1|q v1|q [439, 461[449 LiveAtLoopEnd 456 ShouldHaveRegister  "StoreAtDefinition"
  v184|d DWORD "[vstack:9|d]" v117|d v117|d [436, 441[ "StoreAtDefinition"
  v185|d DWORD "[vstack:12|d]" v119|d v119|d [436, 441[ "OneSpillStore"
  v186|d DWORD "[vstack:12|d]" v119|d v119|d [441, 446[446 ShouldHaveRegister  "OneSpillStore"
  v187|d DWORD "[vstack:9|d]" v117|d v117|d [441, 450[449 LiveAtLoopEnd  "StoreAtDefinition"
  v188|q QWORD "[r11|q]" v1|q v1|q [474, 721[[722, 753[[754, 765[[766, 777[[778, 789[476 MustHaveRegister 504 MustHaveRegister 546 MustHaveRegister 548 ShouldHaveRegister 560 MustHaveRegister 624 MustHaveRegister 626 ShouldHaveRegister 638 MustHaveRegister  "StoreAtDefinition"
  v189|d DWORD "[rcx|d]" v117|d v117|d [746, 753[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   22  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   24  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v5|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction v7|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v9|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v10|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   36  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v12|DWORD = SHR (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH v9|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v15|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v17|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction v18|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v19|DWORD = ADD (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH v20|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction v38|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction v39|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v40|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   86  <|@ instruction v42|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction v44|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: v44|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction v47|DWORD = MOVSXB v44|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v48|DWORD = SHL (x: v38|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v49|DWORD = SUB (x: v43|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction v50|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction v51|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction v52|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = LEA [v50|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = LEA [v51|QWORD[*] + v48|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = STACKMOVE (input: v127|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = STACKMOVE (input: v131|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction v63|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction v64|DWORD = ADD (x: v63|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH v65|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[v13|QWORD[.]] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  156  <|@ instruction [v83|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction v84|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v85|DWORD = MOV [v84|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v86|DWORD = MOV [v83|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  164  <|@ instruction v87|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v87|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v88|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction v89|DWORD = MOVSXB v87|DWORD size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction v90|DWORD = SHL (x: v88|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v90|DWORD, y: v90|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction v91|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction v92|DWORD = SHL (x: v91|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: v92|DWORD, y: v85|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v93|DWORD = SUB (x: v86|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: v90|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  202  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction v95|QWORD[*] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction v96|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction v97|QWORD = MOV v92|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v90|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = STACKMOVE (input: v138|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = STACKMOVE (input: v129|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = STACKMOVE (input: v140|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = STACKMOVE (input: v139|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  216  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  218  <|@ instruction v98|DWORD = ADD (x: v63|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v98|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction v99|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction v100|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  226  <|@ instruction v101|DWORD = OR (x: v99|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v101|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = STACKMOVE (input: v137|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = STACKMOVE (input: v149|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = STACKMOVE (input: v130|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  244  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE v148|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction v22|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction v23|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE v153|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  258  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v106|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction v108|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction v107|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: v108|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v107|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction v109|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~[v109|DWORD] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE v158|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = STACKMOVE (input: v159|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = STACKMOVE (input: v154|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  290  <|@ instruction v66|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction v67|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v68|DWORD = SHL (x: v66|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  304  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = STACKMOVE (input: v132|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: v38|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction v53|DWORD = SHR v43|DWORD size: DWORD <|@ <|@
      nr  328  <|@ instruction v54|DWORD = ADD (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v54|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v56|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction v57|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v58|QWORD[*] = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction v59|QWORD = MOV v38|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction v60|QWORD = SHL v59|QWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction v62|QWORD[*] = ADD (x: v61|QWORD, y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  364  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  370  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction v110|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  386  <|@ instruction v112|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE v112|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction v113|DWORD = SHR (x: v111|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[v113|DWORD] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  394  <|@ instruction [v114|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction v116|DWORD = AND v115|DWORD y: 1 size: DWORD <|@ <|@
      nr  400  <|@ instruction v117|DWORD = SUB (x: v3|DWORD, ~y: v114|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = STACKMOVE (input: v172|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = STACKMOVE (input: v171|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = STACKMOVE (input: v173|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  420  <|@ instruction v118|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction JUMP ~[int[0|0x0]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  432  <|@ instruction [v119|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: v117|DWORD, y: v119|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = MOVE v178|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = STACKMOVE (input: v184|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = STACKMOVE (input: v185|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD v119|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  444  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction v121|DWORD = INC v119|DWORD size: DWORD <|@ <|@
      nr  448  <|@ instruction JUMP ~[v121|DWORD] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  462  <|@ instruction v122|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction v25|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  478  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  486  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr  496  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction v70|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  506  <|@ instruction v71|DWORD[_] = MOV [v70|QWORD[.+]] size: DWORD <|@ <|@
      nr  508  <|@ instruction TESTBRANCH (x: v71|DWORD[_], y: v71|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction v72|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  514  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v72|QWORD, y: v72|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction v74|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [v74|QWORD + v72|QWORD * 1 - 8], y: v73|QWORD[.]) size: QWORD <|@ <|@
      nr  524  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [r15|QWORD + 40], y: v75|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction v31|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v31|DWORD[_]) size: DWORD <|@ <|@
      nr  548  <|@ instruction v32|QWORD[*] = XOR (x: v1|QWORD[.], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr  550  <|@ instruction TESTCONSTBRANCH v32|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: v24|QWORD[.], y: v24|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction v126|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  560  <|@ instruction v33|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  562  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MOVB [v33|QWORD[*] + v126|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  590  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  592  <|@ instruction v35|QWORD[*] = ADD (x: v33|QWORD[*], y: v126|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr  602  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction v76|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  624  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v76|DWORD[_]) size: DWORD <|@ <|@
      nr  626  <|@ instruction v77|QWORD[*] = XOR (x: v1|QWORD[.], y: v69|QWORD[.]) size: QWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH v77|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction TESTBRANCH (x: v69|QWORD[.], y: v69|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction v125|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  638  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  644  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  648  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  652  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction MOVB [v78|QWORD[*] + v125|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  668  <|@ instruction v79|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  670  <|@ instruction v80|QWORD[*] = ADD (x: v78|QWORD[*], y: v125|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: v79|QWORD, y: v79|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction v81|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  678  <|@ instruction MOV (x: [v81|QWORD + v79|QWORD * 1 - 8], y: v80|QWORD[*]) size: QWORD <|@ <|@
      nr  680  <|@ instruction v82|QWORD = LEA [v79|QWORD - 8] size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [r15|QWORD + 72], y: v82|QWORD) size: QWORD <|@ <|@
      nr  684  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  700  <|@ instruction JUMP ~[v69|QWORD[.]] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction JUMP ~[int[-19507|0xffffffffffffb3cd], long[20|0x14]] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction JUMP ~[int[-188697|0xfffffffffffd1ee7], long[0|0x0]] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction JUMP ~[int[-180505|0xfffffffffffd3ee7]] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  718  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  724  <|@ instruction JUMP ~[int[-187673|0xfffffffffffd22e7], long[0|0x0]] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[int[-186649|0xfffffffffffd26e7], long[0|0x0]] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  732  <|@ instruction JUMP ~[int[-185619|0xfffffffffffd2aed], long[5780|0x1694]] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction JUMP ~[int[-179481|0xfffffffffffd42e7]] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction JUMP ~[int[-177433|0xfffffffffffd4ae7]] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  744  <|@ instruction JUMP ~[int[-30259|0xffffffffffff89cd], long[3220|0xc94]] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction JUMP ~[int[-189721|0xfffffffffffd1ae7], long[0|0x0]] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  758  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  768  <|@ instruction JUMP ~[int[-115507|0xfffffffffffe3ccd], long[1940|0x794]] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  770  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  772  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction JUMP ~[int[-181529|0xfffffffffffd3ae7]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  782  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v55|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[128, 129[[216, 217[[242, 244[[256, 258[[288, 290[[302, 304[[316, 317[[362, 364[[368, 370[[376, 377[[418, 420[[442, 444[[460, 462[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v10|d [0, 10[[38, 41[[54, 57[[102, 105[[128, 129[[174, 177[[184, 187[[216, 217[[242, 243[[248, 251[[256, 257[[288, 289[[294, 297[[302, 303[[316, 317[[352, 354[[362, 363[[368, 369[[376, 377[[388, 391[[418, 419[[442, 443[[460, 461[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v52|q [0, 8[[126, 129[[214, 217[[240, 243[[254, 257[[286, 289[[300, 303[[316, 317[[350, 355[[362, 363[[368, 369[[374, 377[[416, 419[[440, 443[[458, 461[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 6[[124, 129[[212, 217[[238, 243[[252, 257[[284, 289[[298, 303[[314, 317[[348, 355[[360, 363[[366, 369[[372, 377[[414, 419[[438, 443[[456, 461[[536, 538[[614, 616[[688, 690[[696, 698[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[122, 129[[210, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[354, 355[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[354, 355[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[354, 355[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[128, 129[[216, 217[[242, 243[[256, 257[[288, 289[[302, 303[[316, 317[[362, 363[[368, 369[[376, 377[[418, 419[[442, 443[[460, 461[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [6, 51[[138, 142[[266, 282[[380, 396[[702, 706[[742, 746[[766, 777[6 MustHaveRegister 12 MustHaveRegister 396 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [8, 114[8 MustHaveRegister 18 MustHaveRegister 28 MustHaveRegister 34 MustHaveRegister 36 MustHaveRegister 70 MustHaveRegister 72 MustHaveRegister 86 MustHaveRegister 90 MustHaveRegister  "StoreAtDefinition"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [10, 37[10 MustHaveRegister 32 MustHaveRegister  "StoreAtDefinition"
  v3|d DWORD "[r10|d]" v3|d -1 [12, 16[[266, 282[[380, 404[[408, 412[[714, 721[12 MustHaveRegister 14 ShouldHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rdi|d]" v4|d -1 [18, 22[18 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rdi|q]" v5|q v4|d [22, 25[22 MustHaveRegister 24 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r10|q]" v6|q -1 [20, 23[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [28, 42[28 MustHaveRegister 30 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [30, 40[30 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[r11|d]" v9|d -1 [32, 44[32 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v10|d DWORD "[r8|d]" v10|d -1 [34, 38[34 MustHaveRegister 38 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r9|d]" v11|d -1 [36, 58[[138, 146[36 MustHaveRegister 58 ShouldHaveRegister 146 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d v8|d [40, 61[[138, 149[40 MustHaveRegister 60 ShouldHaveRegister 148 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q v7|d [42, 64[[138, 155[42 MustHaveRegister 154 ShouldHaveRegister  "StoreAtDefinition"
  v15|d DWORD "[rcx|d]" v15|d -1 [48, 50[48 MustHaveRegister 50 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r11|d]" v16|d -1 [50, 56[50 MustHaveRegister 56 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rcx|d]" v17|d -1 [52, 54[52 MustHaveRegister 54 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[r11|d]" v18|d v16|d [56, 114[56 MustHaveRegister 58 ShouldHaveRegister  "StoreAtDefinition"
  v19|d DWORD "[r9|d]" v19|d v11|d [58, 64[[236, 240[58 MustHaveRegister 60 MustHaveRegister 240 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rcx|d]" v20|d v19|d [60, 62[60 MustHaveRegister 62 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rax|d]" v21|d rax|q [244, 250[244 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [246, 248[246 MustHaveRegister 248 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v21|d [250, 254[250 MustHaveRegister 254 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q rax|q [258, 266[[474, 502[[530, 554[258 MustHaveRegister 544 MustHaveRegister 548 ShouldHaveRegister 554 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q -1 [476, 478[476 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rsi|d]" v26|d -1 [478, 486[478 MustHaveRegister 480 MustHaveRegister 486 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[r10|q]" v27|q -1 [484, 496[484 MustHaveRegister 488 MustHaveRegister 494 MustHaveRegister 496 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v26|d [486, 494[[534, 536[486 MustHaveRegister 494 MustHaveRegister 536 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[r8|q]" v29|q -1 [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q -1 [496, 498[496 MustHaveRegister 498 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[rsi|d]" v31|d v24|q [544, 546[544 MustHaveRegister 546 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v1|q [548, 550[548 MustHaveRegister 550 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdx|q]" v33|q v1|q [560, 564[[576, 582[[586, 592[560 MustHaveRegister 562 MustHaveRegister 580 MustHaveRegister 588 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[r10|q]" v34|q -1 [590, 602[590 MustHaveRegister 594 MustHaveRegister 600 MustHaveRegister 602 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdx|q]" v35|q v33|q [592, 600[[686, 688[592 MustHaveRegister 600 MustHaveRegister 688 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rsi|q]" v36|q -1 [598, 600[598 MustHaveRegister 600 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rsi|q]" v37|q -1 [602, 604[602 MustHaveRegister 604 MustHaveRegister  "NoSpillStore"
  v38|d DWORD "[r10|d]" v38|d -1 [70, 114[70 MustHaveRegister 104 ShouldHaveRegister  "OneSpillStore"
  v39|d DWORD "[rcx|d]" v39|d -1 [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rcx|d]" v40|d -1 [82, 94[82 MustHaveRegister 84 MustHaveRegister 94 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[r8|d]" v41|d -1 [84, 120[[320, 352[84 MustHaveRegister 110 ShouldHaveRegister 120 ShouldHaveRegister 328 ShouldHaveRegister 352 ShouldHaveRegister  "NoSpillStore"
  v42|d DWORD "[rdi|d]" v42|d -1 [86, 92[86 MustHaveRegister 88 MustHaveRegister 92 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r9|d]" v43|d -1 [88, 110[[320, 326[88 MustHaveRegister 110 MustHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v44|d DWORD "[rsi|d]" v44|d -1 [90, 100[90 MustHaveRegister 96 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q v42|d [92, 118[[320, 336[92 MustHaveRegister 118 ShouldHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v40|d [94, 116[[320, 334[94 MustHaveRegister 116 ShouldHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[rcx|d]" v47|d -1 [100, 102[100 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v48|d DWORD "[rsi|d]" v48|d v38|d [104, 124[104 MustHaveRegister 106 MustHaveRegister 112 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v49|d DWORD "[r9|d]" v49|d v43|d [110, 112[110 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rax|q]" v50|q v46|q [116, 122[116 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[r10|q]" v51|q v45|q [118, 124[118 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[r8|q]" v52|q -1 [120, 126[120 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v53|d DWORD "[r9|d]" v53|d v43|d [326, 330[326 MustHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v54|d DWORD "[rsi|d]" v54|d v38|d [328, 330[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v55|d DWORD "[r8|d]" v55|d -1 [782, 784[784 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rax|q]" v56|q v46|q [334, 338[334 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdi|q]" v57|q v45|q [336, 346[336 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rsi|q]" v58|q -1 [338, 348[338 MustHaveRegister 348 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdx|q]" v59|q -1 [340, 342[340 MustHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rdx|q]" v60|q v59|q [342, 344[342 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdx|q]" v61|q -1 [344, 346[344 MustHaveRegister 346 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q v61|q [346, 350[346 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v63|d DWORD "[r11|d]" v63|d -1 [144, 200[144 MustHaveRegister 146 ShouldHaveRegister  "OneSpillStore"
  v64|d DWORD "[r8|d]" v64|d v63|d [146, 152[[282, 286[146 MustHaveRegister 148 MustHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rcx|d]" v65|d v64|d [148, 150[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v66|d DWORD "[rax|d]" v66|d rax|q [290, 296[290 MustHaveRegister 296 ShouldHaveRegister  "NoSpillStore"
  v67|d DWORD "[rcx|d]" v67|d -1 [292, 294[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v68|d DWORD "[rax|d]" v68|d v66|d [296, 300[296 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rax|q]" v69|q rax|q [304, 312[[502, 530[[608, 645[[646, 649[[650, 653[[654, 663[[664, 685[[694, 701[304 MustHaveRegister 622 MustHaveRegister 626 ShouldHaveRegister 632 MustHaveRegister 644 ShouldHaveRegister 648 ShouldHaveRegister 652 ShouldHaveRegister 662 ShouldHaveRegister 684 ShouldHaveRegister 700 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rsi|q]" v70|q -1 [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v71|d DWORD "[rsi|d]" v71|d -1 [506, 514[506 MustHaveRegister 508 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[r10|q]" v72|q -1 [512, 524[512 MustHaveRegister 516 MustHaveRegister 522 MustHaveRegister 524 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q v71|d [514, 522[[612, 614[514 MustHaveRegister 522 MustHaveRegister 614 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[r8|q]" v74|q -1 [520, 522[520 MustHaveRegister 522 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rsi|q]" v75|q -1 [524, 526[524 MustHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v76|d DWORD "[rsi|d]" v76|d v69|q [622, 624[622 MustHaveRegister 624 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rdx|q]" v77|q v1|q [626, 628[626 MustHaveRegister 628 ShouldHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdx|q]" v78|q v1|q [638, 642[[654, 660[[664, 670[638 MustHaveRegister 640 MustHaveRegister 658 MustHaveRegister 666 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[r10|q]" v79|q -1 [668, 680[668 MustHaveRegister 672 MustHaveRegister 678 MustHaveRegister 680 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rdx|q]" v80|q v78|q [670, 678[[694, 696[670 MustHaveRegister 678 MustHaveRegister 696 ShouldHaveRegister  "NoSpillStore"
  v81|q QWORD "[rsi|q]" v81|q -1 [676, 678[676 MustHaveRegister 678 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rsi|q]" v82|q -1 [680, 682[680 MustHaveRegister 682 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q v13|q [156, 206[162 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v84|d DWORD "[rsi|d]" v84|d -1 [158, 202[158 MustHaveRegister 160 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r10|d]" v85|d -1 [160, 192[160 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[r8|d]" v86|d -1 [162, 196[162 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[rcx|d]" v87|d -1 [164, 172[164 MustHaveRegister 166 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v88|d DWORD "[r9|d]" v88|d -1 [170, 200[170 MustHaveRegister 176 ShouldHaveRegister  "OneSpillStore"
  v89|d DWORD "[rax|d]" v89|d -1 [172, 184[172 MustHaveRegister 174 ShouldHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v90|d DWORD "[rbp|d]" v90|d v88|d [176, 212[176 MustHaveRegister 178 MustHaveRegister 198 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[r13|d]" v91|d -1 [182, 186[182 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v92|d DWORD "[r13|d]" v92|d v91|d [186, 208[186 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 196 ShouldHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v93|d DWORD "[r8|d]" v93|d v86|d [196, 198[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v94|q QWORD "[rsi|q]" v94|q v84|d [202, 204[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v95|q QWORD "[rsi|q]" v95|q v94|q [204, 210[204 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[r10|q]" v96|q v83|q [206, 212[206 MustHaveRegister 212 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[r8|q]" v97|q -1 [208, 214[208 MustHaveRegister 214 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[r11|d]" v98|d v63|d [218, 220[218 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v99|d DWORD "[rsi|d]" v99|d -1 [222, 226[222 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[r10|d]" v100|d -1 [224, 226[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[rsi|d]" v101|d v99|d [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v102|d DWORD "[r10|d]" v102|d -1 [758, 760[760 MustHaveRegister  "NoSpillStore"
  v103|q QWORD "[r8|q]" v103|q -1 [758, 762[762 MustHaveRegister  "NoSpillStore"
  v104|q QWORD "[rax|q]" v104|q rax|q [364, 366[364 MustHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v105|q QWORD "[rax|q]" v105|q rax|q [370, 374[370 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v106|d DWORD "[rdx|d]" v106|d -1 [268, 272[268 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v107|q QWORD "[rdx|q]" v107|q v106|d [272, 275[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v108|q QWORD "[r11|q]" v108|q -1 [270, 273[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v109|d DWORD "[rdx|d]" v109|d v114|d [278, 281[278 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v110|d DWORD "[rdx|d]" v110|d -1 [382, 384[382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v111|d DWORD "[rdx|d]" v111|d -1 [384, 390[384 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[r11|d]" v112|d -1 [386, 388[386 MustHaveRegister 388 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[rdx|d]" v113|d v111|d [390, 393[390 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v114|d DWORD "[rdx|d]" v114|d v109|d [394, 404[[408, 412[[714, 721[400 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[r11|d]" v115|d -1 [396, 412[396 MustHaveRegister 398 MustHaveRegister 402 ShouldHaveRegister  "OneSpillStore"
  v116|d DWORD "[r9|d]" v116|d v115|d [398, 412[398 MustHaveRegister  "OneSpillStore"
  v117|d DWORD "[rcx|d]" v117|d v3|d [400, 412[400 MustHaveRegister  "StoreAtDefinition"
  v118|q QWORD "[rax|q]" v118|q rax|q [420, 421[420 MustHaveRegister  "NoSpillStore"
  v119|d DWORD "[r10|d]" v119|d v121|d [432, 436[434 ShouldHaveRegister  "OneSpillStore"
  v120|q QWORD "[rax|q]" v120|q rax|q [444, 445[444 MustHaveRegister  "NoSpillStore"
  v121|d DWORD "[r10|d]" v121|d v119|d [446, 449[446 MustHaveRegister 448 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[rax|q]" v122|q rax|q [462, 463[462 MustHaveRegister  "NoSpillStore"
  v123|d DWORD "[r10|d]" v123|d -1 [770, 772[772 MustHaveRegister  "NoSpillStore"
  v124|q QWORD "[r8|q]" v124|q -1 [770, 774[774 MustHaveRegister  "NoSpillStore"
  v125|q QWORD "[rsi|q]" v125|q -1 [636, 642[[654, 660[[664, 670[636 MustHaveRegister 640 MustHaveRegister 658 MustHaveRegister 666 MustHaveRegister 670 ShouldHaveRegister  "NoSpillStore"
  v126|q QWORD "[rsi|q]" v126|q -1 [558, 564[[576, 582[[586, 592[558 MustHaveRegister 562 MustHaveRegister 580 MustHaveRegister 588 MustHaveRegister 592 ShouldHaveRegister  "NoSpillStore"
  v127|q QWORD "[vstack:0|q]" v1|q v1|q [114, 125[ "StoreAtDefinition"
  v128|q QWORD "[rbx|q]" v2|q v2|q [37, 114[[138, 200[48 MustHaveRegister 52 MustHaveRegister 74 MustHaveRegister 82 MustHaveRegister 96 MustHaveRegister 140 MustHaveRegister 144 MustHaveRegister 158 MustHaveRegister 166 MustHaveRegister 182 MustHaveRegister  "StoreAtDefinition"
  v129|q QWORD "[vstack:6|q]" v2|q v2|q [200, 215[ "StoreAtDefinition"
  v130|q QWORD "[vstack:7|q]" v13|q v13|q [236, 241[ "StoreAtDefinition"
  v131|d DWORD "[vstack:1|d]" v18|d v18|d [114, 127[ "StoreAtDefinition"
  v132|d DWORD "[vstack:8|d]" v38|d v38|d [312, 315[ "OneSpillStore"
  v133|d DWORD "[vstack:1|d]" v18|d v18|d [127, 132[ "StoreAtDefinition"
  v134|q QWORD "[vstack:0|q]" v1|q v1|q [125, 132[ "StoreAtDefinition"
  v135|q QWORD "[rdx|q]" v1|q v1|q [132, 134[[138, 200[134 MustHaveRegister 164 MustHaveRegister 170 MustHaveRegister  "StoreAtDefinition"
  v136|d DWORD "[r11|d]" v18|d v18|d [132, 134[134 MustHaveRegister  "StoreAtDefinition"
  v137|d DWORD "[vstack:1|d]" v18|d v18|d [236, 241[ "StoreAtDefinition"
  v138|q QWORD "[vstack:0|q]" v1|q v1|q [200, 213[ "StoreAtDefinition"
  v139|d DWORD "[vstack:4|d]" v63|d v63|d [200, 215[ "OneSpillStore"
  v140|d DWORD "[vstack:5|d]" v88|d v88|d [200, 215[ "OneSpillStore"
  v141|d DWORD "[vstack:5|d]" v88|d v88|d [215, 218[218 ShouldHaveRegister  "OneSpillStore"
  v142|d DWORD "[vstack:4|d]" v63|d v63|d [215, 218[[282, 312[[502, 530[[608, 686[[694, 702[[706, 710[[722, 734[[754, 758[218 ShouldHaveRegister  "OneSpillStore"
  v143|q QWORD "[vstack:0|q]" v1|q v1|q [213, 219[ "StoreAtDefinition"
  v144|q QWORD "[vstack:6|q]" v2|q v2|q [215, 223[ "StoreAtDefinition"
  v145|q QWORD "[rdx|q]" v1|q v1|q [219, 228[[236, 239[220 MustHaveRegister 222 MustHaveRegister 228 MustHaveRegister 238 ShouldHaveRegister  "StoreAtDefinition"
  v146|d DWORD "[r9|d]" v63|d v63|d [758, 765[ "OneSpillStore"
  v147|q QWORD "[rcx|q]" v2|q v2|q [223, 224[224 MustHaveRegister  "StoreAtDefinition"
  v148|q QWORD "[vstack:0|q]" v1|q v1|q [239, 245[ "StoreAtDefinition"
  v149|q QWORD "[vstack:6|q]" v2|q v2|q [236, 241[ "StoreAtDefinition"
  v150|q QWORD "[vstack:7|q]" v13|q v13|q [241, 252[252 ShouldHaveRegister  "StoreAtDefinition"
  v151|q QWORD "[vstack:6|q]" v2|q v2|q [241, 266[ "StoreAtDefinition"
  v152|d DWORD "[vstack:1|d]" v18|d v18|d [241, 266[[312, 358[[474, 502[[530, 608[[686, 694[[710, 714[[734, 742[[778, 782[ "StoreAtDefinition"
  v153|q QWORD "[rdx|q]" v1|q v1|q [245, 253[246 MustHaveRegister  "StoreAtDefinition"
  v154|q QWORD "[vstack:7|q]" v13|q v13|q [282, 287[ "StoreAtDefinition"
  v155|q QWORD "[rcx|q]" v2|q v2|q [266, 282[268 MustHaveRegister 278 MustHaveRegister  "StoreAtDefinition"
  v156|d DWORD "[r9|d]" v18|d v18|d [782, 789[ "StoreAtDefinition"
  v157|q QWORD "[vstack:0|q]" v1|q v1|q [253, 282[ "StoreAtDefinition"
  v158|q QWORD "[rdx|q]" v1|q v1|q [282, 285[284 ShouldHaveRegister  "StoreAtDefinition"
  v159|q QWORD "[vstack:6|q]" v2|q v2|q [282, 287[ "StoreAtDefinition"
  v160|q QWORD "[vstack:0|q]" v1|q v1|q [285, 291[ "StoreAtDefinition"
  v161|q QWORD "[vstack:7|q]" v13|q v13|q [287, 298[298 ShouldHaveRegister  "StoreAtDefinition"
  v162|q QWORD "[vstack:6|q]" v2|q v2|q [287, 332[[358, 377[360 ShouldHaveRegister  "StoreAtDefinition"
  v163|q QWORD "[rdx|q]" v1|q v1|q [291, 299[292 MustHaveRegister  "StoreAtDefinition"
  v164|q QWORD "[rcx|q]" v2|q v2|q [380, 387[382 MustHaveRegister 386 MustHaveRegister  "StoreAtDefinition"
  v165|q QWORD "[vstack:0|q]" v1|q v1|q [299, 377[[380, 408[314 ShouldHaveRegister 372 ShouldHaveRegister  "StoreAtDefinition"
  v166|q QWORD "[rbx|q]" v1|q v1|q [408, 417[410 MustHaveRegister 414 ShouldHaveRegister  "StoreAtDefinition"
  v167|d DWORD "[vstack:8|d]" v38|d v38|d [315, 320[ "OneSpillStore"
  v168|d DWORD "[r10|d]" v38|d v38|d [320, 340[[710, 714[[734, 742[[778, 789[322 MustHaveRegister 328 ShouldHaveRegister 340 ShouldHaveRegister  "OneSpillStore"
  v169|q QWORD "[r8|q]" v2|q v2|q [387, 417[416 ShouldHaveRegister  "StoreAtDefinition"
  v170|q QWORD "[vstack:6|q]" v2|q v2|q [417, 461[[474, 721[[722, 753[[754, 765[[766, 777[[778, 782[458 ShouldHaveRegister  "StoreAtDefinition"
  v171|d DWORD "[vstack:10|d]" v115|d v115|d [412, 417[ "OneSpillStore"
  v172|d DWORD "[vstack:11|d]" v116|d v116|d [412, 417[ "OneSpillStore"
  v173|d DWORD "[vstack:9|d]" v117|d v117|d [412, 417[ "StoreAtDefinition"
  v174|q QWORD "[vstack:0|q]" v1|q v1|q [417, 424[ "StoreAtDefinition"
  v175|d DWORD "[vstack:9|d]" v117|d v117|d [417, 432[ "StoreAtDefinition"
  v176|d DWORD "[vstack:10|d]" v115|d v115|d [417, 450[ "OneSpillStore"
  v177|d DWORD "[vstack:11|d]" v116|d v116|d [417, 450[[714, 721[ "OneSpillStore"
  v178|q QWORD "[rdx|q]" v1|q v1|q [424, 439[426 MustHaveRegister 438 ShouldHaveRegister  "StoreAtDefinition"
  v179|d DWORD "[rcx|d]" v117|d v117|d [432, 436[434 MustHaveRegister  "StoreAtDefinition"
  v180|d DWORD "[r11|d]" v115|d v115|d [450, 452[452 ShouldHaveRegister  "OneSpillStore"
  v181|q QWORD "[rcx|q]" v2|q v2|q [782, 789[ "StoreAtDefinition"
  v182|d DWORD "[r9|d]" v116|d v116|d [746, 753[ "OneSpillStore"
  v183|q QWORD "[vstack:0|q]" v1|q v1|q [439, 461[449 LiveAtLoopEnd 456 ShouldHaveRegister  "StoreAtDefinition"
  v184|d DWORD "[vstack:9|d]" v117|d v117|d [436, 441[ "StoreAtDefinition"
  v185|d DWORD "[vstack:12|d]" v119|d v119|d [436, 441[ "OneSpillStore"
  v186|d DWORD "[vstack:12|d]" v119|d v119|d [441, 446[446 ShouldHaveRegister  "OneSpillStore"
  v187|d DWORD "[vstack:9|d]" v117|d v117|d [441, 450[449 LiveAtLoopEnd  "StoreAtDefinition"
  v188|q QWORD "[r11|q]" v1|q v1|q [474, 721[[722, 753[[754, 765[[766, 777[[778, 789[476 MustHaveRegister 504 MustHaveRegister 546 MustHaveRegister 548 ShouldHaveRegister 560 MustHaveRegister 624 MustHaveRegister 626 ShouldHaveRegister 638 MustHaveRegister  "StoreAtDefinition"
  v189|d DWORD "[rcx|d]" v117|d v117|d [746, 753[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   22  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   24  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v5|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction v7|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v9|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v10|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   36  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v12|DWORD = SHR (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH v9|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v15|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v17|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction v18|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction v19|DWORD = ADD (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH v20|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction v38|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction v39|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v40|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   86  <|@ instruction v42|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction v44|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: v44|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction v47|DWORD = MOVSXB v44|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v48|DWORD = SHL (x: v38|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v49|DWORD = SUB (x: v43|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOVE v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction v50|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction v51|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction v52|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = LEA [v50|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = LEA [v51|QWORD[*] + v48|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = STACKMOVE (input: v127|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|DWORD = STACKMOVE (input: v131|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE v133|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction v63|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction v64|DWORD = ADD (x: v63|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH v65|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  156  <|@ instruction [v83|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction v84|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v85|DWORD = MOV [v84|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v86|DWORD = MOV [v83|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  164  <|@ instruction v87|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v87|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v88|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction v89|DWORD = MOVSXB v87|DWORD size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction v90|DWORD = SHL (x: v88|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v90|DWORD, y: v90|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction v91|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction v92|DWORD = SHL (x: v91|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: v92|DWORD, y: v85|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v93|DWORD = SUB (x: v86|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: v90|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE v88|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v138|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction v95|QWORD[*] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction v96|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction v97|QWORD = MOV v92|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v90|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v143|QWORD[.] = STACKMOVE (input: v138|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|QWORD[.] = STACKMOVE (input: v129|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = STACKMOVE (input: v140|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = STACKMOVE (input: v139|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  216  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  218  <|@ instruction v98|DWORD = ADD (x: v63|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v98|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction v99|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction v100|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  226  <|@ instruction v101|DWORD = OR (x: v99|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v101|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = MOVE v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v130|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v149|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v148|QWORD[.] = MOVE v145|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = STACKMOVE (input: v137|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v151|QWORD[.] = STACKMOVE (input: v149|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v150|QWORD[.] = STACKMOVE (input: v130|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  244  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE v148|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction v22|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction v23|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE v153|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  258  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v157|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v106|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction v108|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction v107|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: v108|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v107|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction v109|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v154|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v159|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE v158|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = STACKMOVE (input: v159|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = STACKMOVE (input: v154|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  290  <|@ instruction v66|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction v67|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v68|DWORD = SHL (x: v66|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v163|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  300  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  304  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = STACKMOVE (input: v132|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE v167|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: v38|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction v53|DWORD = SHR v43|DWORD size: DWORD <|@ <|@
      nr  328  <|@ instruction v54|DWORD = ADD (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v54|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v56|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction v57|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v58|QWORD[*] = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction v59|QWORD = MOV v38|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction v60|QWORD = SHL v59|QWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction v62|QWORD[*] = ADD (x: v61|QWORD, y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v162|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  364  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  370  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction v110|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  386  <|@ instruction v112|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE v112|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction v113|DWORD = SHR (x: v111|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  394  <|@ instruction [v114|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction v116|DWORD = AND v115|DWORD y: 1 size: DWORD <|@ <|@
      nr  400  <|@ instruction v117|DWORD = SUB (x: v3|DWORD, ~y: v114|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVE v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = MOVE v116|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = MOVE v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v173|DWORD = MOVE v117|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v172|DWORD = MOVE v116|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = STACKMOVE (input: v172|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = STACKMOVE (input: v171|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = STACKMOVE (input: v173|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v174|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  420  <|@ instruction v118|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v174|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  432  <|@ instruction [v119|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: v117|DWORD, y: v119|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v185|DWORD = MOVE v119|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v184|DWORD = MOVE v179|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = MOVE v178|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v187|DWORD = STACKMOVE (input: v184|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = STACKMOVE (input: v185|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD v119|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  444  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction v121|DWORD = INC v119|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOVE v187|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v183|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = MOVE v176|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v183|QWORD[.] = MOVE v178|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  462  <|@ instruction v122|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction v25|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  478  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  486  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr  496  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction v70|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  506  <|@ instruction v71|DWORD[_] = MOV [v70|QWORD[.+]] size: DWORD <|@ <|@
      nr  508  <|@ instruction TESTBRANCH (x: v71|DWORD[_], y: v71|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction v72|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  514  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v72|QWORD, y: v72|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction v74|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [v74|QWORD + v72|QWORD * 1 - 8], y: v73|QWORD[.]) size: QWORD <|@ <|@
      nr  524  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [r15|QWORD + 40], y: v75|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction v31|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v31|DWORD[_]) size: DWORD <|@ <|@
      nr  548  <|@ instruction v32|QWORD[*] = XOR (x: v1|QWORD[.], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr  550  <|@ instruction TESTCONSTBRANCH v32|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: v24|QWORD[.], y: v24|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction v126|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  560  <|@ instruction v33|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  562  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MOVB [v33|QWORD[*] + v126|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  590  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  592  <|@ instruction v35|QWORD[*] = ADD (x: v33|QWORD[*], y: v126|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr  602  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction v76|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  624  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v76|DWORD[_]) size: DWORD <|@ <|@
      nr  626  <|@ instruction v77|QWORD[*] = XOR (x: v1|QWORD[.], y: v69|QWORD[.]) size: QWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH v77|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction TESTBRANCH (x: v69|QWORD[.], y: v69|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction v125|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  638  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction MOVB [v78|QWORD[*] + v125|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  668  <|@ instruction v79|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  670  <|@ instruction v80|QWORD[*] = ADD (x: v78|QWORD[*], y: v125|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: v79|QWORD, y: v79|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction v81|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  678  <|@ instruction MOV (x: [v81|QWORD + v79|QWORD * 1 - 8], y: v80|QWORD[*]) size: QWORD <|@ <|@
      nr  680  <|@ instruction v82|QWORD = LEA [v79|QWORD - 8] size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [r15|QWORD + 72], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = MOVE v116|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v169|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  718  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = MOVE v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = MOVE v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v182|DWORD = MOVE v177|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v178|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  758  <|@ instruction [v102|DWORD, v103|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  770  <|@ instruction [v123|DWORD, v124|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  772  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  782  <|@ instruction [v55|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v55|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ instruction v2|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   12  <|@ instruction v3|DWORD = MOV [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH v3|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v4|DWORD = MOV [v1|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction v6|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   22  <|@ instruction v5|QWORD = UNCOMPRESSPOINTER (input: v4|DWORD, ~baseRegister: v6|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   24  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v5|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction v7|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v8|DWORD = MOV [v7|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v9|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction v10|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   36  <|@ instruction v11|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE v10|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction v12|DWORD = SHR (x: v8|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v7|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH v9|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction v15|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v16|DWORD = MOV [v15|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v17|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVE v17|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction v18|DWORD = SHR (x: v16|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE r11|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   58  <|@ instruction v19|DWORD = ADD (x: v11|DWORD, y: v18|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction v20|DWORD = SUB (x: v19|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH v20|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction v38|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction v39|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: v39|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction v40|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v41|DWORD = MOV [v40|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   86  <|@ instruction v42|DWORD[_] = MOV [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v43|DWORD = MOV [v42|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction v44|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction v45|QWORD[.] = UNCOMPRESSPOINTER (input: v42|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction v46|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: v44|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction v47|DWORD = MOVSXB v44|DWORD size: DWORD <|@ <|@
      nr  102  <|@ instruction rcx|DWORD = MOVE v47|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction v48|DWORD = SHL (x: v38|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: v48|DWORD, y: v48|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction v49|DWORD = SUB (x: v43|DWORD, ~y: v41|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: v48|DWORD, y: v49|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  116  <|@ instruction v50|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction v51|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction v52|QWORD = MOV v41|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = LEA [v50|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = LEA [v51|QWORD[*] + v48|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOVE v52|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  128  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE v133|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction ADD (x: [v1|QWORD[.] + 12], y: v18|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction v63|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction v64|DWORD = ADD (x: v63|DWORD, y: v11|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction v65|DWORD = SUB (x: v64|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH v65|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction v84|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v85|DWORD = MOV [v84|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction v86|DWORD = MOV [v83|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  164  <|@ instruction v87|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: v87|DWORD, y: [v2|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction v88|DWORD = MOV [v1|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction v89|DWORD = MOVSXB v87|DWORD size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction v90|DWORD = SHL (x: v88|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: v90|DWORD, y: v90|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction v91|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE v89|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction v92|DWORD = SHL (x: v91|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: v92|DWORD, y: v92|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: v92|DWORD, y: v85|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction v93|DWORD = SUB (x: v86|DWORD, ~y: v92|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: v90|DWORD, y: v93|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v140|DWORD = MOVE v88|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  202  <|@ instruction v94|QWORD[.] = UNCOMPRESSPOINTER (input: v84|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction v95|QWORD[*] = MOVE v94|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction v96|QWORD[*] = MOVE v83|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction v97|QWORD = MOV v92|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v90|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE v97|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = STACKMOVE (input: v140|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = STACKMOVE (input: v139|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  216  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  218  <|@ instruction v98|DWORD = ADD (x: v63|DWORD, y: v88|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|QWORD[.] = MOVE v143|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction MOV (x: [v1|QWORD[.] + 12], y: v98|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction v99|DWORD = MOVZXB [v1|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v147|QWORD[.] = MOVE v144|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction v100|DWORD = MOVZXB [v2|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  226  <|@ instruction v101|DWORD = OR (x: v99|DWORD, y: v100|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOVB (x: [v1|QWORD[.] + 17], y: reinterpret: v101|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  244  <|@ instruction v21|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v153|QWORD[.] = MOVE v148|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction v22|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  248  <|@ instruction rcx|DWORD = MOVE v22|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction v23|DWORD = SHL (x: v21|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE v23|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  258  <|@ instruction v24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v106|DWORD = MOV [v2|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction v108|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction v107|QWORD = UNCOMPRESSPOINTER (input: v106|DWORD, ~baseRegister: v108|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~v107|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction v109|DWORD = MOV [v2|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE v155|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: v1|QWORD[.] v13|QWORD[.] 
locals: v1|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  290  <|@ instruction v66|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|QWORD[.] = MOVE v160|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction v67|DWORD = MOVSXB [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  294  <|@ instruction rcx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction v68|DWORD = SHL (x: v66|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  300  <|@ instruction rdx|DWORD = MOVE v68|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: v1|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  304  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v132|DWORD = MOVE v38|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|DWORD = STACKMOVE (input: v132|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = MOVE v167|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: v38|DWORD, y: v38|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction v53|DWORD = SHR v43|DWORD size: DWORD <|@ <|@
      nr  328  <|@ instruction v54|DWORD = ADD (x: v38|DWORD, y: v41|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: v54|DWORD, y: v53|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction v56|QWORD[*] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction v57|QWORD[*] = MOVE v45|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction v58|QWORD[*] = LEA [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction v59|QWORD = MOV v38|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction v60|QWORD = SHL v59|QWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction v61|QWORD = LEA [v60|QWORD + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction v62|QWORD[*] = ADD (x: v61|QWORD, y: v57|QWORD[*]) size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = MOVE v58|QWORD[*] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE v62|QWORD[*] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = MOVE v41|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: v1|QWORD[.] 
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  364  <|@ instruction v104|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE v104|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: v1|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  370  <|@ instruction v105|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE v105|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: v1|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction v110|DWORD[_] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction v111|DWORD = MOV [v110|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  386  <|@ instruction v112|DWORD = MOVSXB [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v169|QWORD[.] = MOVE v164|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE v112|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction v113|DWORD = SHR (x: v111|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction v115|DWORD = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction v116|DWORD = AND v115|DWORD y: 1 size: DWORD <|@ <|@
      nr  400  <|@ instruction v117|DWORD = SUB (x: v3|DWORD, ~y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE rcx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = MOVE v116|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = MOVE v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v172|DWORD = MOVE v116|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE v115|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = STACKMOVE (input: v172|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v176|DWORD = STACKMOVE (input: v171|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  420  <|@ instruction v118|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v174|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [v1|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: v117|DWORD, y: v119|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v185|DWORD = MOVE v119|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  440  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v186|DWORD = STACKMOVE (input: v185|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD v119|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  444  <|@ instruction v120|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction v121|DWORD = INC v119|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v179|DWORD = MOVE v187|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v178|QWORD[.] = MOVE v183|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v180|DWORD = MOVE v176|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  452  <|@ instruction TESTCONSTBRANCH v115|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  462  <|@ instruction v122|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction v25|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  478  <|@ instruction v26|DWORD[_] = MOV [v25|QWORD[.+]] size: DWORD <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: v26|DWORD[_], y: v26|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction v27|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  486  <|@ instruction v28|QWORD[.] = UNCOMPRESSPOINTER (input: v26|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: v27|QWORD, y: v27|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction v29|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [v29|QWORD + v27|QWORD * 1 - 8], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr  496  <|@ instruction v30|QWORD = LEA [v27|QWORD - 8] size: QWORD <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 40], y: v30|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction v70|QWORD[.+] = LEA [v1|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  506  <|@ instruction v71|DWORD[_] = MOV [v70|QWORD[.+]] size: DWORD <|@ <|@
      nr  508  <|@ instruction TESTBRANCH (x: v71|DWORD[_], y: v71|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction v72|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  514  <|@ instruction v73|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: v72|QWORD, y: v72|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction v74|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [v74|QWORD + v72|QWORD * 1 - 8], y: v73|QWORD[.]) size: QWORD <|@ <|@
      nr  524  <|@ instruction v75|QWORD = LEA [v72|QWORD - 8] size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [r15|QWORD + 40], y: v75|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rsi|QWORD[.] = MOVE v28|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction v31|DWORD[_] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v31|DWORD[_]) size: DWORD <|@ <|@
      nr  548  <|@ instruction v32|QWORD[*] = XOR (x: v1|QWORD[.], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr  550  <|@ instruction TESTCONSTBRANCH v32|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: v24|QWORD[.], y: v24|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction v126|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  560  <|@ instruction v33|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  562  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [v33|QWORD[*] + v126|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MOVB [v33|QWORD[*] + v126|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  590  <|@ instruction v34|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  592  <|@ instruction v35|QWORD[*] = ADD (x: v33|QWORD[*], y: v126|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: v34|QWORD, y: v34|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction v36|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [v36|QWORD + v34|QWORD * 1 - 8], y: v35|QWORD[*]) size: QWORD <|@ <|@
      nr  602  <|@ instruction v37|QWORD = LEA [v34|QWORD - 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [r15|QWORD + 72], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  614  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction v76|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  624  <|@ instruction MOV (x: [v1|QWORD[.] + 20], y: v76|DWORD[_]) size: DWORD <|@ <|@
      nr  626  <|@ instruction v77|QWORD[*] = XOR (x: v1|QWORD[.], y: v69|QWORD[.]) size: QWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH v77|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction TESTBRANCH (x: v69|QWORD[.], y: v69|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction v125|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  638  <|@ instruction v78|QWORD[*] = SHR v1|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [v78|QWORD[*] + v125|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction MOVB [v78|QWORD[*] + v125|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  668  <|@ instruction v79|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  670  <|@ instruction v80|QWORD[*] = ADD (x: v78|QWORD[*], y: v125|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: v79|QWORD, y: v79|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction v81|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  678  <|@ instruction MOV (x: [v81|QWORD + v79|QWORD * 1 - 8], y: v80|QWORD[*]) size: QWORD <|@ <|@
      nr  680  <|@ instruction v82|QWORD = LEA [v79|QWORD - 8] size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [r15|QWORD + 72], y: v82|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = MOVE v35|QWORD[*] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = MOVE v80|QWORD[*] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE v188|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE v142|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v157|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v177|DWORD = MOVE v116|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v166|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  718  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: v3|DWORD v114|DWORD 
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = MOVE v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = MOVE v18|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v189|DWORD = MOVE v175|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v182|DWORD = MOVE v177|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v178|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - v1|QWORD[.] v2|QWORD[.] v116|DWORD v117|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v146|DWORD = MOVE v63|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v102|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v103|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: v1|QWORD[.] v2|QWORD[.] v63|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  772  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v123|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v124|QWORD) size: QWORD <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = MOVE v152|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v181|QWORD[.] = MOVE v162|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v188|QWORD[.] = MOVE v165|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v55|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: v1|QWORD[.] v38|DWORD v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: v1|QWORD[.] - v18|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: v1|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v1|QWORD[.] v2|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   22  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   24  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE r11|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   58  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   86  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  218  <|@ instruction r11|DWORD = ADD (x: vstack:4|DWORD, y: vstack:5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:7|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] vstack:0|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:7|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:4|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:4|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] vstack:8|DWORD vstack:6|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] vstack:0|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  386  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE rcx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:11|DWORD vstack:9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] vstack:6|QWORD[.] vstack:11|DWORD vstack:9|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:11|DWORD vstack:9|DWORD vstack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  446  <|@ instruction r10|DWORD = INC vstack:12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  478  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  506  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  508  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  548  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  550  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  560  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  562  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  590  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  592  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  624  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  626  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  638  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  670  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  718  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] vstack:6|QWORD[.] vstack:11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] vstack:6|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] vstack:6|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  772  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] vstack:6|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   12  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   14  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   16  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   18  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   20  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   22  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   24  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   28  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   34  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   36  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE r11|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   58  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   72  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   84  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   86  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   92  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   96  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  116  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  122  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  124  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  134  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  144  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  148  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  158  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  160  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  164  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  166  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  170  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  172  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  174  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  176  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  178  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  184  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  186  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  188  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  196  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  198  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  212  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  214  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  216  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  218  <|@ instruction r11|DWORD = ADD (x: vstack:4|DWORD, y: vstack:5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  220  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  222  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  226  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  228  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  230  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:7|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  246  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  250  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  252  <|@ instruction rsi|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  264  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] vstack:0|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  270  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  274  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  284  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:7|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:4|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  292  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  296  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:4|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  306  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:8|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] vstack:8|DWORD vstack:6|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  322  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  330  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  344  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  354  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  360  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  366  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  372  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  378  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  384  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] vstack:0|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  386  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  388  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  398  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  400  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:9|DWORD = MOVE rcx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  410  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:10|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:11|DWORD vstack:9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  426  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] vstack:6|QWORD[.] vstack:11|DWORD vstack:9|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  434  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:12|DWORD = MOVE r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  438  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  442  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:11|DWORD vstack:9|DWORD vstack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  446  <|@ instruction r10|DWORD = INC vstack:12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  478  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  480  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  484  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  488  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  494  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  496  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  498  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  504  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  506  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  508  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  512  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  516  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  520  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  522  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  524  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  526  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  538  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  546  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  548  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  550  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  552  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  554  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  560  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  562  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  570  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  574  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  578  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  580  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  584  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  588  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  590  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  592  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  594  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  600  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  604  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  610  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  618  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  624  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  626  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  628  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  632  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  638  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  640  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  642  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  648  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  658  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  668  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  670  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  672  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  676  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  678  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  682  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  684  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  690  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  692  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  694  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  696  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  698  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  704  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  708  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  712  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:11|DWORD = MOVE r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  716  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  718  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr  720  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] vstack:6|QWORD[.] vstack:11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  724  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  732  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  744  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  748  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  750  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  752  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] vstack:6|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  758  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  760  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  764  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] vstack:6|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  768  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  772  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  776  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] vstack:6|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  780  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  784  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  786  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  788  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction vstack:0|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction vstack:6|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction vstack:7|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction vstack:1|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  284  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction vstack:5|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction vstack:4|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction r11|DWORD = ADD (x: vstack:4|DWORD, y: vstack:5|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:7|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] vstack:0|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  848  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction vstack:4|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: vstack:0|QWORD[.] vstack:7|QWORD[.] 
locals: vstack:0|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:4|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: vstack:0|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:4|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction vstack:8|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: vstack:0|QWORD[.] vstack:8|DWORD vstack:6|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: vstack:0|QWORD[.] - vstack:1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE vstack:8|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: vstack:0|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: vstack:0|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] vstack:0|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  878  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction vstack:9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction vstack:11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction vstack:10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction vstack:11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction vstack:10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:11|DWORD vstack:9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  914  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] vstack:6|QWORD[.] vstack:11|DWORD vstack:9|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  932  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction vstack:12|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - vstack:0|QWORD[.] vstack:6|QWORD[.] vstack:11|DWORD vstack:9|DWORD vstack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC vstack:12|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE vstack:10|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: vstack:0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:0|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  234  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  532  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  568  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  604  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] <|@ <|@
      nr 1008  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction vstack:11|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] vstack:6|QWORD[.] vstack:11|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] <|@ <|@
      nr  698  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  834  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE vstack:9|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE vstack:11|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] vstack:6|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  730  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] <|@ <|@
      nr  732  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] vstack:6|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] vstack:6|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] <|@ <|@
      nr  804  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] vstack:6|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [6, 1008[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [58, 424[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [456, 760[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [740, 760[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[vstack:6|q]" vstack:6|q -1 [8, 1018[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[vstack:7|q]" vstack:7|q -1 [44, 470[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[vstack:8|d]" vstack:8|d -1 [262, 268[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[vstack:9|d]" vstack:9|d -1 [882, 978[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[vstack:10|d]" vstack:10|d -1 [890, 954[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[vstack:11|d]" vstack:11|d -1 [888, 1000[ "NOT_SUPPORTED"
  vstack:12|d DWORD "[vstack:12|d]" vstack:12|d -1 [936, 944[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:48|q]" vstack:0|q -1 [6, 1008[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:28|d]" vstack:1|d -1 [58, 424[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:28|d]" vstack:4|d -1 [456, 760[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:32|d]" vstack:5|d -1 [740, 760[ "NOT_SUPPORTED"
  vstack:6|q QWORD "[stack:56|q]" vstack:6|q -1 [8, 1018[ "NOT_SUPPORTED"
  vstack:7|q QWORD "[stack:64|q]" vstack:7|q -1 [44, 470[ "NOT_SUPPORTED"
  vstack:8|d DWORD "[stack:32|d]" vstack:8|d -1 [262, 268[ "NOT_SUPPORTED"
  vstack:9|d DWORD "[stack:32|d]" vstack:9|d -1 [882, 978[ "NOT_SUPPORTED"
  vstack:10|d DWORD "[stack:36|d]" vstack:10|d -1 [890, 954[ "NOT_SUPPORTED"
  vstack:11|d DWORD "[stack:28|d]" vstack:11|d -1 [888, 1000[ "NOT_SUPPORTED"
  vstack:12|d DWORD "[stack:40|d]" vstack:12|d -1 [936, 944[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  284  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction r11|DWORD = ADD (x: stack:28|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  848  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:48|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  878  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  914  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  932  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC stack:40|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  234  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  532  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  568  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  604  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] <|@ <|@
      nr 1008  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] stack:56|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] <|@ <|@
      nr  698  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  834  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] stack:56|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  730  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] <|@ <|@
      nr  732  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] stack:56|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] <|@ <|@
      nr  804  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] stack:56|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  284  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction r11|DWORD = ADD (x: stack:28|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  848  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  424  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  426  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:48|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  878  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  914  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  932  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC stack:40|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  234  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  532  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  568  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  604  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] <|@ <|@
      nr 1008  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] <|@ <|@
      nr  714  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] stack:56|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] <|@ <|@
      nr  698  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  700  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  784  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  786  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  834  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] stack:56|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  730  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] <|@ <|@
      nr  732  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  734  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] stack:56|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] <|@ <|@
      nr  804  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] stack:56|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  284  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  686  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction r11|DWORD = ADD (x: stack:28|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  848  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:48|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  878  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  916  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  932  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC stack:40|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  234  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  532  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  568  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  604  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] <|@ <|@
      nr 1008  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] stack:56|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  834  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] stack:56|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  730  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] stack:56|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] <|@ <|@
      nr  804  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] stack:56|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  284  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  688  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction r11|DWORD = ADD (x: stack:28|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  848  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:48|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  878  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  916  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  932  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC stack:40|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  234  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  532  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  568  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  604  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] <|@ <|@
      nr 1008  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] stack:56|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  834  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] stack:56|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  730  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] stack:56|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] <|@ <|@
      nr  804  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] stack:56|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B23" 
    xhandlers
    flags 
    probability 4603694160267946654
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B4 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B4" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4604043158561525666
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  284  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B60" 
    xhandlers
    flags 
    probability 4598154791124610798
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  452  <|@ instruction JUMP ~[] destination: B41 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B41" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  688  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction r11|DWORD = ADD (x: stack:28|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  848  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:48|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  878  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  916  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  932  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC stack:40|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B89" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B89 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4574818470895520792
    begin_IR
      LIR
      nr  968  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  970  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B12" 
    xhandlers
    flags 
    probability 4558003710860759302
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B8 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B8" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  234  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B49" 
    xhandlers
    flags 
    probability 4552053115651256238
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B45 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B45" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  532  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  568  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  604  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] <|@ <|@
      nr 1008  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] stack:56|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  834  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] stack:56|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  730  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] stack:56|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] <|@ <|@
      nr  804  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] stack:56|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  284  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B60" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B40" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  688  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction r11|DWORD = ADD (x: stack:28|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  848  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:48|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  878  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  916  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  932  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC stack:40|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  234  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B44" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  532  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  568  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  604  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] <|@ <|@
      nr 1008  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] stack:56|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  834  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] stack:56|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  730  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] stack:56|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] <|@ <|@
      nr  804  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] stack:56|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  284  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B60" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B40" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  688  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction r11|DWORD = ADD (x: stack:28|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  848  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  878  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC stack:40|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  932  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B44" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  532  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  568  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:48|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  916  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  234  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  604  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] stack:56|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] stack:56|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] stack:56|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  834  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] stack:56|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] <|@ <|@
      nr 1008  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] <|@ <|@
      nr  804  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  730  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  284  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B60" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B40" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  688  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction r11|DWORD = ADD (x: stack:28|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  848  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  878  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC stack:40|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  932  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B44" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  532  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  568  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:48|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  916  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  234  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  604  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] stack:56|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] stack:56|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] stack:56|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  834  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] stack:56|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] <|@ <|@
      nr 1008  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] <|@ <|@
      nr  804  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  730  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  284  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B60" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B40" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  652  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  688  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction r11|DWORD = ADD (x: stack:28|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  848  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  878  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  942  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC stack:40|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  932  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B44" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  532  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  568  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:48|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  916  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  862  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  234  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  604  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] stack:56|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] stack:56|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] stack:56|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  834  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] stack:56|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] <|@ <|@
      nr 1008  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] <|@ <|@
      nr  804  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  730  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, rdi:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, rdi:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  284  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rdi:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B60" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B40" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, rdi:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  652  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, rdi:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  688  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction r11|DWORD = ADD (x: stack:28|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  848  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  878  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC stack:40|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  932  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B44" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  532  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  568  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:48|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [rbx:0, r8:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  916  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  862  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  234  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  604  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@reference-map: [r11:0, stack:8]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] stack:56|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@reference-map: [r11:0, stack:8]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] stack:56|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@reference-map: [rcx:0, r11:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@reference-map: [r11:0, stack:8]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] stack:56|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  834  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:8]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] stack:56|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] <|@ <|@
      nr 1008  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] <|@ <|@
      nr  804  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  730  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B76" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   12  <|@ instruction CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B73" "B75" 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B39" 
    xhandlers
    flags 
    probability 4606609286618828222
    begin_IR
      LIR
      nr   24  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   26  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   28  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, rdi:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   30  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, rdi:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr   32  <|@ instruction r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   34  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   36  <|@ instruction rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   40  <|@ instruction r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   42  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B23" "B5" 
    xhandlers
    flags 
    probability 4604169207884078280
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   52  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, stack:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rbx|QWORD[.] - - - 
>@ <|@ instruction r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   54  <|@ instruction rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   58  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   60  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   62  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B3" "B13" "B21" "B22" "B19" "B17" "B15" 
    successors "B26" "B25" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  252  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  254  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B23" "B25" 
    successors "B27" "B32" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  282  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  284  <|@ instruction rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rdi:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: rdx|QWORD[.] r10|DWORD rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: rdx|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  288  <|@ instruction rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  292  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  294  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  298  <|@ instruction rcx|DWORD = MOVSXB rsi|DWORD size: DWORD <|@ <|@
      nr  300  <|@ instruction rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  302  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  318  <|@ instruction r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B38" 
    xhandlers
    flags 
    probability 4604052264674271454
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  336  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  340  <|@ instruction r8|QWORD = MOV r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  346  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~[] destination: B31 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B31" "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 4604169207884078281
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  352  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  432  <|@ instruction ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  434  <|@ instruction JUMP ~[] destination: B38 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B38" "B73" "B69" 
    successors 
    xhandlers
    flags 
    probability 4606719135662342572
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B40" "B72" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  438  <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B60" "B42" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  442  <|@ instruction r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  444  <|@ instruction r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  446  <|@ instruction rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  448  <|@ instruction CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B40" "B50" "B58" "B59" "B56" "B54" "B52" 
    successors "B61" "B70" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  646  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  648  <|@ instruction rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  650  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, rdi:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  652  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, rdi:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: rdx|QWORD[.] rbx|QWORD[.] r11|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: rdx|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: rdx|QWORD[.] rbx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10] <|@ <|@
      nr  654  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  656  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B62" "B63" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  658  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  660  <|@ instruction r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  662  <|@ instruction rax|DWORD = MOVSXB rcx|DWORD size: DWORD <|@ <|@
      nr  664  <|@ instruction rcx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  666  <|@ instruction rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B65" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  688  <|@ instruction r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  690  <|@ instruction TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B66" "B67" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  706  <|@ instruction CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr  724  <|@ instruction CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B74" 
    xhandlers
    flags 
    probability 4598551777387405803
    begin_IR
      LIR
      nr  738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  740  <|@ instruction stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  742  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  746  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  750  <|@ instruction r8|QWORD = MOV r13|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  754  <|@ instruction rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD <|@ <|@
      nr  756  <|@ instruction rdx|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr  758  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  760  <|@ instruction r11|DWORD = ADD (x: stack:28|DWORD, y: stack:32|DWORD) size: DWORD <|@ <|@
      nr  762  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  768  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  770  <|@ instruction r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD <|@ <|@
      nr  772  <|@ instruction rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B69 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rdx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   78  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   82  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   88  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr   90  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B6 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B6" "B7" "B11" "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4587761582893900445
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  140  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4587001506708089844
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4586317438140860303
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B23" 
    xhandlers
    flags 
    probability 4585701776430353716
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  182  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B17 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B77" "B78" "B93" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0] <|@ <|@
      nr  844  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr  846  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr  848  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4586681034604849470
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  854  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B77" "B78" 
    successors "B80" "B81" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  876  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  878  <|@ instruction r9|DWORD = AND r11|DWORD y: 1 size: DWORD <|@ <|@
      nr  880  <|@ instruction rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD <|@ <|@
      nr  882  <|@ instruction stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr  884  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B83" 
    xhandlers
    flags 
    probability 4586552323891203679
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  890  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  894  <|@ instruction JUMP ~[] destination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" "B82" 
    successors "B84" "B91" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@reference-map: [rdx:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - rdx|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B85" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  926  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B85" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4592454120920481182
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr  942  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] int[32|0x20] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64] <|@ <|@
      nr  944  <|@ instruction r10|DWORD = INC stack:40|DWORD size: DWORD <|@ <|@
      nr  946  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  948  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B86 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" "B86" 
    successors "B86" "B87" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4594916002969892895
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  932  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  956  <|@ instruction TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" "B88" 
    successors 
    xhandlers
    flags 
    probability 4587573351238591808
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B90" 
    xhandlers
    flags 
    probability 4586552295145862077
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  962  <|@ instruction rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  964  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82] <|@ <|@
      nr  966  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4581845574247819075
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  458  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  462  <|@ st <@st|@reference-map: [stack:0, stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
stack: stack:48|QWORD[.] stack:64|QWORD[.] 
locals: stack:48|QWORD[.] - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10] <|@ <|@
      nr  464  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  470  <|@ instruction rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  474  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
stack: stack:48|QWORD[.] 
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10] <|@ <|@
      nr  476  <|@ instruction CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" 
    xhandlers
    flags 
    probability 4581226738963879561
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction JUMP ~[] destination: B43 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B43" "B44" "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4581845574247819074
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  528  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD <|@ <|@
      nr  532  <|@ instruction TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4581226738963879560
    begin_IR
      LIR
      nr  546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  548  <|@ instruction TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4580669787208333998
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  564  <|@ instruction rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000] <|@ <|@
      nr  566  <|@ instruction rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  568  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B60" 
    xhandlers
    flags 
    probability 4580168530628342992
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  572  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B54 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4579220778424420789
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: stack:48|QWORD[.] stack:32|DWORD stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: stack:48|QWORD[.] - stack:28|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
      nr  268  <|@ instruction r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B37" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  374  <|@ instruction r9|DWORD = SHR r9|DWORD size: DWORD <|@ <|@
      nr  376  <|@ instruction rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4578637987208690359
    begin_IR
      LIR
      nr  400  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  402  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  404  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  408  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  410  <|@ instruction rdx|QWORD = SHL rdx|QWORD size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD <|@ <|@
      nr  416  <|@ instruction rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  420  <|@ instruction rcx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  422  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B74" 
    xhandlers
    flags 
    probability 4578183960565971860
    begin_IR
      LIR
      nr  808  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  810  <|@ instruction rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  812  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.io.PrintStream.append(PrintStream.java:1465) [bci: 2]
stack: stack:48|QWORD[.] 
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10] <|@ <|@
      nr  814  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  816  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 2]
stack: stack:48|QWORD[.] 
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10] <|@ <|@
      nr  818  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.io.PrintStream.print(PrintStream.java:1002) [bci: 5]
locals: - - 
java.io.PrintStream.append(PrintStream.java:1465) [bci: 5]
locals: stack:48|QWORD[.] - 
java.io.PrintStream.append(PrintStream.java:67) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10] <|@ <|@
      nr  824  <|@ instruction JUMP ~[] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B79" 
    successors "B82" "B92" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  896  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  898  <|@ instruction rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [rbx:0, r8:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - rbx|QWORD[.] r8|QWORD[.] r9|DWORD - - 
>@ <|@ instruction CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors "B83" 
    xhandlers
    flags 
    probability 4574818240932787972
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  906  <|@ instruction stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  908  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  912  <|@ st <@st|@reference-map: [stack:8, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45]
locals: - stack:48|QWORD[.] stack:56|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45] <|@ <|@
      nr  916  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" 
    xhandlers
    flags 
    probability 4573788555223621646
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  862  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:8, stack:16]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] stack:48|QWORD[.] rcx|QWORD[.] - - - 
>@ <|@ instruction rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  864  <|@ instruction r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  866  <|@ instruction r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction rcx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B12" "B9" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  100  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  104  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  106  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  114  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  116  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  118  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4571575315837735639
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  132  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  136  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572730631640167753
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B13 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B23" 
    xhandlers
    flags 
    probability 4572122570691519272
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~[] destination: B15 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4571575315837735640
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  194  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B23" 
    xhandlers
    flags 
    probability 4571011951157607301
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  198  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B19 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B49" "B46" 
    xhandlers
    flags 
    probability 4567097104797828558
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  486  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD <|@ <|@
      nr  490  <|@ instruction rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD <|@ <|@
      nr  492  <|@ instruction TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4566554050987670950
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  500  <|@ instruction r10|QWORD = MOV [r15|QWORD + 40] size: QWORD <|@ <|@
      nr  502  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3 <|@ <|@
      nr  504  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4565662928178798050
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction r8|QWORD = MOV [r15|QWORD + 56] size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD <|@ <|@
      nr  518  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  520  <|@ instruction MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B60" 
    xhandlers
    flags 
    probability 4567097104797828557
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  536  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  540  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  544  <|@ instruction JUMP ~[] destination: B50 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B60" 
    xhandlers
    flags 
    probability 4566554050987670948
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  554  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  556  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  558  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B52 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4565662928178798049
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  584  <|@ instruction MEMBAR barriers: 4 <|@ <|@
      nr  586  <|@ instruction CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B60" 
    xhandlers
    flags 
    probability 4564860917650812439
    begin_IR
      LIR
      nr  588  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  590  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  592  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  594  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~[] destination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" 
    xhandlers
    flags 
    probability 4557391701304739083
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  122  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4556516093538685272
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  210  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  214  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4555728046549236841
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  234  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  236  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  238  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  240  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B22 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4551261006487813661
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]] <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4550548108240715340
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE <|@ <|@
      nr  604  <|@ instruction r10|QWORD = MOV [r15|QWORD + 72] size: QWORD <|@ <|@
      nr  606  <|@ instruction rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  608  <|@ instruction TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4549906499818326853
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD <|@ <|@
      nr  630  <|@ instruction MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr  634  <|@ instruction MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  636  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  642  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  644  <|@ instruction JUMP ~[] destination: B59 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" 
    xhandlers
    flags 
    probability 4541429200677676920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B21 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" 
    xhandlers
    flags 
    probability 4535754092513826876
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  614  <|@ instruction - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD] <|@ <|@
      nr  616  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  624  <|@ instruction JUMP ~[] destination: B58 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  978  <|@ instruction rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  980  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction MOV [r15|QWORD + 1156] y: -137523 size: DWORD <|@ <|@
      nr  986  <|@ instruction MOV [r15|QWORD + 1168] y: 10392 size: QWORD <|@ <|@
      nr  988  <|@ st <@st|@reference-map: [r11:0, stack:8]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51]
locals: - r11|QWORD[.] stack:56|QWORD[.] r9|DWORD rcx|DWORD - 
>@ <|@ instruction DEOPT info [bci:51] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  674  <|@ instruction r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7] <|@ <|@
      nr  680  <|@ instruction JUMP ~[] destination: B62 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B62" "B70" "B64" "B66" "B68" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  676  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  794  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ st <@st|@reference-map: [r11:0, stack:8]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21]
locals: r11|QWORD[.] stack:56|QWORD[.] r9|DWORD 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] stack:56|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:38, 21, 37, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7] <|@ <|@
      nr  718  <|@ instruction JUMP ~[] destination: B66 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  324  <|@ instruction r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7] <|@ <|@
      nr  326  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction JUMP ~[] destination: B30 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B33" "B35" "B30" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  394  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD <|@ <|@
      nr  396  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  398  <|@ st <@st|@reference-map: [rcx:0, r11:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21]
locals: - - 
java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2]
locals: r11|QWORD[.] r10|DWORD rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30]
locals: r11|QWORD[.] - r9|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21]
locals: - - 
java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2]
locals: r11|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: r11|QWORD[.] rcx|QWORD[.] 
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10]
locals: - - - - - - 
>@ <|@ instruction DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B81" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction MOV [r15|QWORD + 1156] y: -139315 size: DWORD <|@ <|@
      nr  998  <|@ instruction MOV [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr 1000  <|@ st <@st|@reference-map: [r11:0, stack:8]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36]
stack: r10|DWORD rdx|DWORD 
locals: - r11|QWORD[.] stack:56|QWORD[.] stack:28|DWORD - - 
>@ <|@ instruction DEOPT info [bci:36] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction r8|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr  834  <|@ instruction r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd] <|@ <|@
      nr  836  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction JUMP ~[] destination: B75 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B75" "B93" "B72" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1014  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:8]
live-base-pointers: []
java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0]
locals: rsi|QWORD[.] r11|QWORD[.] stack:56|QWORD[.] - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 1006  <|@ instruction r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd] <|@ <|@
      nr 1008  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B93 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7] <|@ <|@
      nr  384  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B94" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction r8|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr  802  <|@ instruction r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd] <|@ <|@
      nr  804  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction JUMP ~[] destination: B72 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  696  <|@ instruction r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7] <|@ <|@
      nr  702  <|@ instruction JUMP ~[] destination: B64 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  362  <|@ instruction r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7] <|@ <|@
      nr  364  <|@ instruction r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  368  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  306  <|@ instruction r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7] <|@ <|@
      nr  308  <|@ instruction r9|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  310  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  312  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  730  <|@ instruction r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7] <|@ <|@
      nr  736  <|@ instruction JUMP ~[] destination: B68 -> B71 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B71" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  780  <|@ instruction r8|QWORD = MOVE input: long[5780|0x1694] <|@ <|@
      nr  782  <|@ instruction r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed] <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B70 -> B71 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #6          // width:int
     4: iconst_m1     
     5: if_icmpne     17
     8: aload_1       
     9: aload_2       
    10: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    15: pop           
    16: return        
    17: aload_0       
    18: getfield      #4          // flags:int
    21: iconst_1      
    22: invokestatic  #5          // java.util.Formatter$Flags.contains:(int, int)boolean
    25: istore_3      
    26: aload_0       
    27: getfield      #6          // width:int
    30: aload_2       
    31: invokeinterface#97, 1      // java.lang.CharSequence.length:()int
    36: isub          
    37: istore        4
    39: iload_3       
    40: ifeq          51
    43: aload_1       
    44: aload_2       
    45: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    50: pop           
    51: iconst_0      
    52: istore        5
    54: iload         5
    56: iload         4
    58: if_icmpge     76
    61: aload_1       
    62: bipush        32
    64: invokeinterface#98, 2      // java.lang.Appendable.append:(char)java.lang.Appendable
    69: pop           
    70: iinc          
    73: goto          54
    76: iload_3       
    77: ifne          88
    80: aload_1       
    81: aload_2       
    82: invokeinterface#47, 2      // java.lang.Appendable.append:(java.lang.CharSequence)java.lang.Appendable
    87: pop           
    88: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc000000fbb97f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f85b208000048896c2430488954241048894c2408448b56144183faff0f85910200008b7a0849ba000000fbb97f0000498d3c3a483b3d000000000f8412000000483b3d000000000f8484040000e9960700008b7a14448b14fd0c000000448b5908440fbe4210448b4a0c488bd9418bc841d3ea48c1e70348893c244181fbaddeadde0f85c40000008b4b14448b1ccd0c0000000fbe4b1041d3eb44895c24244503cb418bc9412bca83f9010f8d6a010000448b520c0fbe4a103a4b100f85a40300008b4b14448b04cd0c0000008b7a14448b0cfd0c0000000fbe721048c1e7038bc148c1e003403a73100f85a8030000400fbece418bf2d3e685f60f8c7e070000452bc8413bf10f8f820600004c8bd7458bc0488d7810498d743210498bd0e800000000448b5c2424488b54241044015a0c488b6c24304883c438493ba7500400000f877f070000c5f877c3817b08addeadde0f85e8060000448b5b0c458bc34503c1418bc8412bca83f9010f8d530200008b7314448b14f50c000000448b470c0fbe4a103a4b100f8517070000448b4a0c0fbec18bc8418be9d3e585ed0f8cae050000448b6b0c41d3e54585ed0f8c9f060000453bea0f87c3050000452bc5413be80f8fca06000044894c242044895c242448c1e6034c8bd7458bc5488d7e10498d742a10498bd0e800000000448b5c242444035c2420488b54241044895a0c0fb67211488b4c2408440fb65111410bf240887211e917ffffff488bf2418bd190e8000000000f1f840000000000488b5424100fbe4a10d3e0488b34248bd06690e8000000000f1f84000000000041807f40000f85060300004c8b5c2410488bf048c1ee0341897314498bd34833d048f7c20000c0ff0f841d0300004885c00f842603000048be00006057ba7f0000498bd348c1ea09803c32020f851d030000488b5c2408498bd3448b5c2424e9fefdffff8b510849bb000000fbb97f0000498d1413483b15000000000f8412000000483b15000000000f8466020000e9300500008b510c4c8bc1448b5e10458bcb4183e101418bca2bca894c242041f7c3010000000f850602000044894c242444895c241c488b542410817a08addeadde0f85fd03000041ba000000008b4c2420e9430000006666660f1f840000000000666666900f1f80000000004489542418488bf2ba200000006690e8000000000f1f840000000000448b54241841ffc28b4c2420488b542410413bca7fce448b5c241c41f7c3010000000f841a000000488b6c24304883c438493ba7500400000f8736050000c5f877c3488b742410488b542408666690e8000000000f1f840000000000ebca44895c2424488bf2418bd06690e8000000000f1f840000000000488b5424100fbe4a10d3e0488b34248bd06690e8000000000f1f84000000000041807f40000f85d50100004c8b5c2410488bf048c1ee0341897314498bd34833d048f7c20000c0ff0f84ec0100004885c00f84f801000048be00006057ba7f0000498bd348c1ea09803c32020f85f2010000488bf8488b5c2408498bd3448b5c2424e90cfdffff4489542420488b7424106690e8000000000f1f840000000000448b542420448b5c2424488b5c2408488b542410e92afcffff4585d20f8cc403000041d1e9418bf24103f0413bf10f8774030000488d7010418bd248d1e2488d52104803d7418bc8e800000000e953fcffff488b742408e8000000000f1f840000000000488bf0e8000000000f1f840000000000488b742410488bd0666690e8000000000f1f840000000000e922fcffff488b5c2410817b08addeadde0f859b02000044894c242444895c241c488bf3498bd0e8000000000f1f840000000000e9d0fdffff8b51148b14d50c000000440fbe59104c8bc1418bcbd3eae989fdffff4c8b5c2410498d73148b3685f60f84ecfcffff4d8b572848c1e6034d85d20f84e30000004d8b47384b897410f8498d72f849897728e9c5fcffff488b5c2408498bd3448b5c2424e905fbffff488b5c2408498bd3448b5c2424e9f3fafffff083042400803c32000f85a4000000488b5c2408498bd3448b5c2424e9d2faffff4c8b5c2410498d73148b3685f60f841dfeffff4d8b572848c1e6034d85d20f84a50000004d8b47384b897410f8498d72f849897728e9f6fdffff488bf8488b5c2408498bd3448b5c2424e944fbffff488bf8488b5c2408498bd3448b5c2424e92ffbfffff083042400803c32000f8560000000488bf8488b5c2408498bd3448b5c2424e90bfbffffe800000000e9eefbffffc60432004d8b57484803d64d85d20f8467000000498b77584a895416f8498d72f849897748488b5c2408498bd3448b5c2424e909faffffe800000000e95dfdffffc60432004d8b57484803d64d85d20f8440000000498b77584a895416f8498d72f849897748488bf8488b5c2408498bd3448b5c2424e986faffff488bf2e800000000488b5c2408498bd3448b5c2424e9abf9ffff488bf2e800000000488bf8488b5c2408498bd3448b5c2424e94ffaffff8b4c2420448b4c24244c8bda41c78784040000cde6fdff49c7879004000098280000e8000000000f1f84000000000049c7c00000000041bae726fdff458bcb4c8bda458997840400004d898790040000e8000000000f1f84000000000049c7c00000000041bae71efdffebd041b8e742fdff458bcb488bcb4c8bda4589878404000049c7879004000000000000e8000000000f1f84000000000044894c24244c8bdb41c78784040000cddffdff49c7879004000094020000e8000000000f1f84000000000049c7c0940c000041bacd89ffff4c8bda458997840400004d898790040000e8000000000f1f84000000000049c7c01400000041bacdb3ffff4c8b5c2410ebd141b8e73afdff448b4c2424488b4c24084c8b5c2410e95dffffff49c7c09407000041bacd3cfeff4c8bdaeba549c7c00000000041bae722fdffe9fafeffff41b8e73efdff448b4c2424488b4c24084c8b5c2410e91fffffff41b8e74afdff458bcb488bcb4c8bdae90bffffff49c7c00000000041bae71afdffe9bafeffff49c7c09416000041baed2afdffe9a8feffff48896c2430e800000000e93ff7fffff4488d0d6df8ffff49898f68040000e9f1f6fffff4488d0db6faffff49898f68040000e9ddf6fffff441c78784040000f58ffeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f59dfdff49c7879004000000000000e8000000000f1f84000000000041c78784040000ed5bfdff49c7879004000014050000e8000000000f1f84000000000041c78784040000f58afeff49c7879004000000000000e8000000000f1f84000000000041c78784040000f563feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f59cfdff49c7879004000000000000e8000000000f1f84000000000041c78784040000f525feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f524feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5f5fdff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5e7fdff49c7879004000098250000e8000000000f1f84000000000041c78784040000f5e0fdff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5eefdff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD  <||@
  Comment 63 6 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 68 8 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 73 10 r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 77 12 CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null  <||@
  Comment 87 block B1 null  <||@
  Comment 87 14 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 87 16 rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 87 [rcx:0, rdx:0, rsi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 87 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 90 18 r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 100 20 rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0  <||@
  Comment 104 22 AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 104 {DataSection[0x0]}  <||@
  Comment 117 {DataSection[0x8]}  <||@
  Comment 135 block B2 null  <||@
  Comment 135 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 135 26 rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 138 28 r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 138 [rcx:0, rdx:0, rsi:0, rdi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 138 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 146 30 r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 146 [rcx:0, rdx:0, rsi:0, rdi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 146 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 150 32 r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 155 34 r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 159 36 rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 162 38 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 165 40 r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 168 42 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 172 44 stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 176 46 CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 176 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 189 block B3 null  <||@
  Comment 189 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 189 50 rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD  <||@
  Comment 192 52 r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 192 [rdx:0, rbx:0, rsi:0, stack:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|QWORD[.]  |-  |-  |-   <||@
  Comment 192 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 200 54 rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD  <||@
  Comment 204 56 r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 207 58 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 212 60 r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 215 62 rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 221 64 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null  <||@
  Comment 230 block B23 null  <||@
  Comment 230 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 230 250 r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 234 252 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 238 254 CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE  <||@
  Comment 247 block B26 null  <||@
  Comment 247 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 247 280 rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD  <||@
  Comment 250 282 r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 250 [rcx:0, rdx:0, rbx:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rdx|QWORD[.]  |r10|DWORD  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rdx|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 250 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 258 284 rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 261 286 r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 261 [rcx:0, rdx:0, rbx:0, rdi:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rdx|QWORD[.]  |r10|DWORD  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rdx|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 261 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 269 288 rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 273 290 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 277 292 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 283 294 CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE  <||@
  Comment 293 block B27 null  <||@
  Comment 293 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 293 298 rcx|DWORD = MOVSXB rsi|DWORD size: DWORD  <||@
  Comment 297 300 rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 302 302 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 310 block B29 null  <||@
  Comment 310 316 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 310 318 r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 313 320 CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 322 block B31 null  <||@
  Comment 322 334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 322 336 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 322 338 r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 325 340 r8|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 328 342 rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 332 344 rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD  <||@
  Comment 337 346 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 340 348 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 340 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7fba7b5fa4e8, value=140438496779776]:0x7fba62b69e00}  <||@
  Comment 345 354 JUMP ~[] destination: B31 -> B38  <||@
  Comment 345 block B38 null  <||@
  Comment 345 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 345 350 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 350 352 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 355 432 ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 359 434 JUMP ~[] destination: B38 -> B74  <||@
  Comment 359 block B74 null  <||@
  Comment 359 826 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 359 828 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 368 POLL_RETURN_FAR  <||@
  Comment 385 block B39 null  <||@
  Comment 385 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 385 438 CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 385 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 398 block B40 null  <||@
  Comment 398 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 398 442 r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD  <||@
  Comment 402 444 r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 408 446 rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 414 448 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null  <||@
  Comment 423 block B60 null  <||@
  Comment 423 646 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 423 648 rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD  <||@
  Comment 426 650 r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10]  <||@
  Comment 426 [rdx:0, rbx:0, rsi:0, rdi:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 426 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 434 652 r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10]  <||@
  Comment 434 [rdx:0, rbx:0, rsi:0, rdi:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 434 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 438 654 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 442 656 CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE  <||@
  Comment 451 block B61 null  <||@
  Comment 451 658 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 451 660 r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 455 662 rax|DWORD = MOVSXB rcx|DWORD size: DWORD  <||@
  Comment 458 664 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 460 666 rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 465 668 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD  <||@
  Comment 473 block B63 null  <||@
  Comment 473 682 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 473 684 r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD  <||@
  Comment 477 688 r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 480 690 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD  <||@
  Comment 489 block B65 null  <||@
  Comment 489 704 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 489 706 CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD  <||@
  Comment 498 block B67 null  <||@
  Comment 498 720 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 498 722 r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 501 724 CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD  <||@
  Comment 510 block B69 null  <||@
  Comment 510 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 510 740 stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 515 742 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 520 744 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 524 746 rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 524 748 r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 527 750 r8|QWORD = MOV r13|DWORD size: DWORD  <||@
  Comment 530 752 rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 534 754 rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD  <||@
  Comment 539 756 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 542 758 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 542 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7fba7b5fa4e8, value=140438496779776]:0x7fba62b69e00}  <||@
  Comment 547 760 r11|DWORD = ADD (x: stack:28|DWORD, y: stack:32|DWORD) size: DWORD  <||@
  Comment 557 762 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 562 764 MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 566 766 rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD  <||@
  Comment 570 768 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 575 770 r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD  <||@
  Comment 580 772 rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 583 774 MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE  <||@
  Comment 587 776 JUMP ~[] destination: B69 -> B74  <||@
  Comment 592 block B5 null  <||@
  Comment 592 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 592 72 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 595 74 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 598 76 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10]  <||@
  Comment 599 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 599 INVOKESPECIAL  <||@
  Comment 604 [stack:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |-                  |- 
     stack:   |stack:48|QWORD[.]  |stack:64|QWORD[.]  |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 612 78 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 617 80 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 621 82 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 623 84 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 627 86 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 629 88 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10]  <||@
  Comment 631 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 631 INVOKESTATIC  <||@
  Comment 636 [stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 644 90 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null  <||@
  Comment 655 block B6 null  <||@
  Comment 655 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 655 94 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 660 96 JUMP ~[] destination: B6 -> B12  <||@
  Comment 660 block B12 null  <||@
  Comment 660 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 660 140 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 667 142 MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 671 144 rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 677 146 TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD  <||@
  Comment 690 block B14 null  <||@
  Comment 690 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 690 160 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 699 block B16 null  <||@
  Comment 699 172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 699 174 rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000]  <||@
  Comment 709 176 rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 716 178 CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null  <||@
  Comment 726 block B17 null  <||@
  Comment 726 180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 726 182 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 731 184 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 734 186 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 739 188 JUMP ~[] destination: B17 -> B23  <||@
  Comment 744 block B76 null  <||@
  Comment 744 840 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 744 842 rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 744 [rcx:0, rsi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 744 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 747 844 r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 757 846 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0  <||@
  Comment 761 848 AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 761 {DataSection[0x0]}  <||@
  Comment 774 {DataSection[0x10]}  <||@
  Comment 792 block B77 null  <||@
  Comment 792 850 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 792 852 rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 795 854 r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 798 856 JUMP ~[] destination: B77 -> B79  <||@
  Comment 798 block B79 null  <||@
  Comment 798 874 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 798 876 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 802 878 r9|DWORD = AND r11|DWORD y: 1 size: DWORD  <||@
  Comment 809 880 rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 814 882 stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 818 884 TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD  <||@
  Comment 831 block B80 null  <||@
  Comment 831 886 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 831 888 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 836 890 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 841 894 JUMP ~[] destination: B80 -> B83  <||@
  Comment 841 block B83 null  <||@
  Comment 841 918 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 841 892 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 846 920 CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51]  <||@
  Comment 846 [rdx:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51, duringCall: false, rethrow: false]
              |0  |1             |2                  |3               |4               |5 
     locals:  |-  |rdx|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-   <||@
  Comment 846 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 846 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 859 block B84 null  <||@
  Comment 859 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 859 924 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 865 926 rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 869 928 JUMP ~[] destination: B84 -> B85  <||@
  Comment 874 block B86 loop 0 depth 1 header:38|LoopBegin  <||@
  Comment 874 934 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 896 936 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 901 938 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 904 940 rdx|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 909 942 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64]  <||@
  Comment 911 {HotSpotMethod<AbstractStringBuilder.append(char)>}  <||@
  Comment 911 INVOKESPECIAL  <||@
  Comment 916 [stack:8, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:48|QWORD[.]  |int[32|0x20] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3               |4               |5              
     locals:  |-  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:40|DWORD   <||@
  Comment 924 944 r10|DWORD = INC stack:40|DWORD size: DWORD  <||@
  Comment 932 946 rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 936 948 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 941 950 JUMP ~[] destination: B86 -> B85  <||@
  Comment 941 block B85 loop 0 depth 1 header:38|LoopBegin  <||@
  Comment 941 930 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 941 932 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD  <||@
  Comment 946 block B87 null  <||@
  Comment 946 952 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 946 954 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 951 956 TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD  <||@
  Comment 964 block B90 null  <||@
  Comment 964 972 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 964 974 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 973 POLL_RETURN_FAR  <||@
  Comment 990 block B88 null  <||@
  Comment 990 958 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 990 960 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 995 962 rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1000 964 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82]  <||@
  Comment 1003 {HotSpotMethod<AbstractStringBuilder.append(CharSequence)>}  <||@
  Comment 1003 INVOKESPECIAL  <||@
  Comment 1008 [stack:8, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1016 966 JUMP ~[] destination: B88 -> B90  <||@
  Comment 1018 block B42 null  <||@
  Comment 1018 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1018 456 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1023 458 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1026 460 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1029 462 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10]  <||@
  Comment 1031 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 1031 INVOKESPECIAL  <||@
  Comment 1036 [stack:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |-                  |- 
     stack:   |stack:48|QWORD[.]  |stack:64|QWORD[.]  |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1044 464 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1049 466 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1053 468 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1055 470 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1059 472 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1061 474 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10]  <||@
  Comment 1063 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 1063 INVOKESTATIC  <||@
  Comment 1068 [stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1076 476 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1087 block B43 null  <||@
  Comment 1087 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1087 480 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1092 482 JUMP ~[] destination: B43 -> B49  <||@
  Comment 1092 block B49 null  <||@
  Comment 1092 524 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1092 526 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 1099 528 MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1103 530 rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1109 532 TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD  <||@
  Comment 1122 block B51 null  <||@
  Comment 1122 546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1122 548 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD  <||@
  Comment 1131 block B53 null  <||@
  Comment 1131 562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1131 564 rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000]  <||@
  Comment 1141 566 rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1148 568 CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null  <||@
  Comment 1158 block B54 null  <||@
  Comment 1158 570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1158 572 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1161 574 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1166 576 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1169 578 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1174 580 JUMP ~[] destination: B54 -> B60  <||@
  Comment 1179 block B25 null  <||@
  Comment 1179 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1179 262 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1184 264 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1189 266 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 1191 {HotSpotMethod<AbstractStringBuilder.inflate()>}  <||@
  Comment 1191 INVOKESPECIAL  <||@
  Comment 1196 [stack:8, stack:16]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1               |2                 
     locals:  |stack:48|QWORD[.]  |stack:32|DWORD  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:48|QWORD[.]  |-  |stack:28|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1204 268 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1209 270 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1214 272 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1219 274 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1224 276 JUMP ~[] destination: B25 -> B26  <||@
  Comment 1229 block B32 null  <||@
  Comment 1229 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1229 358 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 1238 block B34 null  <||@
  Comment 1238 372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1238 374 r9|DWORD = SHR r9|DWORD size: DWORD  <||@
  Comment 1241 376 rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1247 378 CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD  <||@
  Comment 1256 block B37 null  <||@
  Comment 1256 400 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1256 402 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1256 404 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1256 406 rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 1260 408 rdx|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 1263 410 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 1266 412 rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD  <||@
  Comment 1270 414 rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 1273 416 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1273 418 rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1273 420 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1276 422 - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 1276 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 1281 428 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1286 block B73 null  <||@
  Comment 1286 808 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1286 810 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1291 812 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10]  <||@
  Comment 1291 {HotSpotMethod<String.valueOf(Object)>}  <||@
  Comment 1291 INVOKESTATIC  <||@
  Comment 1296 [stack:8, stack:16]at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
     stack:   |stack:48|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1304 814 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1307 816 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10]  <||@
  Comment 1307 {HotSpotMethod<String.valueOf(Object)>}  <||@
  Comment 1307 INVOKESTATIC  <||@
  Comment 1312 [stack:8, stack:16]at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:48|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1320 818 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1325 820 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1328 822 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10]  <||@
  Comment 1331 {HotSpotMethod<PrintStream.write(String)>}  <||@
  Comment 1331 INVOKESPECIAL  <||@
  Comment 1336 [stack:8, stack:16]at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1344 824 JUMP ~[] destination: B73 -> B74  <||@
  Comment 1349 block B81 null  <||@
  Comment 1349 896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1349 898 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1354 900 CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36]  <||@
  Comment 1354 [rbx:0, r8:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36, duringCall: false, rethrow: false]
              |0          |1             |2            |3         |4  |5 
     locals:  |-          |rbx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-  |- 
     stack:   |r10|DWORD  |rdx|DWORD     |             |          |   |    <||@
  Comment 1354 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1354 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 1367 block B82 null  <||@
  Comment 1367 902 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1367 904 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1372 906 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1377 908 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1380 910 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1383 912 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45]  <||@
  Comment 1383 {HotSpotMethod<AbstractStringBuilder.append(CharSequence)>}  <||@
  Comment 1383 INVOKESPECIAL  <||@
  Comment 1388 [stack:8, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3               |4               |5 
     locals:  |-  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-   <||@
  Comment 1396 916 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1401 block B78 null  <||@
  Comment 1401 858 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1401 860 rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD  <||@
  Comment 1404 862 rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 1404 [rcx:0, rsi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 1404 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1411 864 r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1416 866 r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1419 868 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1422 870 rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1424 872 JUMP ~[] destination: B78 -> B79  <||@
  Comment 1429 block B7 null  <||@
  Comment 1429 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1429 100 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1434 102 rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD  <||@
  Comment 1438 104 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1440 106 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 1448 block B9 null  <||@
  Comment 1448 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1448 114 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1452 116 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 1456 118 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 1465 block B11 null  <||@
  Comment 1465 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1465 128 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1469 130 MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1474 132 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1478 134 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1482 136 JUMP ~[] destination: B11 -> B12  <||@
  Comment 1487 block B13 null  <||@
  Comment 1487 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1487 150 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1492 152 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1495 154 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1500 156 JUMP ~[] destination: B13 -> B23  <||@
  Comment 1505 block B15 null  <||@
  Comment 1505 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1505 164 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1510 166 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1513 168 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1518 170 JUMP ~[] destination: B15 -> B23  <||@
  Comment 1523 block B18 null  <||@
  Comment 1523 190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1523 192 MEMBAR barriers: 4  <||@
  Comment 1528 194 CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1538 block B19 null  <||@
  Comment 1538 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1538 198 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1543 200 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1546 202 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1551 204 JUMP ~[] destination: B19 -> B23  <||@
  Comment 1556 block B44 null  <||@
  Comment 1556 484 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1556 486 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1561 488 rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD  <||@
  Comment 1565 490 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1567 492 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 1575 block B46 null  <||@
  Comment 1575 498 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1575 500 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1579 502 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 1583 504 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD  <||@
  Comment 1592 block B48 null  <||@
  Comment 1592 512 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1592 514 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1596 516 MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1601 518 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1605 520 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1609 522 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1614 block B50 null  <||@
  Comment 1614 534 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1614 536 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1617 538 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1622 540 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1625 542 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1630 544 JUMP ~[] destination: B50 -> B60  <||@
  Comment 1635 block B52 null  <||@
  Comment 1635 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1635 552 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1638 554 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1643 556 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1646 558 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1651 560 JUMP ~[] destination: B52 -> B60  <||@
  Comment 1656 block B55 null  <||@
  Comment 1656 582 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1656 584 MEMBAR barriers: 4  <||@
  Comment 1661 586 CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1671 block B56 null  <||@
  Comment 1671 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1671 590 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1674 592 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1679 594 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1682 596 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1687 598 JUMP ~[] destination: B56 -> B60  <||@
  Comment 1692 block B10 null  <||@
  Comment 1692 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1692 122 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1692 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1697 124 JUMP ~[] destination: B10 -> B12  <||@
  Comment 1702 block B20 null  <||@
  Comment 1702 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1702 208 MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1706 210 r10|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1710 212 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD  <||@
  Comment 1713 214 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD  <||@
  Comment 1722 block B22 null  <||@
  Comment 1722 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1722 232 rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1726 234 MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 1731 236 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1735 238 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1739 240 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1744 242 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1747 244 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1752 246 JUMP ~[] destination: B22 -> B23  <||@
  Comment 1757 block B47 null  <||@
  Comment 1757 506 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1757 508 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1757 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1762 510 JUMP ~[] destination: B47 -> B49  <||@
  Comment 1767 block B57 null  <||@
  Comment 1767 600 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1767 602 MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1771 604 r10|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1775 606 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD  <||@
  Comment 1778 608 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD  <||@
  Comment 1787 block B59 null  <||@
  Comment 1787 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1787 628 rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1791 630 MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 1796 632 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1800 634 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1804 636 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1807 638 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1812 640 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1815 642 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1820 644 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1825 block B21 null  <||@
  Comment 1825 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1825 218 rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1828 220 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1828 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1833 222 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1838 224 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1841 226 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1846 228 JUMP ~[] destination: B21 -> B23  <||@
  Comment 1851 block B58 null  <||@
  Comment 1851 610 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1851 612 rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1854 614 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1854 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1859 616 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1862 618 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1867 620 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1870 622 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1875 624 JUMP ~[] destination: B58 -> B60  <||@
  Comment 1880 block B91 null  <||@
  Comment 1880 976 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1880 978 rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1884 980 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1889 982 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1892 984 MOV [r15|QWORD + 1156] y: -137523 size: DWORD  <||@
  Comment 1903 986 MOV [r15|QWORD + 1168] y: 10392 size: QWORD  <||@
  Comment 1914 988 DEOPT info [bci:51]  <||@
  Comment 1914 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1919 [r11:0, stack:8]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51, duringCall: false, rethrow: false]
              |0  |1             |2                  |3         |4          |5 
     locals:  |-  |r11|QWORD[.]  |stack:56|QWORD[.]  |r9|DWORD  |rcx|DWORD  |-   <||@
  Comment 1927 block B62 null  <||@
  Comment 1927 670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1927 672 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1934 674 r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7]  <||@
  Comment 1940 680 JUMP ~[] destination: B62 -> B71  <||@
  Comment 1940 block B71 null  <||@
  Comment 1940 790 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1940 676 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1943 678 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1946 792 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1953 794 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1960 796 DEOPT info [bci:38, 21, 37, 2, 2, 10]  <||@
  Comment 1960 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1965 [r11:0, stack:8]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                  |2        
     locals:  |r11|QWORD[.]  |stack:56|QWORD[.]  |r9|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |r11|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1973 block B66 null  <||@
  Comment 1973 708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1973 710 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1980 712 r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7]  <||@
  Comment 1986 718 JUMP ~[] destination: B66 -> B71  <||@
  Comment 1988 block B30 null  <||@
  Comment 1988 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1988 324 r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7]  <||@
  Comment 1994 326 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1997 328 rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2000 330 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2003 332 JUMP ~[] destination: B30 -> B36  <||@
  Comment 2003 block B36 null  <||@
  Comment 2003 392 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2003 394 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 2010 396 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2021 398 DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 2021 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2026 [rcx:0, r11:0]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |r11|QWORD[.]  |r10|DWORD  |rcx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2        
     locals:  |r11|QWORD[.]  |-  |r9|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rcx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rcx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2034 block B92 null  <||@
  Comment 2034 990 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2034 992 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2039 994 r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2042 996 MOV [r15|QWORD + 1156] y: -139315 size: DWORD  <||@
  Comment 2053 998 MOV [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2064 1000 DEOPT info [bci:36]  <||@
  Comment 2064 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2069 [r11:0, stack:8]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36, duringCall: false, rethrow: false]
              |0          |1             |2                  |3               |4  |5 
     locals:  |-          |r11|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD  |-  |- 
     stack:   |r10|DWORD  |rdx|DWORD     |                   |                |   |    <||@
  Comment 2077 block B75 null  <||@
  Comment 2077 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2077 832 r8|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2084 834 r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd]  <||@
  Comment 2090 836 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2093 838 JUMP ~[] destination: B75 -> B94  <||@
  Comment 2093 block B94 null  <||@
  Comment 2093 1012 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2093 1014 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2100 1016 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 2107 1018 DEOPT info [bci:0]  <||@
  Comment 2107 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2112 [rsi:0, r11:0, stack:8]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2                  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r11|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |-   <||@
  Comment 2120 block B93 null  <||@
  Comment 2120 1002 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2120 1004 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2127 1006 r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd]  <||@
  Comment 2133 1008 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2138 1010 JUMP ~[] destination: B93 -> B94  <||@
  Comment 2140 block B35 null  <||@
  Comment 2140 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2140 382 r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7]  <||@
  Comment 2146 384 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2151 386 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2156 388 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2161 390 JUMP ~[] destination: B35 -> B36  <||@
  Comment 2166 block B72 null  <||@
  Comment 2166 798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2166 800 r8|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 2173 802 r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd]  <||@
  Comment 2179 804 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2182 806 JUMP ~[] destination: B72 -> B94  <||@
  Comment 2184 block B64 null  <||@
  Comment 2184 692 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2184 694 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2191 696 r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7]  <||@
  Comment 2197 702 JUMP ~[] destination: B64 -> B71  <||@
  Comment 2202 block B33 null  <||@
  Comment 2202 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2202 362 r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7]  <||@
  Comment 2208 364 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2213 366 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2218 368 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2223 370 JUMP ~[] destination: B33 -> B36  <||@
  Comment 2228 block B28 null  <||@
  Comment 2228 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2228 306 r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7]  <||@
  Comment 2234 308 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2237 310 rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2240 312 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2243 314 JUMP ~[] destination: B28 -> B36  <||@
  Comment 2248 block B68 null  <||@
  Comment 2248 726 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2248 728 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2255 730 r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7]  <||@
  Comment 2261 736 JUMP ~[] destination: B68 -> B71  <||@
  Comment 2266 block B70 null  <||@
  Comment 2266 778 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2266 780 r8|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 2273 782 r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed]  <||@
  Comment 2279 788 JUMP ~[] destination: B70 -> B71  <||@
  Comment 2289 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 2314 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 2334 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 2362 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2367 [rcx:0, rdx:0, rsi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2397 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2402 [rcx:0, rdx:0, rsi:0, rdi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2432 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2437 [rcx:0, rdx:0, rsi:0, rdi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2467 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2472 [rdx:0, rbx:0, rsi:0, stack:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|QWORD[.]  |-  |-  |-   <||@
  Comment 2502 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2507 [rcx:0, rdx:0, rbx:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rdx|QWORD[.]  |r10|DWORD  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rdx|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2537 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2542 [rcx:0, rdx:0, rbx:0, rdi:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rdx|QWORD[.]  |r10|DWORD  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rdx|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2572 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2577 [rdx:0, rbx:0, rsi:0, rdi:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2607 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2612 [rdx:0, rbx:0, rsi:0, rdi:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2642 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2647 [rcx:0, rsi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2677 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2682 [rdx:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51, duringCall: false, rethrow: false]
              |0  |1             |2                  |3               |4               |5 
     locals:  |-  |rdx|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-   <||@
  Comment 2712 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2717 [rbx:0, r8:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36, duringCall: false, rethrow: false]
              |0          |1             |2            |3         |4  |5 
     locals:  |-          |rbx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-  |- 
     stack:   |r10|DWORD  |rdx|DWORD     |             |          |   |    <||@
  Comment 2747 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2752 [rcx:0, rsi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2760 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2760 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2766 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 2766 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5287[java.util.Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)]"
  method "HotSpotCompilation-5287[java.util.Formatter$FormatSpecifier.appendJustified(Appendable, CharSequence)]"
  date 1714038242716
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7fba63d30020 448b560849bc000000fbb97f00004d03d44d33e4493bc20f854350e5fe66669089842400c0feff4883ec389041817f20030000000f85b208000048896c2430488954241048894c2408448b56144183faff0f85910200008b7a0849ba000000fbb97f0000498d3c3a483b3d71ffffff0f8412000000483b3d6cffffff0f8484040000e9960700008b7a14448b14fd0c000000448b5908440fbe4210448b4a0c488bd9418bc841d3ea48c1e70348893c244181fbd8e800000f85c40000008b4b14448b1ccd0c0000000fbe4b1041d3eb44895c24244503cb418bc9412bca83f9010f8d6a010000448b520c0fbe4a103a4b100f85a40300008b4b14448b04cd0c0000008b7a14448b0cfd0c0000000fbe721048c1e7038bc148c1e003403a73100f85a8030000400fbece418bf2d3e685f60f8c7e070000452bc8413bf10f8f820600004c8bd7458bc0488d7810498d743210498bd0e8879ce3fe448b5c2424488b54241044015a0c488b6c24304883c438493ba7500400000f877f070000c5f877c3817b08288100000f85e8060000448b5b0c458bc34503c1418bc8412bca83f9010f8d530200008b7314448b14f50c000000448b470c0fbe4a103a4b100f8517070000448b4a0c0fbec18bc8418be9d3e585ed0f8cae050000448b6b0c41d3e54585ed0f8c9f060000453bea0f87c3050000452bc5413be80f8fca06000044894c242044895c242448c1e6034c8bd7458bc5488d7e10498d742a10498bd0e8bd9be3fe448b5c242444035c2420488b54241044895a0c0fb67211488b4c2408440fb65111410bf240887211e917ffffff488bf2418bd190e8843393f70f1f8400ec040008488b5424100fbe4a10d3e0488b34248bd06690e8e4cd93f70f1f84000c05000941807f40000f85060300004c8b5c2410488bf048c1ee0341897314498bd34833d048f7c20000c0ff0f841d0300004885c00f842603000048be00006057ba7f0000498bd348c1ea09803c32020f851d030000488b5c2408498bd3448b5c2424e9fefdffff8b510849bb000000fbb97f0000498d1413483b15e0fcffff0f8412000000483b15e3fcffff0f8466020000e9300500008b510c4c8bc1448b5e10458bcb4183e101418bca2bca894c242041f7c3010000000f850602000044894c242444895c241c488b542410817a08288100000f85fd03000041ba000000008b4c2420e9430000006666660f1f840000000000666666900f1f80000000004489542418488bf2ba200000006690e8cc4fe5fe0f1f84002406000c448b54241841ffc28b4c2420488b542410413bca7fce448b5c241c41f7c3010000000f841a000000488b6c24304883c438493ba7500400000f8736050000c5f877c3488b742410488b542408666690e8704fe5fe0f1f84008006000debca44895c2424488bf2418bd06690e8544fe5fe0f1f84009c06000e488b5424100fbe4a10d3e0488b34248bd06690e83455e5fe0f1f8400bc06000f41807f40000f85d50100004c8b5c2410488bf048c1ee0341897314498bd34833d048f7c20000c0ff0f84ec0100004885c00f84f801000048be00006057ba7f0000498bd348c1ea09803c32020f85f2010000488bf8488b5c2408498bd3448b5c2424e90cfdffff4489542420488b7424106690e8b44ee5fe0f1f84003c070010448b542420448b5c2424488b5c2408488b542410e92afcffff4585d20f8cc403000041d1e9418bf24103f0413bf10f8774030000488d7010418bd248d1e2488d52104803d7418bc8e85f32fafee953fcffff488b742408e85054e5fe0f1f8400a0070011488bf0e84054e5fe0f1f8400b0070012488b742410488bd0666690e8284ee5fe0f1f8400c8070013e922fcffff488b5c2410817b08288100000f859b02000044894c242444895c241c488bf3498bd0e8f44de5fe0f1f8400fc070015e9d0fdffff8b51148b14d50c000000440fbe59104c8bc1418bcbd3eae989fdffff4c8b5c2410498d73148b3685f60f84ecfcffff4d8b572848c1e6034d85d20f84e30000004d8b47384b897410f8498d72f849897728e9c5fcffff488b5c2408498bd3448b5c2424e905fbffff488b5c2408498bd3448b5c2424e9f3fafffff083042400803c32000f85a4000000488b5c2408498bd3448b5c2424e9d2faffff4c8b5c2410498d73148b3685f60f841dfeffff4d8b572848c1e6034d85d20f84a50000004d8b47384b897410f8498d72f849897728e9f6fdffff488bf8488b5c2408498bd3448b5c2424e944fbffff488bf8488b5c2408498bd3448b5c2424e92ffbfffff083042400803c32000f8560000000488bf8488b5c2408498bd3448b5c2424e90bfbffffe83f5bf9fee9eefbffffc60432004d8b57484803d64d85d20f8467000000498b77584a895416f8498d72f849897748488b5c2408498bd3448b5c2424e909faffffe8fe5af9fee95dfdffffc60432004d8b57484803d64d85d20f8440000000498b77584a895416f8498d72f849897748488bf8488b5c2408498bd3448b5c2424e986faffff488bf2e8b798f9fe488b5c2408498bd3448b5c2424e9abf9ffff488bf2e89d98f9fe488bf8488b5c2408498bd3448b5c2424e94ffaffff8b4c2420448b4c24244c8bda41c78784040000cde6fdff49c7879004000098280000e8dba9e5fe0f1f84000000000049c7c00000000041bae726fdff458bcb4c8bda458997840400004d898790040000e8ada9e5fe0f1f84000000000049c7c00000000041bae71efdffebd041b8e742fdff458bcb488bcb4c8bda4589878404000049c7879004000000000000e870a9e5fe0f1f84000000000044894c24244c8bdb41c78784040000cddffdff49c7879004000094020000e845a9e5fe0f1f84000000000049c7c0940c000041bacd89ffff4c8bda458997840400004d898790040000e81aa9e5fe0f1f84000000000049c7c01400000041bacdb3ffff4c8b5c2410ebd141b8e73afdff448b4c2424488b4c24084c8b5c2410e95dffffff49c7c09407000041bacd3cfeff4c8bdaeba549c7c00000000041bae722fdffe9fafeffff41b8e73efdff448b4c2424488b4c24084c8b5c2410e91fffffff41b8e74afdff458bcb488bcb4c8bdae90bffffff49c7c00000000041bae71afdffe9bafeffff49c7c09416000041baed2afdffe9a8feffff48896c2430e80aa9e3fee93ff7fffff4488d0d6df8ffff49898f68040000e9d1b6e5fef4488d0db6faffff49898f68040000e9bdb6e5fef441c78784040000f58ffeff49c7879004000000000000e81ba8e5fe0f1f84000000000041c78784040000f59dfdff49c7879004000000000000e8f8a7e5fe0f1f84000000000041c78784040000ed5bfdff49c7879004000014050000e8d5a7e5fe0f1f84000000000041c78784040000f58afeff49c7879004000000000000e8b2a7e5fe0f1f84000000000041c78784040000f563feff49c7879004000000000000e88fa7e5fe0f1f84000000000041c78784040000f59cfdff49c7879004000000000000e86ca7e5fe0f1f84000000000041c78784040000f525feff49c7879004000000000000e849a7e5fe0f1f84000000000041c78784040000f524feff49c7879004000000000000e826a7e5fe0f1f84000000000041c78784040000f5f5fdff49c7879004000000000000e803a7e5fe0f1f84000000000041c78784040000f5e7fdff49c7879004000098250000e8e0a6e5fe0f1f84000000000041c78784040000f5e0fdff49c7879004000000000000e8bda6e5fe0f1f84000000000041c78784040000f5eefdff49c7879004000000000000e89aa6e5fe0f1f840000000000e81354f9fef4e82da4e5fef4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7fba7b6335c8, value=140438496891008]:0x7fba62b85080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 63 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@45805e76 slotKind: QWORD  <||@
  Comment 63 6 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 68 8 stack:56|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 73 10 r10|DWORD = MOV [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 77 12 CMPCONSTBRANCH r10|DWORD trueDestinationProbability: 0.9485652393632811 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B76 y: -1 size: DWORD inlinedY: null  <||@
  Comment 87 block B1 null  <||@
  Comment 87 14 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 87 16 rdi|DWORD = MOV [rdx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 87 [rcx:0, rdx:0, rsi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 87 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 90 18 r10|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 100 20 rdi|QWORD = UNCOMPRESSPOINTER (input: rdi|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0  <||@
  Comment 104 22 AMD64HOTSPOTSTRATEGYSWITCH ~rdi|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/io/PrintStream;, resolved>}] keyTargets: [B1 -> B2, B1 -> B73] defaultTarget: B1 -> B75 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 104 {DataSection[0x0]}  <||@
  Comment 117 {DataSection[0x8]}  <||@
  Comment 135 block B2 null  <||@
  Comment 135 24 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 135 26 rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 138 28 r10|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 138 [rcx:0, rdx:0, rsi:0, rdi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 138 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 146 30 r11|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 146 [rcx:0, rdx:0, rsi:0, rdi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 146 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 150 32 r8|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 155 34 r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 159 36 rbx|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 162 38 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 165 40 r10|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 168 42 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 172 44 stack:64|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 176 46 CMPCONSTBRANCH r11|DWORD trueDestinationProbability: 0.7106877721660849 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B39 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 176 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 189 block B3 null  <||@
  Comment 189 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 189 50 rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD  <||@
  Comment 192 52 r11|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 192 [rdx:0, rbx:0, rsi:0, stack:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|QWORD[.]  |-  |-  |-   <||@
  Comment 192 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 200 54 rcx|DWORD = MOVSXB [rbx|QWORD[.] + 16] size: DWORD  <||@
  Comment 204 56 r11|DWORD = SHR (x: r11|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 207 58 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 212 60 r9|DWORD = ADD (x: r9|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 215 62 rcx|DWORD = SUB (x: r9|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 221 64 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B3 -> B23 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null  <||@
  Comment 230 block B23 null  <||@
  Comment 230 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 230 250 r10|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 234 252 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 238 254 CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9789707094128564 condition: = trueDestination: B23 -> B26 falseDestination: B23 -> B25 size: BYTE  <||@
  Comment 247 block B26 null  <||@
  Comment 247 278 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 247 280 rcx|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD  <||@
  Comment 250 282 r8|DWORD = MOV [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 250 [rcx:0, rdx:0, rbx:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rdx|QWORD[.]  |r10|DWORD  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rdx|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 250 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 258 284 rdi|DWORD[_] = MOV [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 261 286 r9|DWORD = MOV [rdi|DWORD[_] * 8 + 12] size: DWORD state [bci:21, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 261 [rcx:0, rdx:0, rbx:0, rdi:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rdx|QWORD[.]  |r10|DWORD  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rdx|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 261 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 269 288 rsi|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 273 290 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 277 292 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 283 294 CMPBRANCH (x: rsi|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 0.9804899170307357 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B32 size: BYTE  <||@
  Comment 293 block B27 null  <||@
  Comment 293 296 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 293 298 rcx|DWORD = MOVSXB rsi|DWORD size: DWORD  <||@
  Comment 297 300 rsi|DWORD = SHL (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 302 302 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 310 block B29 null  <||@
  Comment 310 316 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 310 318 r9|DWORD = SUB (x: r9|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 313 320 CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B29 -> B30 falseDestination: B29 -> B31 size: DWORD  <||@
  Comment 322 block B31 null  <||@
  Comment 322 334 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 322 336 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 322 338 r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 325 340 r8|QWORD = MOV r8|DWORD size: DWORD  <||@
  Comment 328 342 rdi|QWORD = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 332 344 rsi|QWORD = LEA [r10|QWORD[*] + rsi|DWORD * 1 + 16] size: QWORD  <||@
  Comment 337 346 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 340 348 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 340 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7fba7b5fa4e8, value=140438496779776]:0x7fba62b69e00}  <||@
  Comment 345 354 JUMP ~[] destination: B31 -> B38  <||@
  Comment 345 block B38 null  <||@
  Comment 345 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 345 350 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 350 352 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 355 432 ADD (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 359 434 JUMP ~[] destination: B38 -> B74  <||@
  Comment 359 block B74 null  <||@
  Comment 359 826 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 359 828 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 368 POLL_RETURN_FAR  <||@
  Comment 385 block B39 null  <||@
  Comment 385 436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 385 438 CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B72 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 385 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 398 block B40 null  <||@
  Comment 398 440 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 398 442 r11|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD  <||@
  Comment 402 444 r8|DWORD = ADD (x: r11|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 408 446 rcx|DWORD = SUB (x: r8|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 414 448 CMPCONSTBRANCH rcx|DWORD trueDestinationProbability: 0.9207459892678765 condition: < trueDestination: B40 -> B60 falseDestination: B40 -> B42 y: 1 size: DWORD inlinedY: null  <||@
  Comment 423 block B60 null  <||@
  Comment 423 646 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 423 648 rsi|DWORD[_] = MOV [rbx|QWORD[.] + 20] size: DWORD  <||@
  Comment 426 650 r10|DWORD = MOV [rsi|DWORD[_] * 8 + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10]  <||@
  Comment 426 [rdx:0, rbx:0, rsi:0, rdi:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 426 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 434 652 r8|DWORD = MOV [rdi|QWORD[.] + 12] size: DWORD state [bci:38, 21, 37, 2, 2, 10]  <||@
  Comment 434 [rdx:0, rbx:0, rsi:0, rdi:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 434 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 438 654 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 442 656 CMPBRANCH (x: rcx|DWORD, y: [rbx|QWORD[.] + 16]) trueDestinationProbability: 1.0 condition: = trueDestination: B60 -> B61 falseDestination: B60 -> B70 size: BYTE  <||@
  Comment 451 block B61 null  <||@
  Comment 451 658 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 451 660 r9|DWORD = MOV [rdx|QWORD[.] + 12] size: DWORD  <||@
  Comment 455 662 rax|DWORD = MOVSXB rcx|DWORD size: DWORD  <||@
  Comment 458 664 rcx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 460 666 rbp|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 465 668 TESTBRANCH (x: rbp|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B63 size: DWORD  <||@
  Comment 473 block B63 null  <||@
  Comment 473 682 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 473 684 r13|DWORD = MOV [rbx|QWORD[.] + 12] size: DWORD  <||@
  Comment 477 688 r13|DWORD = SHL (x: r13|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 480 690 TESTBRANCH (x: r13|DWORD, y: r13|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B63 -> B64 falseDestination: B63 -> B65 size: DWORD  <||@
  Comment 489 block B65 null  <||@
  Comment 489 704 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 489 706 CMPBRANCH (x: r13|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B65 -> B66 falseDestination: B65 -> B67 size: DWORD  <||@
  Comment 498 block B67 null  <||@
  Comment 498 720 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 498 722 r8|DWORD = SUB (x: r8|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 501 724 CMPBRANCH (x: rbp|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 size: DWORD  <||@
  Comment 510 block B69 null  <||@
  Comment 510 738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 510 740 stack:32|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 515 742 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 520 744 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 524 746 rsi|QWORD[*] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 524 748 r10|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 527 750 r8|QWORD = MOV r13|DWORD size: DWORD  <||@
  Comment 530 752 rdi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 534 754 rsi|QWORD = LEA [r10|QWORD[*] + rbp|DWORD * 1 + 16] size: QWORD  <||@
  Comment 539 756 rdx|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 542 758 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7fba62b69e00:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 542 {Field[name=StubRoutines::_jbyte_arraycopy, type=address, offset=0, address=0x7fba7b5fa4e8, value=140438496779776]:0x7fba62b69e00}  <||@
  Comment 547 760 r11|DWORD = ADD (x: stack:28|DWORD, y: stack:32|DWORD) size: DWORD  <||@
  Comment 557 762 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 562 764 MOV (x: [rdx|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 566 766 rsi|DWORD = MOVZXB [rdx|QWORD[.] + 17] size: DWORD  <||@
  Comment 570 768 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 575 770 r10|DWORD = MOVZXB [rcx|QWORD[.] + 17] size: DWORD  <||@
  Comment 580 772 rsi|DWORD = OR (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 583 774 MOVB (x: [rdx|QWORD[.] + 17], y: rsi|BYTE(DWORD)) size: BYTE  <||@
  Comment 587 776 JUMP ~[] destination: B69 -> B74  <||@
  Comment 592 block B5 null  <||@
  Comment 592 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 592 72 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 595 74 rdx|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 598 76 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 2, 2, 21, 2, 2, 10]  <||@
  Comment 599 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 599 INVOKESPECIAL  <||@
  Comment 604 [stack:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |-                  |- 
     stack:   |stack:48|QWORD[.]  |stack:64|QWORD[.]  |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 612 78 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 617 80 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 621 82 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 623 84 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 627 86 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 629 88 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 2, 2, 21, 2, 2, 10]  <||@
  Comment 631 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 631 INVOKESTATIC  <||@
  Comment 636 [stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 644 90 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B7 y: 0 size: BYTE inlinedY: null  <||@
  Comment 655 block B6 null  <||@
  Comment 655 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 655 94 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 660 96 JUMP ~[] destination: B6 -> B12  <||@
  Comment 660 block B12 null  <||@
  Comment 660 138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 660 140 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 667 142 MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 671 144 rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 677 146 TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -4194304 size: QWORD  <||@
  Comment 690 block B14 null  <||@
  Comment 690 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 690 160 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 699 block B16 null  <||@
  Comment 699 172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 699 174 rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000]  <||@
  Comment 709 176 rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 716 178 CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: BYTE inlinedY: null  <||@
  Comment 726 block B17 null  <||@
  Comment 726 180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 726 182 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 731 184 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 734 186 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 739 188 JUMP ~[] destination: B17 -> B23  <||@
  Comment 744 block B76 null  <||@
  Comment 744 840 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 744 842 rdx|DWORD = MOV [rcx|QWORD[.] + 8] size: DWORD state [bci:0]  <||@
  Comment 744 [rcx:0, rsi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 744 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 747 844 r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 757 846 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 140436756758528 shift: 0  <||@
  Comment 761 848 AMD64HOTSPOTSTRATEGYSWITCH ~rdx|QWORD - keyConstants: [meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}, meta{HotSpotType<Ljava/lang/String;, resolved>}] keyTargets: [B76 -> B77, B76 -> B78] defaultTarget: B76 -> B93 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 761 {DataSection[0x0]}  <||@
  Comment 774 {DataSection[0x10]}  <||@
  Comment 792 block B77 null  <||@
  Comment 792 850 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 792 852 rdx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 795 854 r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 798 856 JUMP ~[] destination: B77 -> B79  <||@
  Comment 798 block B79 null  <||@
  Comment 798 874 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 798 876 r11|DWORD = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 802 878 r9|DWORD = AND r11|DWORD y: 1 size: DWORD  <||@
  Comment 809 880 rcx|DWORD = SUB (x: r10|DWORD, ~y: rdx|DWORD) size: DWORD  <||@
  Comment 814 882 stack:32|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 818 884 TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.8622565683438553 condition: = trueDestination: B79 -> B80 falseDestination: B79 -> B81 y: 1 size: DWORD  <||@
  Comment 831 block B80 null  <||@
  Comment 831 886 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 831 888 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 836 890 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 841 894 JUMP ~[] destination: B80 -> B83  <||@
  Comment 841 block B83 null  <||@
  Comment 841 918 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 841 892 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 846 920 CMPCONSTBRANCH [rdx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B91 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:51]  <||@
  Comment 846 [rdx:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51, duringCall: false, rethrow: false]
              |0  |1             |2                  |3               |4               |5 
     locals:  |-  |rdx|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-   <||@
  Comment 846 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 846 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 859 block B84 null  <||@
  Comment 859 922 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 859 924 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 865 926 rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 869 928 JUMP ~[] destination: B84 -> B85  <||@
  Comment 874 block B86 loop 0 depth 1 header:38|LoopBegin  <||@
  Comment 874 934 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 896 936 stack:40|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 901 938 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 904 940 rdx|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 909 942 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(char)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 64]  <||@
  Comment 911 {HotSpotMethod<AbstractStringBuilder.append(char)>}  <||@
  Comment 911 INVOKESPECIAL  <||@
  Comment 916 [stack:8, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1            
     locals:  |stack:48|QWORD[.]  |int[32|0x20] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3204) [bci: 64, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3               |4               |5              
     locals:  |-  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |stack:40|DWORD   <||@
  Comment 924 944 r10|DWORD = INC stack:40|DWORD size: DWORD  <||@
  Comment 932 946 rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 936 948 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 941 950 JUMP ~[] destination: B86 -> B85  <||@
  Comment 941 block B85 loop 0 depth 1 header:38|LoopBegin  <||@
  Comment 941 930 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 941 932 CMPBRANCH (x: rcx|DWORD, y: r10|DWORD) trueDestinationProbability: 0.6776029688895142 condition: > trueDestination: B85 -> B86 falseDestination: B85 -> B87 size: DWORD  <||@
  Comment 946 block B87 null  <||@
  Comment 946 952 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 946 954 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 951 956 TESTCONSTBRANCH r11|DWORD trueDestinationProbability: 0.862252690404634 condition: = trueDestination: B87 -> B88 falseDestination: B87 -> B90 y: 1 size: DWORD  <||@
  Comment 964 block B90 null  <||@
  Comment 964 972 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 964 974 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 973 POLL_RETURN_FAR  <||@
  Comment 990 block B88 null  <||@
  Comment 990 958 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 990 960 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 995 962 rdx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1000 964 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 82]  <||@
  Comment 1003 {HotSpotMethod<AbstractStringBuilder.append(CharSequence)>}  <||@
  Comment 1003 INVOKESPECIAL  <||@
  Comment 1008 [stack:8, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3207) [bci: 82, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1016 966 JUMP ~[] destination: B88 -> B90  <||@
  Comment 1018 block B42 null  <||@
  Comment 1018 454 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1018 456 stack:28|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1023 458 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1026 460 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1029 462 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:24, 21, 37, 2, 2, 10]  <||@
  Comment 1031 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 1031 INVOKESPECIAL  <||@
  Comment 1036 [stack:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1                  |2 
     locals:  |stack:48|QWORD[.]  |-                  |- 
     stack:   |stack:48|QWORD[.]  |stack:64|QWORD[.]  |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1044 464 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1049 466 rcx|DWORD = MOVSXB [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1053 468 rax|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1055 470 rsi|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 1059 472 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1061 474 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Arrays.copyOf(byte[], int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:32, 21, 37, 2, 2, 10]  <||@
  Comment 1063 {HotSpotMethod<Arrays.copyOf(byte[], int)>}  <||@
  Comment 1063 INVOKESTATIC  <||@
  Comment 1068 [stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |  
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1076 476 CMPCONSTBRANCH [r15|QWORD + 64] trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1087 block B43 null  <||@
  Comment 1087 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1087 480 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1092 482 JUMP ~[] destination: B43 -> B49  <||@
  Comment 1092 block B49 null  <||@
  Comment 1092 524 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1092 526 rsi|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 1099 528 MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1103 530 rdx|QWORD[*] = XOR (x: r11|QWORD[.], y: rax|QWORD[.]) size: QWORD  <||@
  Comment 1109 532 TESTCONSTBRANCH rdx|QWORD[*] trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: -4194304 size: QWORD  <||@
  Comment 1122 block B51 null  <||@
  Comment 1122 546 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1122 548 TESTBRANCH (x: rax|QWORD[.], y: rax|QWORD[.]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 size: QWORD  <||@
  Comment 1131 block B53 null  <||@
  Comment 1131 562 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1131 564 rsi|QWORD = MOVE input: long[140438306553856|0x7fba57600000]  <||@
  Comment 1141 566 rdx|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1148 568 CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 2 size: BYTE inlinedY: null  <||@
  Comment 1158 block B54 null  <||@
  Comment 1158 570 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1158 572 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1161 574 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1166 576 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1169 578 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1174 580 JUMP ~[] destination: B54 -> B60  <||@
  Comment 1179 block B25 null  <||@
  Comment 1179 260 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1179 262 stack:32|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 1184 264 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1189 266 - = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:18, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 1191 {HotSpotMethod<AbstractStringBuilder.inflate()>}  <||@
  Comment 1191 INVOKESPECIAL  <||@
  Comment 1196 [stack:8, stack:16]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1734) [bci: 18, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1               |2                 
     locals:  |stack:48|QWORD[.]  |stack:32|DWORD  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:48|QWORD[.]  |-  |stack:28|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1204 268 r10|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1209 270 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1214 272 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1219 274 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1224 276 JUMP ~[] destination: B25 -> B26  <||@
  Comment 1229 block B32 null  <||@
  Comment 1229 356 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1229 358 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B32 -> B33 falseDestination: B32 -> B34 size: DWORD  <||@
  Comment 1238 block B34 null  <||@
  Comment 1238 372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1238 374 r9|DWORD = SHR r9|DWORD size: DWORD  <||@
  Comment 1241 376 rsi|DWORD = ADD (x: r10|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1247 378 CMPBRANCH (x: rsi|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B37 size: DWORD  <||@
  Comment 1256 block B37 null  <||@
  Comment 1256 400 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1256 402 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1256 404 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1256 406 rsi|QWORD[*] = LEA [rax|QWORD[*] + 16] size: QWORD  <||@
  Comment 1260 408 rdx|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 1263 410 rdx|QWORD = SHL rdx|QWORD size: QWORD  <||@
  Comment 1266 412 rdx|QWORD = LEA [rdx|QWORD + 16] size: QWORD  <||@
  Comment 1270 414 rdx|QWORD[*] = ADD (x: rdx|QWORD, y: rdi|QWORD[*]) size: QWORD  <||@
  Comment 1273 416 rsi|QWORD = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1273 418 rdx|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1273 420 rcx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1276 422 - = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|QWORD, rcx|DWORD] [rdi|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, xmm0|ILLEGAL, r10|ILLEGAL] callTarget: Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL  <||@
  Comment 1276 {Stub<IntrinsicStubsGen.stringLatin1Inflate>@0x7fba62cd3780:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]:CallingConvention[rsi|QWORD, rdx|QWORD, rcx|DWORD]; temps=rdi|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,xmm0|ILLEGAL,r10|ILLEGAL}  <||@
  Comment 1281 428 JUMP ~[] destination: B37 -> B38  <||@
  Comment 1286 block B73 null  <||@
  Comment 1286 808 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1286 810 rsi|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1291 812 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 10]  <||@
  Comment 1291 {HotSpotMethod<String.valueOf(Object)>}  <||@
  Comment 1291 INVOKESTATIC  <||@
  Comment 1296 [stack:8, stack:16]at java.io.PrintStream.append(PrintStream.java:1465) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
     stack:   |stack:48|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1304 814 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1307 816 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<String.valueOf(Object)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 5, 2, 10]  <||@
  Comment 1307 {HotSpotMethod<String.valueOf(Object)>}  <||@
  Comment 1307 INVOKESTATIC  <||@
  Comment 1312 [stack:8, stack:16]at java.io.PrintStream.print(PrintStream.java:1002) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:48|QWORD[.]  |  
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1320 818 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1325 820 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1328 822 - = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<PrintStream.write(String)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:5, 5, 2, 10]  <||@
  Comment 1331 {HotSpotMethod<PrintStream.write(String)>}  <||@
  Comment 1331 INVOKESPECIAL  <||@
  Comment 1336 [stack:8, stack:16]at java.io.PrintStream.print(PrintStream.java:1002) [bci: 5, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.io.PrintStream.append(PrintStream.java:1465) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.io.PrintStream.append(PrintStream.java:67) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1344 824 JUMP ~[] destination: B73 -> B74  <||@
  Comment 1349 block B81 null  <||@
  Comment 1349 896 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1349 898 rbx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1354 900 CMPCONSTBRANCH [rbx|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B81 -> B82 falseDestination: B81 -> B92 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} state [bci:36]  <||@
  Comment 1354 [rbx:0, r8:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36, duringCall: false, rethrow: false]
              |0          |1             |2            |3         |4  |5 
     locals:  |-          |rbx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-  |- 
     stack:   |r10|DWORD  |rdx|DWORD     |             |          |   |    <||@
  Comment 1354 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1354 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 1367 block B82 null  <||@
  Comment 1367 902 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1367 904 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1372 906 stack:36|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1377 908 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1380 910 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1383 912 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.]] [] callTarget: HotSpotMethod<AbstractStringBuilder.append(CharSequence)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 state [bci:2, 2, 45]  <||@
  Comment 1383 {HotSpotMethod<AbstractStringBuilder.append(CharSequence)>}  <||@
  Comment 1383 INVOKESPECIAL  <||@
  Comment 1388 [stack:8, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |stack:48|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3201) [bci: 45, duringCall: true, rethrow: false]
              |0  |1                  |2                  |3               |4               |5 
     locals:  |-  |stack:48|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-   <||@
  Comment 1396 916 JUMP ~[] destination: B82 -> B83  <||@
  Comment 1401 block B78 null  <||@
  Comment 1401 858 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1401 860 rdx|DWORD[_] = MOV [rcx|QWORD[.] + 20] size: DWORD  <||@
  Comment 1404 862 rdx|DWORD = MOV [rdx|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 1404 [rcx:0, rsi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 1404 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1411 864 r11|DWORD = MOVSXB [rcx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1416 866 r8|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1419 868 rcx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1422 870 rdx|DWORD = SHR (x: rdx|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 1424 872 JUMP ~[] destination: B78 -> B79  <||@
  Comment 1429 block B7 null  <||@
  Comment 1429 98 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1429 100 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1434 102 rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD  <||@
  Comment 1438 104 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1440 106 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B7 -> B12 falseDestination: B7 -> B9 size: DWORD  <||@
  Comment 1448 block B9 null  <||@
  Comment 1448 112 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1448 114 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1452 116 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 1456 118 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 1465 block B11 null  <||@
  Comment 1465 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1465 128 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1469 130 MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1474 132 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1478 134 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1482 136 JUMP ~[] destination: B11 -> B12  <||@
  Comment 1487 block B13 null  <||@
  Comment 1487 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1487 150 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1492 152 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1495 154 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1500 156 JUMP ~[] destination: B13 -> B23  <||@
  Comment 1505 block B15 null  <||@
  Comment 1505 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1505 164 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1510 166 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1513 168 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1518 170 JUMP ~[] destination: B15 -> B23  <||@
  Comment 1523 block B18 null  <||@
  Comment 1523 190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1523 192 MEMBAR barriers: 4  <||@
  Comment 1528 194 CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1538 block B19 null  <||@
  Comment 1538 196 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1538 198 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1543 200 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1546 202 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1551 204 JUMP ~[] destination: B19 -> B23  <||@
  Comment 1556 block B44 null  <||@
  Comment 1556 484 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1556 486 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1561 488 rsi|QWORD[.+] = LEA [r11|QWORD[.] + 20] size: QWORD  <||@
  Comment 1565 490 rsi|DWORD[_] = MOV [rsi|QWORD[.+]] size: DWORD  <||@
  Comment 1567 492 TESTBRANCH (x: rsi|DWORD[_], y: rsi|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B44 -> B49 falseDestination: B44 -> B46 size: DWORD  <||@
  Comment 1575 block B46 null  <||@
  Comment 1575 498 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1575 500 r10|QWORD = MOV [r15|QWORD + 40] size: QWORD  <||@
  Comment 1579 502 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20038350 encoding: base: 0 shift: 3  <||@
  Comment 1583 504 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 size: QWORD  <||@
  Comment 1592 block B48 null  <||@
  Comment 1592 512 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1592 514 r8|QWORD = MOV [r15|QWORD + 56] size: QWORD  <||@
  Comment 1596 516 MOV (x: [r8|QWORD + r10|QWORD * 1 - 8], y: rsi|QWORD[.]) size: QWORD  <||@
  Comment 1601 518 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1605 520 MOV (x: [r15|QWORD + 40], y: rsi|QWORD) size: QWORD  <||@
  Comment 1609 522 JUMP ~[] destination: B48 -> B49  <||@
  Comment 1614 block B50 null  <||@
  Comment 1614 534 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1614 536 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1617 538 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1622 540 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1625 542 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1630 544 JUMP ~[] destination: B50 -> B60  <||@
  Comment 1635 block B52 null  <||@
  Comment 1635 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1635 552 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1638 554 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1643 556 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1646 558 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1651 560 JUMP ~[] destination: B52 -> B60  <||@
  Comment 1656 block B55 null  <||@
  Comment 1656 582 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1656 584 MEMBAR barriers: 4  <||@
  Comment 1661 586 CMPCONSTBRANCH [rdx|QWORD[*] + rsi|QWORD * 1] trueDestinationProbability: 0.9 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 y: 0 size: BYTE inlinedY: null  <||@
  Comment 1671 block B56 null  <||@
  Comment 1671 588 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1671 590 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1674 592 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1679 594 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1682 596 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1687 598 JUMP ~[] destination: B56 -> B60  <||@
  Comment 1692 block B10 null  <||@
  Comment 1692 120 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1692 122 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1692 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1697 124 JUMP ~[] destination: B10 -> B12  <||@
  Comment 1702 block B20 null  <||@
  Comment 1702 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1702 208 MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1706 210 r10|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1710 212 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD  <||@
  Comment 1713 214 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: QWORD  <||@
  Comment 1722 block B22 null  <||@
  Comment 1722 230 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1722 232 rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1726 234 MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 1731 236 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1735 238 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1739 240 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1744 242 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1747 244 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1752 246 JUMP ~[] destination: B22 -> B23  <||@
  Comment 1757 block B47 null  <||@
  Comment 1757 506 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1757 508 - = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [] callTarget: Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]  <||@
  Comment 1757 {Stub<write_barrier_pre(Object)void>@0x7fba62cc6200:CallingConvention[rsi|QWORD[.]]:CallingConvention[rsi|QWORD[.]]}  <||@
  Comment 1762 510 JUMP ~[] destination: B47 -> B49  <||@
  Comment 1767 block B57 null  <||@
  Comment 1767 600 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1767 602 MOVB [rdx|QWORD[*] + rsi|QWORD * 1] y: 0 size: BYTE  <||@
  Comment 1771 604 r10|QWORD = MOV [r15|QWORD + 72] size: QWORD  <||@
  Comment 1775 606 rdx|QWORD[*] = ADD (x: rdx|QWORD[*], y: rsi|QWORD) size: QWORD  <||@
  Comment 1778 608 TESTBRANCH (x: r10|QWORD, y: r10|QWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 size: QWORD  <||@
  Comment 1787 block B59 null  <||@
  Comment 1787 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1787 628 rsi|QWORD = MOV [r15|QWORD + 88] size: QWORD  <||@
  Comment 1791 630 MOV (x: [rsi|QWORD + r10|QWORD * 1 - 8], y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 1796 632 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 1800 634 MOV (x: [r15|QWORD + 72], y: rsi|QWORD) size: QWORD  <||@
  Comment 1804 636 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1807 638 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1812 640 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1815 642 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1820 644 JUMP ~[] destination: B59 -> B60  <||@
  Comment 1825 block B21 null  <||@
  Comment 1825 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1825 218 rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1828 220 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1828 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1833 222 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1838 224 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1841 226 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1846 228 JUMP ~[] destination: B21 -> B23  <||@
  Comment 1851 block B58 null  <||@
  Comment 1851 610 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1851 612 rsi|QWORD = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 1854 614 - = NEAR_FOREIGN_CALL [rsi|QWORD] [] callTarget: Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]  <||@
  Comment 1854 {Stub<write_barrier_post(Word)void>@0x7fba62cca000:CallingConvention[rsi|QWORD]:CallingConvention[rsi|QWORD]}  <||@
  Comment 1859 616 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1862 618 rbx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1867 620 rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1870 622 r11|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1875 624 JUMP ~[] destination: B58 -> B60  <||@
  Comment 1880 block B91 null  <||@
  Comment 1880 976 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1880 978 rcx|DWORD = MOVE stack:32|DWORD moveKind: DWORD  <||@
  Comment 1884 980 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 1889 982 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1892 984 MOV [r15|QWORD + 1156] y: -137523 size: DWORD  <||@
  Comment 1903 986 MOV [r15|QWORD + 1168] y: 10392 size: QWORD  <||@
  Comment 1914 988 DEOPT info [bci:51]  <||@
  Comment 1914 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1919 [r11:0, stack:8]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51, duringCall: false, rethrow: false]
              |0  |1             |2                  |3         |4          |5 
     locals:  |-  |r11|QWORD[.]  |stack:56|QWORD[.]  |r9|DWORD  |rcx|DWORD  |-   <||@
  Comment 1927 block B62 null  <||@
  Comment 1927 670 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1927 672 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1934 674 r10|DWORD = MOVE input: int[-186649|0xfffffffffffd26e7]  <||@
  Comment 1940 680 JUMP ~[] destination: B62 -> B71  <||@
  Comment 1940 block B71 null  <||@
  Comment 1940 790 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1940 676 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1943 678 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1946 792 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1953 794 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 1960 796 DEOPT info [bci:38, 21, 37, 2, 2, 10]  <||@
  Comment 1960 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 1965 [r11:0, stack:8]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                  |2        
     locals:  |r11|QWORD[.]  |stack:56|QWORD[.]  |r9|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1                 
     locals:  |r11|QWORD[.]  |stack:56|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 1973 block B66 null  <||@
  Comment 1973 708 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1973 710 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1980 712 r10|DWORD = MOVE input: int[-188697|0xfffffffffffd1ee7]  <||@
  Comment 1986 718 JUMP ~[] destination: B66 -> B71  <||@
  Comment 1988 block B30 null  <||@
  Comment 1988 322 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1988 324 r8|DWORD = MOVE input: int[-179481|0xfffffffffffd42e7]  <||@
  Comment 1994 326 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1997 328 rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2000 330 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2003 332 JUMP ~[] destination: B30 -> B36  <||@
  Comment 2003 block B36 null  <||@
  Comment 2003 392 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2003 394 MOV (x: [r15|QWORD + 1156], y: r8|DWORD) size: DWORD  <||@
  Comment 2010 396 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2021 398 DEOPT info [bci:21, 2, 30, 2, 2, 21, 2, 2, 10]  <||@
  Comment 2021 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2026 [rcx:0, r11:0]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |r11|QWORD[.]  |r10|DWORD  |rcx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2        
     locals:  |r11|QWORD[.]  |-  |r9|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rcx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r11|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |r11|QWORD[.]  |rcx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2034 block B92 null  <||@
  Comment 2034 990 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2034 992 stack:28|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 2039 994 r11|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2042 996 MOV [r15|QWORD + 1156] y: -139315 size: DWORD  <||@
  Comment 2053 998 MOV [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 2064 1000 DEOPT info [bci:36]  <||@
  Comment 2064 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2069 [r11:0, stack:8]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36, duringCall: false, rethrow: false]
              |0          |1             |2                  |3               |4  |5 
     locals:  |-          |r11|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD  |-  |- 
     stack:   |r10|DWORD  |rdx|DWORD     |                   |                |   |    <||@
  Comment 2077 block B75 null  <||@
  Comment 2077 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2077 832 r8|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 2084 834 r10|DWORD = MOVE input: int[-30259|0xffffffffffff89cd]  <||@
  Comment 2090 836 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2093 838 JUMP ~[] destination: B75 -> B94  <||@
  Comment 2093 block B94 null  <||@
  Comment 2093 1012 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 2093 1014 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 2100 1016 MOV (x: [r15|QWORD + 1168], y: r8|QWORD) size: QWORD  <||@
  Comment 2107 1018 DEOPT info [bci:0]  <||@
  Comment 2107 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2112 [rsi:0, r11:0, stack:8]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2                  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |r11|QWORD[.]  |stack:56|QWORD[.]  |-  |-  |-   <||@
  Comment 2120 block B93 null  <||@
  Comment 2120 1002 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2120 1004 r8|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 2127 1006 r10|DWORD = MOVE input: int[-19507|0xffffffffffffb3cd]  <||@
  Comment 2133 1008 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2138 1010 JUMP ~[] destination: B93 -> B94  <||@
  Comment 2140 block B35 null  <||@
  Comment 2140 380 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2140 382 r8|DWORD = MOVE input: int[-181529|0xfffffffffffd3ae7]  <||@
  Comment 2146 384 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2151 386 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2156 388 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2161 390 JUMP ~[] destination: B35 -> B36  <||@
  Comment 2166 block B72 null  <||@
  Comment 2166 798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2166 800 r8|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 2173 802 r10|DWORD = MOVE input: int[-115507|0xfffffffffffe3ccd]  <||@
  Comment 2179 804 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2182 806 JUMP ~[] destination: B72 -> B94  <||@
  Comment 2184 block B64 null  <||@
  Comment 2184 692 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2184 694 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2191 696 r10|DWORD = MOVE input: int[-187673|0xfffffffffffd22e7]  <||@
  Comment 2197 702 JUMP ~[] destination: B64 -> B71  <||@
  Comment 2202 block B33 null  <||@
  Comment 2202 360 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2202 362 r8|DWORD = MOVE input: int[-180505|0xfffffffffffd3ee7]  <||@
  Comment 2208 364 r9|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 2213 366 rcx|QWORD[.] = MOVE stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 2218 368 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2223 370 JUMP ~[] destination: B33 -> B36  <||@
  Comment 2228 block B28 null  <||@
  Comment 2228 304 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2228 306 r8|DWORD = MOVE input: int[-177433|0xfffffffffffd4ae7]  <||@
  Comment 2234 308 r9|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2237 310 rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 2240 312 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2243 314 JUMP ~[] destination: B28 -> B36  <||@
  Comment 2248 block B68 null  <||@
  Comment 2248 726 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2248 728 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2255 730 r10|DWORD = MOVE input: int[-189721|0xfffffffffffd1ae7]  <||@
  Comment 2261 736 JUMP ~[] destination: B68 -> B71  <||@
  Comment 2266 block B70 null  <||@
  Comment 2266 778 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2266 780 r8|QWORD = MOVE input: long[5780|0x1694]  <||@
  Comment 2273 782 r10|DWORD = MOVE input: int[-185619|0xfffffffffffd2aed]  <||@
  Comment 2279 788 JUMP ~[] destination: B70 -> B71  <||@
  Comment 2289 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 2314 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 2334 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 2362 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2367 [rcx:0, rdx:0, rsi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2397 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2402 [rcx:0, rdx:0, rsi:0, rdi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2432 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2437 [rcx:0, rdx:0, rsi:0, rdi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2467 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2472 [rdx:0, rbx:0, rsi:0, stack:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rbx|QWORD[.]  |-  |-  |-   <||@
  Comment 2502 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2507 [rcx:0, rdx:0, rbx:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rdx|QWORD[.]  |r10|DWORD  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rdx|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2537 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2542 [rcx:0, rdx:0, rbx:0, rdi:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.inflateIfNeededFor(AbstractStringBuilder.java:1736) [bci: 21, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.putStringAt(AbstractStringBuilder.java:1750) [bci: 2, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rdx|QWORD[.]  |r10|DWORD  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:588) [bci: 30, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rdx|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:179) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:626) [bci: 21, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2572 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2577 [rdx:0, rbx:0, rsi:0, rdi:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2607 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2612 [rdx:0, rbx:0, rsi:0, rdi:0, stack:8, stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:611) [bci: 21, duringCall: true, rethrow: false]
              |0             |1             |2         
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.]  |r11|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:629) [bci: 37, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:209) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |rdx|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0             |1            
     locals:  |rdx|QWORD[.]  |rbx|QWORD[.] 
  at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3195) [bci: 10, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5 
     locals:  |-  |-  |-  |-  |-  |-   <||@
  Comment 2642 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2647 [rcx:0, rsi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2677 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2682 [rdx:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3203) [bci: 51, duringCall: false, rethrow: false]
              |0  |1             |2                  |3               |4               |5 
     locals:  |-  |rdx|QWORD[.]  |stack:56|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |-   <||@
  Comment 2712 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2717 [rbx:0, r8:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3199) [bci: 36, duringCall: false, rethrow: false]
              |0          |1             |2            |3         |4  |5 
     locals:  |-          |rbx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-  |- 
     stack:   |r10|DWORD  |rdx|DWORD     |             |          |   |    <||@
  Comment 2747 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 2752 [rcx:0, rsi:0, stack:8, stack:16]at java.util.Formatter$FormatSpecifier.appendJustified(Formatter.java:3194) [bci: 0, duringCall: false, rethrow: false]
              |0             |1                  |2             |3  |4  |5 
     locals:  |rsi|QWORD[.]  |stack:48|QWORD[.]  |rcx|QWORD[.]  |-  |-  |-   <||@
  Comment 2760 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2760 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2766 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 2766 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
