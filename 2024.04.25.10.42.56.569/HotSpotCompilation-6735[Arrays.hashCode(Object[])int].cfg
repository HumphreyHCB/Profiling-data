begin_compilation
  name " HotSpotCompilation-6735[java.util.Arrays.hashCode(Object[])]"
  method "HotSpotCompilation-6735[java.util.Arrays.hashCode(Object[])]"
  date 1714038241542
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i175 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i175  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.lang.Object[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v182 v185 ?14 ?144 ?145 v181 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4593
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v177 i175 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-17163|0xffffffffffffbcf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v181 
lastLocationAccess: - 
=== Succesors ===
next: v42 
=== Usages ===
?14 v15 ?144 v96 ?145 v73 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v181 lastLocationAccess: - #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?144 v73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i175 
y: i8 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i175 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4596) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i60 i32 i62 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.32867834261331663
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
i175 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v40 #falseSuccessor: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a176 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a176  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a176 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
lastLocationAccess: - 
=== Succesors ===
next: v177 
=== Usages ===
a83 v188 
=== Predecessor ===
v41 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v182 lastLocationAccess: - #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a176 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-21771|0xffffffffffffaaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v188 
lastLocationAccess: - 
=== Succesors ===
next: v90 
=== Usages ===
v170 
=== Predecessor ===
a176 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v188 lastLocationAccess: - #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v177 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v170 
index: - 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v170 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: j93 
=== Usages ===
v184 v94 
=== Predecessor ===
v177 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - #next: j93  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v90 
index: - 
=== Succesors ===
=== Usages ===
j93 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v90 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j93 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
=== Succesors ===
next: i47 
=== Usages ===
v94 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - #next: i47  <|@  <|@
f <@~|@floating>@ <|@
tid a83 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a176 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a176  <|@  <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j93 
metaspaceMethod: v90 
arguments: a83 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j93 metaspaceMethod: v90 arguments: a83  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
rawvalue: 31
stableDimension: 0
stamp: i32 [31]
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
?144 i49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4599
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i66 - - a1 i175 i8 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i66 - - a1 i175 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
bci: 43
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v94 
stateDuring: ?144 
=== Succesors ===
next: v10 
=== Usages ===
i49 
=== Predecessor ===
j93 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v94 stateDuring: ?144 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 46]
stamp: i32
=== Inputs ===
x: i47 
y: i66 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i47 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i47 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i6 i32 
=== Succesors ===
=== Usages ===
?14 v15 v185 ?145 i32 v96 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i6 i32  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i49 i31 
=== Succesors ===
=== Usages ===
?14 i60 i37 i36 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i49 i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v10 
=== Succesors ===
next: v21 
=== Usages ===
i62 i61 v17 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v10 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i175 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i62 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.5104011035592184
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v20 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: iload
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4598
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i61 a1 i175 i62 
=== Succesors ===
=== Usages ===
v190 v179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i61 a1 i175 i62  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i175 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i62 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v136 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v134 #falseSuccessor: v136  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a178 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a178  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1 
index: i62 
=== Succesors ===
=== Usages ===
a178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a178 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
lastLocationAccess: - 
=== Succesors ===
next: v179 
=== Usages ===
a104 v189 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v185 lastLocationAccess: - #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a178 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-27147|0xffffffffffff95f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?14 
guard: - 
address: v189 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
v173 
=== Predecessor ===
a178 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?14 guard: - address: v189 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v179 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v173 
index: - 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
=== Succesors ===
next: j112 
=== Usages ===
v187 v113 
=== Predecessor ===
v179 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - #next: j112  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v110 
index: - 
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j112 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
lastLocationAccess: - 
=== Succesors ===
next: i28 
=== Usages ===
v113 
=== Predecessor ===
v110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v187 lastLocationAccess: - #next: i28  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a178 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a178  <|@  <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j112 
metaspaceMethod: v110 
arguments: a104 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j112 metaspaceMethod: v110 arguments: a104  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i61 
y: i35 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i61 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
stamp: i32
=== Inputs ===
x: i36 
y: i61 
=== Succesors ===
=== Usages ===
?145 i31 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i36 y: i61  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4599
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i37 - - a1 i175 i62 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i37 - - a1 i175 i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
bci: 43
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v113 
stateDuring: ?145 
=== Succesors ===
next: v33 
=== Usages ===
i31 
=== Predecessor ===
j112 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v113 stateDuring: ?145 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 46]
stamp: i32
=== Inputs ===
x: i28 
y: i37 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i28 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 48]
stamp: i32
=== Inputs ===
x: i62 
y: i6 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i62 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i28 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v55 
values: i61 i6 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v55 values: i61 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v56 v57 
=== Succesors ===
next: v34 
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v56 v57 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 55]
stamp: void
=== Inputs ===
memoryMap: - 
result: i60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 97
mayConvertToGuard: true
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@7f1c506c
stamp: void
=== Inputs ===
stateBefore: ?14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?14  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i175 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i175  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a java.lang.Object[]
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v182 v185 ?14 ?144 ?145 v181 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4593
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v177 i175 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v181 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i175 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i175 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-17163|0xffffffffffffbcf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 11]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v181 
lastLocationAccess: - 
=== Succesors ===
next: v42 
=== Usages ===
?14 v15 ?144 v96 ?145 v73 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v181 lastLocationAccess: - #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 13]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?144 v73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i175 
y: i8 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i175 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4596) [bci: 6]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i60 i32 i62 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
profileData: PROFILED designatedSuccessorProbability: 0.32867834261331663
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v41 
=== Usages ===
=== Predecessor ===
i175 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v40 #falseSuccessor: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v57 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v57  <|@  <|@
f <@*|@fixed>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v40 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: a176 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a176  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a176 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
lastLocationAccess: - 
=== Succesors ===
next: v177 
=== Usages ===
a83 v188 
=== Predecessor ===
v41 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v182 lastLocationAccess: - #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
result [v2|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a176 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v177 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-21771|0xffffffffffffaaf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v188 
lastLocationAccess: - 
=== Succesors ===
next: v90 
=== Usages ===
v170 
=== Predecessor ===
a176 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v188 lastLocationAccess: - #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid v170 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v177 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
result [v4|QWORD + 480] <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v170 
index: - 
=== Succesors ===
=== Usages ===
v90 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v170 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v90 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: j93 
=== Usages ===
v184 v94 
=== Predecessor ===
v177 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - #next: j93  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
result [v6|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v90 
index: - 
=== Succesors ===
=== Usages ===
j93 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v90 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j93 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
=== Succesors ===
next: i47 
=== Usages ===
v94 
=== Predecessor ===
v90 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - #next: i47  <|@  <|@
f <@~|@floating>@ <|@
tid a83 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a176 
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a176  <|@  <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j93 
metaspaceMethod: v90 
arguments: a83 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j93 metaspaceMethod: v90 arguments: a83  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result int[31|0x1f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
rawvalue: 31
stableDimension: 0
stamp: i32 [31]
stampKind: i32
value: int[31|0x1f]
=== Inputs ===
=== Succesors ===
=== Usages ===
?144 i49 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4599
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i66 - - a1 i175 i8 
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i66 - - a1 i175 i8  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i47 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 43
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v94 
stateDuring: ?144 
=== Succesors ===
next: v10 
=== Usages ===
i49 
=== Predecessor ===
j93 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v94 stateDuring: ?144 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 46]
stamp: i32
=== Inputs ===
x: i47 
y: i66 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i47 y: i66  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i36 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i47 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i62 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i6 i32 
=== Succesors ===
=== Usages ===
?14 v15 v185 ?145 i32 v96 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i6 i32  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i49 i31 
=== Succesors ===
=== Usages ===
?14 i60 i37 i36 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i49 i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: -1
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v10 
=== Succesors ===
next: v21 
=== Usages ===
i62 i61 v17 v33 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v10 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@4dc6bd49
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i175 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i62 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 19]
profileData: INJECTED designatedSuccessorProbability: 0.5104011035592184
stamp: void
=== Inputs ===
condition: v15 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v15 #trueSuccessor: v20 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 22]
stamp: void
=== Inputs ===
=== Succesors ===
next: v137 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v137  <|@  <|@
tid ?14 <|@
d <@d|@=== Debug Properties ===
bci: 16
bytecode: iload
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4598
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: - i61 a1 i175 i62 
=== Succesors ===
=== Usages ===
v190 v179 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: - i61 a1 i175 i62  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@40aab068
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i62 
y: i175 
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i62 y: i175  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v134 
falseSuccessor: v136 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v134 #falseSuccessor: v136  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: a178 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a178  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
result [v0|QWORD[.] + v11|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a1 
index: i62 
=== Succesors ===
=== Usages ===
a178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a178 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
lastLocationAccess: - 
=== Succesors ===
next: v179 
=== Usages ===
a104 v189 
=== Predecessor ===
v134 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v185 lastLocationAccess: - #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
result [v13|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a178 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140436756758528 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-27147|0xffffffffffff95f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Klass*!(compressed base: 140436756758528 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?14 
guard: - 
address: v189 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
v173 
=== Predecessor ===
a178 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?14 guard: - address: v189 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v173 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140436756758528 shift: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v179 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
result [v15|QWORD + 480] <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v173 
index: - 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v173 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
=== Succesors ===
next: j112 
=== Usages ===
v187 v113 
=== Predecessor ===
v179 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - #next: j112  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
result [v17|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v110 
index: - 
=== Succesors ===
=== Usages ===
j112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v110 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j112 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
lastLocationAccess: - 
=== Succesors ===
next: i28 
=== Usages ===
v113 
=== Predecessor ===
v110 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v187 lastLocationAccess: - #next: i28  <|@  <|@
f <@~|@floating>@ <|@
tid a104 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a178 
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a178  <|@  <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j112 
metaspaceMethod: v110 
arguments: a104 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j112 metaspaceMethod: v110 arguments: a104  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
stamp: i32 [-2147483648 - 2147483616] bits:x...x00000
=== Inputs ===
x: i61 
y: i35 
=== Succesors ===
=== Usages ===
i37 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i61 y: i35  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v21|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 31]
stamp: i32
=== Inputs ===
x: i36 
y: i61 
=== Succesors ===
=== Usages ===
?145 i31 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i36 y: i61  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 43
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Arrays.hashCode(Object[])>
localsSize: 6
locksSize: 0
sourceFile: Arrays.java
sourceLine: 4599
stackSize: 1
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: i37 - - a1 i175 i62 
=== Succesors ===
=== Usages ===
i28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: i37 - - a1 i175 i62  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i28 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 43
identity: ANY_LOCATION
inlineControl: Normal
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v113 
stateDuring: ?145 
=== Succesors ===
next: v33 
=== Usages ===
i31 
=== Predecessor ===
j112 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v113 stateDuring: ?145 #next: v33  <|@  <|@
f <@~|@floating>@ <|@
tid i31 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 46]
stamp: i32
=== Inputs ===
x: i28 
y: i37 
=== Succesors ===
=== Usages ===
i61 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i28 y: i37  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 48]
stamp: i32
=== Inputs ===
x: i62 
y: i6 
=== Succesors ===
=== Usages ===
i62 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i62 y: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
stamp: void
=== Inputs ===
loopBegin: v11 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i28 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v11 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v11 #next: v56  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
v17 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i60 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v55 
values: i61 i6 
=== Succesors ===
=== Usages ===
v34 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v55 values: i61 i6  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 54]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v56 v57 
=== Succesors ===
next: v34 
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v56 v57 #next: v34  <|@  <|@
f <@*|@fixed>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4601) [bci: 55]
stamp: void
=== Inputs ===
memoryMap: - 
result: i60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 25]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 97
mayConvertToGuard: true
nodeSourcePosition: at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@7f1c506c
stamp: void
=== Inputs ===
stateBefore: ?14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOV [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = LEA [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction v5|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction v6|QWORD = MOV [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   24  <|@ instruction v7|QWORD = MOV [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   26  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   36  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v10|DWORD = LEA [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   42  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction v13|DWORD[_] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   56  <|@ instruction v16|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   58  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   60  <|@ instruction v17|QWORD = MOV [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOV [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction v20|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   78  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction v24|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction v5|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction v6|QWORD = MOV [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   24  <|@ instruction v7|QWORD = MOV [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   26  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   36  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v10|DWORD = LEA [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   42  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction v13|DWORD[_] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   56  <|@ instruction v16|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   58  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   60  <|@ instruction v17|QWORD = MOV [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOV [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction v20|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   78  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction v24|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v7|q [0, 1[[32, 36[[74, 78[[96, 98[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- v6|q [0, 1[[30, 35[[72, 77[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[34, 35[[76, 77[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v8|q [0, 6[[28, 35[[70, 77[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|- [6, 86[[100, 107[6 MustHaveRegister 8 MustHaveRegister 14 MustHaveRegister 52 MustHaveRegister 85 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [8, 86[[100, 107[8 MustHaveRegister 10 MustHaveRegister 44 MustHaveRegister 48 MustHaveRegister 85 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [14, 26[14 MustHaveRegister 16 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [16, 20[16 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|d [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [18, 21[18 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [22, 30[22 MustHaveRegister 24 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [24, 32[24 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v2|d [26, 28[26 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d rax|d [36, 38[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [38, 41[38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v24|d [42, 82[[100, 107[44 ShouldHaveRegister 48 ShouldHaveRegister 52 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v23|d [42, 69[[86, 89[[100, 107[66 MustHaveRegister 68 ShouldHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [52, 64[52 MustHaveRegister 54 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [54, 58[54 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v14|d [58, 60[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [56, 59[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [60, 72[60 MustHaveRegister 62 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [62, 74[62 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v13|d [64, 70[64 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v12|d [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d v20|d [68, 80[68 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d rax|d [78, 80[78 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v22|d [80, 85[80 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v11|d [82, 85[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v12|d [94, 96[96 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v7|q [0, 1[[32, 36[[74, 78[[96, 98[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- v6|q [0, 1[[30, 35[[72, 77[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[34, 35[[76, 77[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v8|q [0, 6[[28, 35[[70, 77[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 27[6 MustHaveRegister 8 MustHaveRegister 14 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[r10|d]" v1|d -1 [8, 12[8 MustHaveRegister 10 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rbx|d]" v2|d -1 [14, 26[14 MustHaveRegister 16 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [16, 20[16 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [18, 21[18 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [22, 30[22 MustHaveRegister 24 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r11|q]" v7|q -1 [24, 32[24 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v2|d [26, 28[26 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|d [36, 38[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rsi|d]" v10|d -1 [38, 41[38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v24|d [42, 75[44 ShouldHaveRegister 48 ShouldHaveRegister 52 MustHaveRegister  "OneSpillStore"
  v12|d DWORD "[r8|d]" v12|d v23|d [42, 69[[86, 89[[100, 107[66 MustHaveRegister 68 ShouldHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbx|d]" v13|d -1 [52, 64[52 MustHaveRegister 54 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d -1 [54, 58[54 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q v14|d [58, 60[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r9|q]" v16|q -1 [56, 59[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q -1 [60, 72[60 MustHaveRegister 62 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r9|q]" v18|q -1 [62, 74[62 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q v13|d [64, 70[64 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rcx|d]" v20|d v12|d [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d v20|d [68, 75[68 MustHaveRegister  "OneSpillStore"
  v22|d DWORD "[rax|d]" v22|d rax|d [78, 80[78 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v22|d [80, 85[80 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v11|d [82, 85[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d v12|d [94, 96[96 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[vstack:1|q]" v0|q v0|q [27, 33[ "SpillInDominator"
  v27|d DWORD "[vstack:0|d]" v1|d v1|d [12, 33[ "SpillInDominator"
  v28|d DWORD "[vstack:0|d]" v1|d v1|d [33, 42[ "SpillInDominator"
  v29|q QWORD "[vstack:1|q]" v0|q v0|q [33, 42[ "SpillInDominator"
  v30|d DWORD "[r10|d]" v1|d v1|d [42, 50[44 MustHaveRegister 48 MustHaveRegister  "SpillInDominator"
  v31|q QWORD "[rsi|q]" v0|q v0|q [42, 69[52 MustHaveRegister  "SpillInDominator"
  v32|d DWORD "[vstack:0|d]" v1|d v1|d [50, 75[ "SpillInDominator"
  v33|d DWORD "[vstack:5|d]" v11|d v11|d [75, 82[82 ShouldHaveRegister  "OneSpillStore"
  v34|q QWORD "[vstack:1|q]" v0|q v0|q [69, 75[ "SpillInDominator"
  v35|d DWORD "[vstack:0|d]" v1|d v1|d [75, 86[85 LiveAtLoopEnd  "SpillInDominator"
  v36|d DWORD "[vstack:4|d]" v21|d v21|d [75, 80[80 ShouldHaveRegister  "OneSpillStore"
  v37|q QWORD "[vstack:1|q]" v0|q v0|q [75, 86[85 LiveAtLoopEnd  "SpillInDominator"
  v38|d DWORD "[r11|d]" v11|d v11|d [100, 107[ "OneSpillStore"
  v39|q QWORD "[rsi|q]" v0|q v0|q [100, 107[ "SpillInDominator"
  v40|d DWORD "[r10|d]" v1|d v1|d [100, 107[ "SpillInDominator"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction v5|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction v6|QWORD = MOV [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   24  <|@ instruction v7|QWORD = MOV [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   26  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = STACKMOVE (input: v26|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = STACKMOVE (input: v27|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   36  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v10|DWORD = LEA [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   42  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction v13|DWORD[_] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   56  <|@ instruction v16|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   58  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   60  <|@ instruction v17|QWORD = MOV [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOV [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction v20|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = STACKMOVE (input: v32|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = STACKMOVE (input: v34|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   78  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction v24|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v7|q [0, 1[[32, 36[[74, 78[[96, 98[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- v6|q [0, 1[[30, 35[[72, 77[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[34, 35[[76, 77[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v8|q [0, 6[[28, 35[[70, 77[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 27[6 MustHaveRegister 8 MustHaveRegister 14 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[r10|d]" v1|d -1 [8, 12[8 MustHaveRegister 10 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rbx|d]" v2|d -1 [14, 26[14 MustHaveRegister 16 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [16, 20[16 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [18, 21[18 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [22, 30[22 MustHaveRegister 24 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r11|q]" v7|q -1 [24, 32[24 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v2|d [26, 28[26 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|d [36, 38[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rsi|d]" v10|d -1 [38, 41[38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v24|d [42, 75[44 ShouldHaveRegister 48 ShouldHaveRegister 52 MustHaveRegister  "OneSpillStore"
  v12|d DWORD "[r8|d]" v12|d v23|d [42, 69[[86, 89[[100, 107[66 MustHaveRegister 68 ShouldHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbx|d]" v13|d -1 [52, 64[52 MustHaveRegister 54 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d -1 [54, 58[54 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q v14|d [58, 60[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r9|q]" v16|q -1 [56, 59[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q -1 [60, 72[60 MustHaveRegister 62 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r9|q]" v18|q -1 [62, 74[62 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q v13|d [64, 70[64 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rcx|d]" v20|d v12|d [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d v20|d [68, 75[68 MustHaveRegister  "OneSpillStore"
  v22|d DWORD "[rax|d]" v22|d rax|d [78, 80[78 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v22|d [80, 85[80 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v11|d [82, 85[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d v12|d [94, 96[96 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[vstack:1|q]" v0|q v0|q [27, 33[ "StoreAtDefinition"
  v27|d DWORD "[vstack:0|d]" v1|d v1|d [12, 33[ "StoreAtDefinition"
  v28|d DWORD "[vstack:0|d]" v1|d v1|d [33, 42[ "StoreAtDefinition"
  v29|q QWORD "[vstack:1|q]" v0|q v0|q [33, 42[ "StoreAtDefinition"
  v30|d DWORD "[r10|d]" v1|d v1|d [42, 50[44 MustHaveRegister 48 MustHaveRegister  "StoreAtDefinition"
  v31|q QWORD "[rsi|q]" v0|q v0|q [42, 69[52 MustHaveRegister  "StoreAtDefinition"
  v32|d DWORD "[vstack:0|d]" v1|d v1|d [50, 75[ "StoreAtDefinition"
  v33|d DWORD "[vstack:5|d]" v11|d v11|d [75, 82[82 ShouldHaveRegister  "OneSpillStore"
  v34|q QWORD "[vstack:1|q]" v0|q v0|q [69, 75[ "StoreAtDefinition"
  v35|d DWORD "[vstack:0|d]" v1|d v1|d [75, 86[85 LiveAtLoopEnd  "StoreAtDefinition"
  v36|d DWORD "[vstack:4|d]" v21|d v21|d [75, 80[80 ShouldHaveRegister  "OneSpillStore"
  v37|q QWORD "[vstack:1|q]" v0|q v0|q [75, 86[85 LiveAtLoopEnd  "StoreAtDefinition"
  v38|d DWORD "[r11|d]" v11|d v11|d [100, 107[ "OneSpillStore"
  v39|q QWORD "[rsi|q]" v0|q v0|q [100, 107[ "StoreAtDefinition"
  v40|d DWORD "[r10|d]" v1|d v1|d [100, 107[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction v5|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction v6|QWORD = MOV [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   24  <|@ instruction v7|QWORD = MOV [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   26  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = STACKMOVE (input: v26|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = STACKMOVE (input: v27|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   36  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v10|DWORD = LEA [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   40  <|@ instruction JUMP ~[int[1|0x1], v10|DWORD] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   42  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction v13|DWORD[_] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   56  <|@ instruction v16|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   58  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   60  <|@ instruction v17|QWORD = MOV [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOV [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction v20|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = STACKMOVE (input: v32|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = STACKMOVE (input: v34|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   78  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction v24|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[v24|DWORD, v23|DWORD] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[v12|DWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[int[1|0x1]] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v7|q [0, 1[[32, 36[[74, 78[[96, 98[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- v6|q [0, 1[[30, 35[[72, 77[ "NoOptimization"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 2[[34, 35[[76, 77[ "NoSpillStore"
  rsi|- fixed "[rsi|-]" rsi|- v8|q [0, 6[[28, 35[[70, 77[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[34, 35[[76, 77[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|- [6, 27[6 MustHaveRegister 8 MustHaveRegister 14 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[r10|d]" v1|d -1 [8, 12[8 MustHaveRegister 10 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rbx|d]" v2|d -1 [14, 26[14 MustHaveRegister 16 MustHaveRegister 26 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [16, 20[16 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q v3|d [20, 22[20 MustHaveRegister 22 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r11|q]" v5|q -1 [18, 21[18 MustHaveRegister 20 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [22, 30[22 MustHaveRegister 24 MustHaveRegister 30 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[r11|q]" v7|q -1 [24, 32[24 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v2|d [26, 28[26 MustHaveRegister 28 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rax|d]" v9|d rax|d [36, 38[36 MustHaveRegister 38 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rsi|d]" v10|d -1 [38, 41[38 MustHaveRegister 40 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r11|d]" v11|d v24|d [42, 75[44 ShouldHaveRegister 48 ShouldHaveRegister 52 MustHaveRegister  "OneSpillStore"
  v12|d DWORD "[r8|d]" v12|d v23|d [42, 69[[86, 89[[100, 107[66 MustHaveRegister 68 ShouldHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbx|d]" v13|d -1 [52, 64[52 MustHaveRegister 54 MustHaveRegister 64 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d -1 [54, 58[54 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q v14|d [58, 60[58 MustHaveRegister 60 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r9|q]" v16|q -1 [56, 59[56 MustHaveRegister 58 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q -1 [60, 72[60 MustHaveRegister 62 MustHaveRegister 72 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r9|q]" v18|q -1 [62, 74[62 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q v13|d [64, 70[64 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rcx|d]" v20|d v12|d [66, 68[66 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d v20|d [68, 75[68 MustHaveRegister  "OneSpillStore"
  v22|d DWORD "[rax|d]" v22|d rax|d [78, 80[78 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[rax|d]" v23|d v22|d [80, 85[80 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r11|d]" v24|d v11|d [82, 85[82 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r8|d]" v25|d v12|d [94, 96[96 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[vstack:1|q]" v0|q v0|q [27, 33[ "StoreAtDefinition"
  v27|d DWORD "[vstack:0|d]" v1|d v1|d [12, 33[ "StoreAtDefinition"
  v28|d DWORD "[vstack:0|d]" v1|d v1|d [33, 42[ "StoreAtDefinition"
  v29|q QWORD "[vstack:1|q]" v0|q v0|q [33, 42[ "StoreAtDefinition"
  v30|d DWORD "[r10|d]" v1|d v1|d [42, 50[44 MustHaveRegister 48 MustHaveRegister  "StoreAtDefinition"
  v31|q QWORD "[rsi|q]" v0|q v0|q [42, 69[52 MustHaveRegister  "StoreAtDefinition"
  v32|d DWORD "[vstack:0|d]" v1|d v1|d [50, 75[ "StoreAtDefinition"
  v33|d DWORD "[vstack:5|d]" v11|d v11|d [75, 82[82 ShouldHaveRegister  "OneSpillStore"
  v34|q QWORD "[vstack:1|q]" v0|q v0|q [69, 75[ "StoreAtDefinition"
  v35|d DWORD "[vstack:0|d]" v1|d v1|d [75, 86[85 LiveAtLoopEnd  "StoreAtDefinition"
  v36|d DWORD "[vstack:4|d]" v21|d v21|d [75, 80[80 ShouldHaveRegister  "OneSpillStore"
  v37|q QWORD "[vstack:1|q]" v0|q v0|q [75, 86[85 LiveAtLoopEnd  "StoreAtDefinition"
  v38|d DWORD "[r11|d]" v11|d v11|d [100, 107[ "OneSpillStore"
  v39|q QWORD "[rsi|q]" v0|q v0|q [100, 107[ "StoreAtDefinition"
  v40|d DWORD "[r10|d]" v1|d v1|d [100, 107[ "StoreAtDefinition"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = MOVE v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   14  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction v5|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction v6|QWORD = MOV [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   24  <|@ instruction v7|QWORD = MOV [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   26  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = STACKMOVE (input: v26|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = STACKMOVE (input: v27|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   36  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v10|DWORD = LEA [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE v28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   42  <|@ instruction [v11|DWORD, v12|DWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVE v30|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction v13|DWORD[_] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   56  <|@ instruction v16|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   58  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   60  <|@ instruction v17|QWORD = MOV [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOV [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction v20|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD[.] = MOVE v31|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = STACKMOVE (input: v32|DWORD, ~backupSlot: vstack:3|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = STACKMOVE (input: v34|QWORD[.], ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   78  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction v24|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [v25|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   14  <|@ instruction v2|DWORD[_] = MOV [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction v3|DWORD = MOV [v2|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction v5|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction v4|QWORD = UNCOMPRESSPOINTER (input: v3|DWORD, ~baseRegister: v5|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction v6|QWORD = MOV [v4|QWORD + 480] size: QWORD <|@ <|@
      nr   24  <|@ instruction v7|QWORD = MOV [v6|QWORD + 64] size: QWORD <|@ <|@
      nr   26  <|@ instruction v8|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD = MOVE v6|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = MOVE v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - v0|QWORD[.] v1|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   36  <|@ instruction v9|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction v10|DWORD = LEA [v9|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE v28|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE v29|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPBRANCH (x: v1|DWORD, y: v11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   52  <|@ instruction v13|DWORD[_] = MOV [v0|QWORD[.] + v11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction v14|DWORD = MOV [v13|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   56  <|@ instruction v16|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   58  <|@ instruction v15|QWORD = UNCOMPRESSPOINTER (input: v14|DWORD, ~baseRegister: v16|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   60  <|@ instruction v17|QWORD = MOV [v15|QWORD + 480] size: QWORD <|@ <|@
      nr   62  <|@ instruction v18|QWORD = MOV [v17|QWORD + 64] size: QWORD <|@ <|@
      nr   64  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v13|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction v20|DWORD = SHL v12|DWORD y: 5 size: DWORD <|@ <|@
      nr   68  <|@ instruction v21|DWORD = SUB (x: v20|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = MOVE v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE v21|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: v21|DWORD 
locals: - - v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   78  <|@ instruction v22|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   80  <|@ instruction v23|DWORD = ADD (x: v22|DWORD, y: v21|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction v24|DWORD = INC v11|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE v23|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = MOVE v35|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE v37|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVE v25|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - v12|DWORD v0|QWORD[.] v1|DWORD v11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   24  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   38  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] vstack:0|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   56  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   58  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   60  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   62  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: vstack:4|DWORD 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   80  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: vstack:4|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = INC vstack:5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE r10|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   10  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   14  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   18  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   20  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   22  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   24  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   26  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   28  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   38  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] vstack:0|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   56  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   58  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   60  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   62  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   68  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: vstack:4|DWORD 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   80  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: vstack:4|DWORD) size: DWORD <|@ <|@
      nr   82  <|@ instruction r11|DWORD = INC vstack:5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   96  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  104  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction vstack:1|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction vstack:0|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   28  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   30  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] vstack:0|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   76  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction vstack:5|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction vstack:4|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: vstack:4|DWORD 
locals: - - vstack:1|QWORD[.] vstack:0|DWORD vstack:5|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: vstack:4|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = INC vstack:5|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD = MOVE vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [10, 107[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [6, 107[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [92, 96[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [90, 98[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:28|d]" vstack:0|d -1 [10, 107[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:48|q]" vstack:1|q -1 [6, 107[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:36|d]" vstack:4|d -1 [92, 96[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:32|d]" vstack:5|d -1 [90, 98[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   28  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   30  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   76  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   28  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   30  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   76  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  102  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   28  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   30  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   76  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   28  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   30  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   76  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   28  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   30  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   76  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B7" 
    xhandlers
    flags 
    probability 4604221947477381239
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   28  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   30  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   76  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   28  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   30  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   76  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   28  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   30  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   76  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   28  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   30  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   76  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   28  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   30  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   76  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ st <@st|@reference-map: [rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   10  <|@ instruction stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4604221947477381238
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   22  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0]
locals: rsi|QWORD[.] - - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   26  <|@ instruction r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   28  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   30  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   32  <|@ instruction r11|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   34  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   36  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction rax|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: int[31|0x1f] 
locals: - - stack:48|QWORD[.] stack:28|DWORD int[0|0x0] - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD <|@ <|@
      nr   46  <|@ instruction r8|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B8" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr   62  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B3" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4604478862449508215
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   66  <|@ instruction rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rbx:0, rsi:0, stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] stack:28|DWORD r11|DWORD - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16] <|@ <|@
      nr   70  <|@ instruction r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000] <|@ <|@
      nr   72  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0 <|@ <|@
      nr   74  <|@ instruction rax|QWORD = MOV [rax|QWORD + 480] size: QWORD <|@ <|@
      nr   76  <|@ instruction r9|QWORD = MOV [rax|QWORD + 64] size: QWORD <|@ <|@
      nr   78  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3 <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD <|@ <|@
      nr   82  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction rbx|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction rax|QWORD = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr   90  <|@ instruction stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [stack:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43]
stack: stack:36|DWORD 
locals: - - stack:48|QWORD[.] stack:28|DWORD stack:32|DWORD - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43] <|@ <|@
      nr   96  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr   98  <|@ instruction r11|DWORD = INC stack:32|DWORD size: DWORD <|@ <|@
      nr  100  <|@ instruction r8|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B5 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B5" 
    successors "B4" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4608854004590815223
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   50  <|@ instruction r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD <|@ <|@
      nr   52  <|@ instruction rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  114  <|@ instruction rax|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  116  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" 
    xhandlers
    flags 
    probability 4599592562563178260
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   16  <|@ instruction r8|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  120  <|@ instruction MOV [r15|QWORD + 1156] y: -24859 size: DWORD <|@ <|@
      nr  122  <|@ instruction MOV [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  124  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16]
locals: - r8|DWORD rsi|QWORD[.] r10|DWORD r11|DWORD - 
>@ <|@ instruction DEOPT info [bci:16] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: ifnonnull     6
     4: iconst_0      
     5: ireturn       
     6: iconst_1      
     7: istore_1      
     8: aload_0       
     9: astore_2      
    10: aload_2       
    11: arraylength   
    12: istore_3      
    13: iconst_0      
    14: istore        4
    16: iload         4
    18: iload_3       
    19: if_icmpge     54
    22: aload_2       
    23: iload         4
    25: aaload        
    26: astore        5
    28: bipush        31
    30: iload_1       
    31: imul          
    32: aload         5
    34: ifnonnull     41
    37: iconst_0      
    38: goto          46
    41: aload         5
    43: invokevirtual #98         // java.lang.Object.hashCode:()int
    46: iadd          
    47: istore_1      
    48: iinc          
    51: goto          16
    54: iload_1       
    55: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec289041817f20000000000f851f01000048896c242048893424448b560c44895424144585d20f84d90000008b5e108b04dd0800000049bb000000fbb97f0000498d0403488b80e00100004c8b584048c1e303488bf3488bd8498bc3ffd00f1f8400000000008d701f448bc641bb01000000e966000000453bd30f868d000000428b5c9e108b04dd0800000049b9000000fbb97f0000498d0401488b80e00100004c8b484048c1e303418bc8c1e105412bc8488bf3488bd8498bc144895c2410894c240cffd00f1f8400000000000344240c448b5c241041ffc3448bc0448b542414488b3424453bd37f8c418bc0488b6c24204883c428493ba7500400000f873c000000c341b801000000ebde41c78784040000e59effff49c7879004000000000000e8000000000f1f84000000000048896c2420e800000000e9d2fefffff4488d0db0ffffff49898f68040000e9a4fefffff441c78784040000f5bcffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5aaffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f595ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD  <||@
  Comment 31 6 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 35 8 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 35 [rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 35 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 39 10 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 44 12 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 53 block B2 null  <||@
  Comment 53 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 53 22 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 56 24 rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 56 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 26 r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 73 28 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0  <||@
  Comment 77 30 rax|QWORD = MOV [rax|QWORD + 480] size: QWORD  <||@
  Comment 84 32 r11|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 88 34 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3  <||@
  Comment 92 36 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 95 38 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 98 40 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 101 42 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43]  <||@
  Comment 101 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 101 INLINE_INVOKE  <||@
  Comment 103 [stack:0]at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43, duringCall: true, rethrow: false]
              |0             |1  |2                  |3               |4           |5 
     locals:  |-             |-  |stack:48|QWORD[.]  |stack:28|DWORD  |int[0|0x0]  |- 
     stack:   |int[31|0x1f]  |   |                   |                |            |    <||@
  Comment 111 44 rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD  <||@
  Comment 114 46 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 117 48 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 123 54 JUMP ~[] destination: B2 -> B3  <||@
  Comment 128 block B4 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 128 60 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 128 62 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD  <||@
  Comment 137 block B5 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 137 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 137 66 rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 142 68 rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16]  <||@
  Comment 142 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1         |2             |3               |4          |5 
     locals:  |-  |r8|DWORD  |rsi|QWORD[.]  |stack:28|DWORD  |r11|DWORD  |-   <||@
  Comment 142 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 149 70 r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 159 72 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0  <||@
  Comment 163 74 rax|QWORD = MOV [rax|QWORD + 480] size: QWORD  <||@
  Comment 170 76 r9|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 174 78 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3  <||@
  Comment 178 80 rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD  <||@
  Comment 184 82 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 187 84 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 190 86 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 193 88 rax|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 196 90 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 201 92 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 205 94 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43]  <||@
  Comment 205 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 205 INLINE_INVOKE  <||@
  Comment 207 [stack:0]at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43, duringCall: true, rethrow: false]
              |0               |1  |2                  |3               |4               |5 
     locals:  |-               |-  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |- 
     stack:   |stack:36|DWORD  |   |                   |                |                |    <||@
  Comment 215 96 rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 219 98 r11|DWORD = INC stack:32|DWORD size: DWORD  <||@
  Comment 227 100 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 230 106 JUMP ~[] destination: B5 -> B3  <||@
  Comment 230 block B3 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 230 56 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 230 50 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 235 52 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 239 58 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD  <||@
  Comment 244 block B7 null  <||@
  Comment 244 112 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 244 114 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 247 116 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 256 POLL_RETURN_FAR  <||@
  Comment 270 block B1 null  <||@
  Comment 270 14 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 270 16 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 276 18 JUMP ~[] destination: B1 -> B7  <||@
  Comment 278 block B8 null  <||@
  Comment 278 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 278 120 MOV [r15|QWORD + 1156] y: -24859 size: DWORD  <||@
  Comment 289 122 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 300 124 DEOPT info [bci:16]  <||@
  Comment 300 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 305 [rsi:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1         |2             |3          |4          |5 
     locals:  |-  |r8|DWORD  |rsi|QWORD[.]  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 318 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 343 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 371 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 376 [rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 406 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 411 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 441 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 446 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1         |2             |3               |4          |5 
     locals:  |-  |r8|DWORD  |rsi|QWORD[.]  |stack:28|DWORD  |r11|DWORD  |-   <||@
  Comment 454 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 454 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 460 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 460 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6735[java.util.Arrays.hashCode(Object[])]"
  method "HotSpotCompilation-6735[java.util.Arrays.hashCode(Object[])]"
  date 1714038241815
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7fba63d1ca80 89842400c0feff4883ec289041817f20000000000f851f01000048896c242048893424448b560c44895424144585d20f84d90000008b5e108b04dd0800000049bb000000fbb97f0000498d0403488b80e00100004c8b584048c1e303488bf3488bd8498bc3ffd00f1f8400000000008d701f448bc641bb01000000e966000000453bd30f868d000000428b5c9e108b04dd0800000049b9000000fbb97f0000498d0401488b80e00100004c8b484048c1e303418bc8c1e105412bc8488bf3488bd8498bc144895c2410894c240cffd00f1f8400000000000344240c448b5c241041ffc3448bc0448b542414488b3424453bd37f8c418bc0488b6c24204883c428493ba7500400000f873c000000c341b801000000ebde41c78784040000e59effff49c7879004000000000000e8c9e5e6fe0f1f84000000000048896c2420e85de6e4fee9d2fefffff4488d0db0ffffff49898f68040000e924f4e6fef441c78784040000f5bcffff49c7879004000000000000e882e5e6fe0f1f84000000000041c78784040000f5aaffff49c7879004000000000000e85fe5e6fe0f1f84000000000041c78784040000f595ffff49c7879004000000000000e83ce5e6fe0f1f840000000000e8b592fafef4e8cfe2e6fef4f4f4f4f4f4f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 31 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@5cc7f2b7 slotKind: QWORD  <||@
  Comment 31 6 stack:48|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 35 8 r10|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 35 [rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 35 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 39 10 stack:28|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 44 12 TESTBRANCH (x: r10|DWORD, y: r10|DWORD) trueDestinationProbability: 0.32867834261331663 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 53 block B2 null  <||@
  Comment 53 20 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 53 22 rbx|DWORD[_] = MOV [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 56 24 rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 56 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 56 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 63 26 r11|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 73 28 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r11|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0  <||@
  Comment 77 30 rax|QWORD = MOV [rax|QWORD + 480] size: QWORD  <||@
  Comment 84 32 r11|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 88 34 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3  <||@
  Comment 92 36 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 95 38 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 98 40 rax|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 101 42 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43]  <||@
  Comment 101 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 101 INLINE_INVOKE  <||@
  Comment 103 [stack:0]at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43, duringCall: true, rethrow: false]
              |0             |1  |2                  |3               |4           |5 
     locals:  |-             |-  |stack:48|QWORD[.]  |stack:28|DWORD  |int[0|0x0]  |- 
     stack:   |int[31|0x1f]  |   |                   |                |            |    <||@
  Comment 111 44 rsi|DWORD = LEA [rax|DWORD + 31] size: DWORD  <||@
  Comment 114 46 r8|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 117 48 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 123 54 JUMP ~[] destination: B2 -> B3  <||@
  Comment 128 block B4 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 128 60 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 128 62 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B8 size: DWORD  <||@
  Comment 137 block B5 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 137 64 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 137 66 rbx|DWORD[_] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 142 68 rax|DWORD = MOV [rbx|DWORD[_] * 8 + 8] size: DWORD state [bci:16]  <||@
  Comment 142 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1         |2             |3               |4          |5 
     locals:  |-  |r8|DWORD  |rsi|QWORD[.]  |stack:28|DWORD  |r11|DWORD  |-   <||@
  Comment 142 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 149 70 r9|QWORD = MOVE input: long[140436756758528|0x7fb9fb000000]  <||@
  Comment 159 72 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r9|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 140436756758528 shift: 0  <||@
  Comment 163 74 rax|QWORD = MOV [rax|QWORD + 480] size: QWORD  <||@
  Comment 170 76 r9|QWORD = MOV [rax|QWORD + 64] size: QWORD  <||@
  Comment 174 78 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2976da05 encoding: base: 0 shift: 3  <||@
  Comment 178 80 rcx|DWORD = SHL r8|DWORD y: 5 size: DWORD  <||@
  Comment 184 82 rcx|DWORD = SUB (x: rcx|DWORD, ~y: r8|DWORD) size: DWORD  <||@
  Comment 187 84 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 190 86 rbx|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 193 88 rax|QWORD = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 196 90 stack:32|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 201 92 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 205 94 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:43]  <||@
  Comment 205 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 205 INLINE_INVOKE  <||@
  Comment 207 [stack:0]at java.util.Arrays.hashCode(Arrays.java:4599) [bci: 43, duringCall: true, rethrow: false]
              |0               |1  |2                  |3               |4               |5 
     locals:  |-               |-  |stack:48|QWORD[.]  |stack:28|DWORD  |stack:32|DWORD  |- 
     stack:   |stack:36|DWORD  |   |                   |                |                |    <||@
  Comment 215 96 rax|DWORD = ADD (x: rax|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 219 98 r11|DWORD = INC stack:32|DWORD size: DWORD  <||@
  Comment 227 100 r8|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 230 106 JUMP ~[] destination: B5 -> B3  <||@
  Comment 230 block B3 loop 0 depth 1 header:11|LoopBegin  <||@
  Comment 230 56 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 230 50 r10|DWORD = MOVE stack:28|DWORD moveKind: DWORD  <||@
  Comment 235 52 rsi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 239 58 CMPBRANCH (x: r10|DWORD, y: r11|DWORD) trueDestinationProbability: 0.5104011035592184 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD  <||@
  Comment 244 block B7 null  <||@
  Comment 244 112 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 244 114 rax|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 247 116 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@5d8b60c9  <||@
  Comment 256 POLL_RETURN_FAR  <||@
  Comment 270 block B1 null  <||@
  Comment 270 14 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 270 16 r8|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 276 18 JUMP ~[] destination: B1 -> B7  <||@
  Comment 278 block B8 null  <||@
  Comment 278 118 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 278 120 MOV [r15|QWORD + 1156] y: -24859 size: DWORD  <||@
  Comment 289 122 MOV [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 300 124 DEOPT info [bci:16]  <||@
  Comment 300 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 305 [rsi:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1         |2             |3          |4          |5 
     locals:  |-  |r8|DWORD  |rsi|QWORD[.]  |r10|DWORD  |r11|DWORD  |-   <||@
  Comment 318 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7fba7b633598, value=140438496784928]:0x7fba62b6b220}  <||@
  Comment 343 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7fba7b6335a0, value=140438496919552]:0x7fba62b8c000}  <||@
  Comment 371 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 376 [rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 406 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 411 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4593) [bci: 0, duringCall: false, rethrow: false]
              |0             |1  |2  |3  |4  |5 
     locals:  |rsi|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 441 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7fba7b6335a8, value=140438496915834]:0x7fba62b8b17a}  <||@
  Comment 446 [rbx:0, rsi:0, stack:0]at java.util.Arrays.hashCode(Arrays.java:4598) [bci: 16, duringCall: false, rethrow: false]
              |0  |1         |2             |3               |4          |5 
     locals:  |-  |r8|DWORD  |rsi|QWORD[.]  |stack:28|DWORD  |r11|DWORD  |-   <||@
  Comment 454 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7fba62cc5f00:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 454 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 460 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7fba7b6335b8, value=140438496915232]:0x7fba62b8af20}  <||@
  Comment 460 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
